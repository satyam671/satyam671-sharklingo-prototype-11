{"file_contents":{"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nShark Tank Lingo is a modern, responsive educational website that demystifies complex business terminology from Shark Tank India. The application serves as an interactive glossary where business terms are explained in simple, layman's language, supported by real-world examples, Shark Tank references, and quotes from Indian judges. The platform targets casual Shark Tank viewers, aspiring entrepreneurs, students, and anyone looking to understand startup terminology without jargon.\n\nThe application features a searchable glossary, gamified quizzes, curated learning paths, and a blog section. It's designed as a static website with no authentication requirements, prioritizing accessibility and educational engagement through a playful, Duolingo-meets-startup-school approach.\n\n# Recent Changes\n\n## Category Reorganization (August 30, 2025)\n- Consolidated business term categories from 17 to 11 categories for better organization\n- Removed 4 empty categories: testing-feedback, startup-culture, product-development, customer-growth  \n- Merged funding-investment → valuation-funding for better term distribution\n- Merged operations-supply and product-tech → product-operations for operational coherence\n- Split financial-accounting → financial-metrics (performance indicators) and business-accounting (accounting processes)\n- Updated TypeScript types to reflect new category structure\n- All 141+ business terms successfully redistributed across optimized categories\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\nThe application is built as a single-page application (SPA) using React with TypeScript. The architecture follows a component-based design pattern with:\n\n- **React Router**: Uses Wouter for lightweight client-side routing\n- **State Management**: TanStack Query for server state management and local React state for UI interactions\n- **Component Library**: shadcn/ui components built on Radix UI primitives for consistent, accessible UI elements\n- **Styling**: Tailwind CSS with a custom Shark Tank-inspired color palette and Playfair Display serif fonts\n- **Build System**: Vite for fast development and optimized production builds\n\n## Backend Architecture\nThe backend uses Express.js with TypeScript, following a simple REST API pattern:\n\n- **Server Framework**: Express.js with middleware for JSON parsing and request logging\n- **Database Layer**: Drizzle ORM configured for PostgreSQL with schema definitions in shared directory\n- **Storage Interface**: Abstracted storage layer with in-memory implementation for development\n- **Session Management**: Connect-pg-simple for PostgreSQL session storage\n- **Development**: Vite integration for seamless full-stack development\n\n## Data Architecture\n- **Database**: PostgreSQL with Drizzle ORM for type-safe database operations\n- **Schema Management**: Centralized schema definitions in `/shared/schema.ts` for type sharing between frontend and backend\n- **Data Storage**: Business terms, quiz questions, and blog posts are currently stored as TypeScript data files for static content\n\n## Design System\n- **Color Palette**: Shark Tank-inspired gradient colors (#010326, #0F468C, #0578A6, #049DBF, #F2C744)\n- **Typography**: Playfair Display for headings (serif) and Inter for body text\n- **Component System**: Consistent design tokens through CSS variables and Tailwind configuration\n- **Responsive Design**: Mobile-first approach with Material Design influence\n\n## Key Features Architecture\n- **Search Functionality**: Client-side filtering with custom hooks for term searching and categorization\n- **Quiz System**: Interactive quiz engine with progress tracking and explanations\n- **Content Organization**: Themed collections and categorized learning paths\n- **Educational Content**: Structured business term definitions with multiple explanation layers\n\n# External Dependencies\n\n## Core Framework Dependencies\n- **React**: Frontend UI framework with TypeScript support\n- **Express.js**: Backend server framework\n- **Vite**: Build tool and development server\n- **Wouter**: Lightweight routing library for React\n\n## Database and ORM\n- **PostgreSQL**: Primary database (configured via DATABASE_URL environment variable)\n- **Drizzle ORM**: Type-safe database toolkit with migration support\n- **@neondatabase/serverless**: Serverless PostgreSQL client\n\n## UI and Styling\n- **Tailwind CSS**: Utility-first CSS framework\n- **Radix UI**: Unstyled, accessible UI primitives\n- **shadcn/ui**: Pre-built component library\n- **Lucide React**: Icon library\n- **Google Fonts**: Typography (Playfair Display, Inter)\n\n## State Management and Data Fetching\n- **TanStack Query**: Server state management and caching\n- **React Hook Form**: Form state management with validation\n- **Zod**: Schema validation library\n\n## Development and Build Tools\n- **TypeScript**: Type safety across the application\n- **ESBuild**: Fast JavaScript bundler for production\n- **PostCSS**: CSS processing with Autoprefixer\n- **Drizzle Kit**: Database migration and schema management tools\n\n## Session and Storage\n- **connect-pg-simple**: PostgreSQL session store for Express\n- **date-fns**: Date manipulation library\n\nThe application is designed to be deployed on platforms like Vercel or Netlify, with the database hosted on services like Neon or Supabase for PostgreSQL support.","size_bytes":5402},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        \"shark-navy\": \"var(--shark-navy)\",\n        \"shark-blue\": \"var(--shark-blue)\",\n        \"shark-teal\": \"var(--shark-teal)\",\n        \"shark-cyan\": \"var(--shark-cyan)\",\n        \"shark-gold\": \"var(--shark-gold)\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2981},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Health check endpoint\n  app.get(\"/api/health\", (req, res) => {\n    res.json({ status: \"ok\", message: \"Server is running\" });\n  });\n\n  // Simple static data endpoints for terms and quiz\n  app.get(\"/api/terms\", (req, res) => {\n    // This would normally fetch from database\n    // For now, return empty array since we removed database integration\n    res.json([]);\n  });\n\n  app.get(\"/api/quiz/questions\", (req, res) => {\n    // This would normally fetch from database\n    // For now, return empty array since we removed database integration\n    res.json([]);\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}","size_bytes":793},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"client/src/App.tsx":{"content":"import { Switch, Route, useLocation } from \"wouter\";\nimport { useEffect } from \"react\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/Home\";\nimport TermDetail from \"./pages/TermDetail\";\nimport BlogDetail from \"./pages/BlogDetail\";\nimport LearningPathDetail from \"./pages/LearningPathDetail\";\nimport CategoryPage from \"./pages/CategoryPage\";\nimport GlossaryHome from \"./pages/GlossaryHome\";\nimport About from \"./pages/About\";\nimport Privacy from \"./pages/Privacy\";\nimport Terms from \"./pages/Terms\";\nimport Contact from \"./pages/Contact\";\nimport Quiz from \"./pages/Quiz\";\n\n// ScrollToTop component to handle automatic scroll restoration\nfunction ScrollToTop() {\n  const [location] = useLocation();\n  \n  useEffect(() => {\n    // Scroll to top whenever the route changes\n    window.scrollTo({ top: 0, left: 0, behavior: 'instant' });\n  }, [location]);\n  \n  return null;\n}\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/glossary\" component={GlossaryHome} />\n      <Route path=\"/glossary/:category\" component={CategoryPage} />\n      <Route path=\"/term/:id\" component={TermDetail} />\n      <Route path=\"/blog/:id\" component={BlogDetail} />\n      <Route path=\"/learning-path/:id\" component={LearningPathDetail} />\n      <Route path=\"/quiz\" component={Quiz} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/privacy\" component={Privacy} />\n      <Route path=\"/terms\" component={Terms} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <ScrollToTop />\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;","size_bytes":2055},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;0,600;0,700;1,400&family=Inter:wght@300;400;500;600;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(232, 92%, 9%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(232, 92%, 9%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(232, 92%, 9%);\n  --primary: hsl(203, 88%, 53%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(232, 92%, 9%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(210, 2%, 90%);\n  --muted-foreground: hsl(232, 92%, 9%);\n  --accent: hsl(203, 88%, 53%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(214, 32%, 91%);\n  --input: hsl(214, 32%, 91%);\n  --ring: hsl(203, 88%, 53%);\n  \n  /* Shark Tank Color Palette - Updated to match specification */\n  --shark-navy: hsl(232, 96%, 8%); /* #010326 */\n  --shark-blue: hsl(216, 83%, 31%); /* #0F468C */\n  --shark-teal: hsl(196, 93%, 35%); /* #0578A6 */\n  --shark-cyan: hsl(192, 96%, 52%); /* #049DBF */\n  --shark-gold: hsl(49, 89%, 64%); /* #F2D852 */\n  \n  --font-sans: 'Inter', sans-serif;\n  --font-serif: 'Merriweather', serif;\n  --font-mono: 'JetBrains Mono', monospace;\n  --radius: 0.75rem;\n}\n\n.dark {\n  --background: hsl(232, 92%, 9%);\n  --foreground: hsl(0, 0%, 98%);\n  --card: hsl(232, 84%, 12%);\n  --card-foreground: hsl(0, 0%, 98%);\n  --popover: hsl(232, 92%, 9%);\n  --popover-foreground: hsl(0, 0%, 98%);\n  --primary: hsl(203, 88%, 53%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(0, 0%, 98%);\n  --secondary-foreground: hsl(232, 92%, 9%);\n  --muted: hsl(232, 84%, 15%);\n  --muted-foreground: hsl(215, 20%, 65%);\n  --accent: hsl(203, 88%, 53%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(215, 27%, 32%);\n  --input: hsl(215, 27%, 32%);\n  --ring: hsl(203, 88%, 53%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  \n  body {\n    @apply bg-background text-foreground font-sans antialiased;\n  }\n\n  .gradient-hero {\n    background: linear-gradient(135deg, hsl(232, 96%, 8%) 0%, hsl(216, 83%, 20%) 25%, hsl(196, 93%, 25%) 50%, hsl(192, 96%, 35%) 75%, hsl(49, 89%, 45%) 100%);\n  }\n\n  .card-hover {\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .card-hover:hover {\n    transform: translateY(-8px);\n    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25), 0 10px 25px -5px rgba(0, 0, 0, 0.1);\n  }\n\n  .logo-glow {\n    filter: drop-shadow(0 0 10px rgba(73, 157, 191, 0.3));\n    transition: filter 0.3s ease;\n  }\n\n  .logo-glow:hover {\n    filter: drop-shadow(0 0 20px rgba(73, 157, 191, 0.6));\n  }\n\n  .quiz-option {\n    transition: all 0.2s ease;\n  }\n\n  .quiz-option:hover {\n    background-color: hsl(192, 96%, 52%, 0.1);\n    border-color: hsl(192, 96%, 52%);\n  }\n\n  .quiz-option.correct {\n    background-color: hsl(142, 76%, 36%, 0.1);\n    border-color: hsl(142, 76%, 36%);\n  }\n\n  .quiz-option.incorrect {\n    background-color: hsl(0, 84%, 60%, 0.1);\n    border-color: hsl(0, 84%, 60%);\n  }\n\n  .line-clamp-1 {\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 1;\n  }\n\n  .line-clamp-2 {\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n  }\n}\n\n@layer utilities {\n  .text-shark-navy {\n    color: hsl(232, 96%, 8%);\n  }\n  \n  .text-shark-blue {\n    color: hsl(216, 83%, 31%);\n  }\n  \n  .text-shark-teal {\n    color: hsl(196, 93%, 35%);\n  }\n  \n  .text-shark-cyan {\n    color: hsl(192, 96%, 52%);\n  }\n  \n  .text-shark-gold {\n    color: hsl(49, 89%, 64%);\n  }\n  \n  .bg-shark-navy {\n    background-color: hsl(232, 96%, 8%);\n  }\n  \n  .bg-shark-blue {\n    background-color: hsl(216, 83%, 31%);\n  }\n  \n  .bg-shark-teal {\n    background-color: hsl(196, 93%, 35%);\n  }\n  \n  .bg-shark-cyan {\n    background-color: hsl(192, 96%, 52%);\n  }\n  \n  .bg-shark-gold {\n    background-color: hsl(49, 89%, 64%);\n  }\n  \n  .border-shark-navy {\n    border-color: hsl(232, 96%, 8%);\n  }\n  \n  .border-shark-blue {\n    border-color: hsl(216, 83%, 31%);\n  }\n  \n  .border-shark-teal {\n    border-color: hsl(196, 93%, 35%);\n  }\n  \n  .border-shark-cyan {\n    border-color: hsl(192, 96%, 52%);\n  }\n  \n  .border-shark-gold {\n    border-color: hsl(49, 89%, 64%);\n  }\n}\n","size_bytes":4451},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/BlogSection.tsx":{"content":"import { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { ArrowRight, Calendar } from 'lucide-react';\nimport { detailedBlogPosts } from '@/data/detailedBlogPosts';\nimport { useLocation } from 'wouter';\n\nconst blogPosts = detailedBlogPosts.map(post => ({\n  id: post.id,\n  title: post.title,\n  excerpt: post.excerpt,\n  date: post.date,\n  category: post.category,\n  image: post.image,\n  categoryColor: post.categoryColor\n}));\n\nexport default function BlogSection() {\n  const [location, navigate] = useLocation();\n  return (\n    <section id=\"blog\" className=\"bg-gray-50 py-16 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-serif font-bold text-shark-navy mb-4\">\n            Latest Insights\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Stay updated with the latest business terminology trends and Shark Tank episode breakdowns.\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {blogPosts.map(post => (\n            <Card key={post.id} className=\"bg-white rounded-2xl shadow-lg overflow-hidden card-hover cursor-pointer\" data-testid={`blog-post-${post.id}`} onClick={() => navigate(`/blog/${post.id}`)}>\n              <img \n                src={post.image} \n                alt={post.title}\n                className=\"w-full h-48 object-cover\"\n              />\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center mb-3\">\n                  <Badge className={`${post.categoryColor} px-3 py-1 rounded-full text-sm font-medium`}>\n                    {post.category}\n                  </Badge>\n                  <div className=\"flex items-center text-gray-500 text-sm ml-3\">\n                    <Calendar size={14} className=\"mr-1\" />\n                    {post.date}\n                  </div>\n                </div>\n                <h3 className=\"text-xl font-serif font-bold text-shark-navy mb-3\">\n                  {post.title}\n                </h3>\n                <p className=\"text-gray-600 text-sm mb-4\">{post.excerpt}</p>\n                <div className=\"flex items-center gap-4 text-xs text-gray-500 mb-4\">\n                  <span>By {detailedBlogPosts.find(p => p.id === post.id)?.author || 'Shark Tank Lingo Team'}</span>\n                  <span>•</span>\n                  <span>{detailedBlogPosts.find(p => p.id === post.id)?.readTime || '5 min read'}</span>\n                </div>\n                <Button \n                  variant=\"ghost\" \n                  className={`${post.categoryColor.split(' ')[1]} hover:${post.categoryColor.split(' ')[1]}/80 font-semibold text-sm p-0`}\n                  data-testid={`read-more-${post.id}`}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    navigate(`/blog/${post.id}`);\n                  }}\n                >\n                  Read More <ArrowRight className=\"ml-2 h-4 w-4\" />\n                </Button>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        <div className=\"text-center mt-12\">\n          <Button \n            variant=\"outline\"\n            className=\"bg-white hover:bg-gray-50 text-shark-navy border-2 border-shark-navy px-8 py-4 rounded-full font-semibold text-lg transition-colors shadow-lg\"\n            data-testid=\"view-all-articles\"\n          >\n            View All Articles\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3656},"client/src/components/Footer.tsx":{"content":"import { Twitter, Linkedin, Youtube, Instagram } from 'lucide-react';\nimport { Link, useLocation } from 'wouter';\nimport sharkTankLogo from '@/assets/shark-tank-logo.png';\n\nexport default function Footer() {\n  const [location, setLocation] = useLocation();\n  \n  const handleSectionNavigation = (sectionId: string) => {\n    if (location === '/') {\n      // If on home page, scroll to section\n      const element = document.getElementById(sectionId);\n      element?.scrollIntoView({ behavior: 'smooth' });\n    } else {\n      // If on other pages, store target section and navigate to home\n      sessionStorage.setItem('scrollToSection', sectionId);\n      setLocation('/');\n    }\n  };\n\n  return (\n    <footer className=\"bg-shark-navy text-white py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"grid md:grid-cols-4 gap-8\">\n          <div className=\"md:col-span-2\">\n            <Link href=\"/\" className=\"flex items-center space-x-3 mb-4\">\n              <img \n                src={sharkTankLogo} \n                alt=\"Shark Tank\" \n                className=\"h-6 w-auto\"\n                data-testid=\"footer-shark-tank-logo\"\n              />\n              <h3 className=\"text-xl font-serif font-bold\">\n                <span className=\"text-shark-cyan\">SHARK</span>\n                <span className=\"text-white\">TANK</span>{' '}\n                <span className=\"text-shark-gold\">Lingo</span>\n              </h3>\n            </Link>\n            <p className=\"text-gray-300 mb-4\">\n              Demystifying business terminology for aspiring entrepreneurs and curious learners worldwide.\n            </p>\n            <div className=\"flex space-x-4\">\n              <button className=\"text-gray-400 hover:text-shark-gold transition-colors\" data-testid=\"footer-twitter\">\n                <Twitter size={20} />\n              </button>\n              <button className=\"text-gray-400 hover:text-shark-gold transition-colors\" data-testid=\"footer-linkedin\">\n                <Linkedin size={20} />\n              </button>\n              <button className=\"text-gray-400 hover:text-shark-gold transition-colors\" data-testid=\"footer-youtube\">\n                <Youtube size={20} />\n              </button>\n              <button className=\"text-gray-400 hover:text-shark-gold transition-colors\" data-testid=\"footer-instagram\">\n                <Instagram size={20} />\n              </button>\n            </div>\n          </div>\n          \n          <div>\n            <h4 className=\"font-semibold mb-4\">Quick Links</h4>\n            <ul className=\"space-y-2\">\n              <li>\n                <button \n                  onClick={() => handleSectionNavigation('glossary')}\n                  className=\"text-gray-300 hover:text-white transition-colors\"\n                  data-testid=\"footer-glossary\"\n                >\n                  Business Glossary\n                </button>\n              </li>\n              <li>\n                <button \n                  onClick={() => handleSectionNavigation('quiz')}\n                  className=\"text-gray-300 hover:text-white transition-colors\"\n                  data-testid=\"footer-quiz\"\n                >\n                  Take Quiz\n                </button>\n              </li>\n              <li>\n                <button \n                  onClick={() => handleSectionNavigation('blog')}\n                  className=\"text-gray-300 hover:text-white transition-colors\"\n                  data-testid=\"footer-blog\"\n                >\n                  Blog\n                </button>\n              </li>\n              <li>\n                <Link \n                  href=\"/glossary\"\n                  className=\"text-gray-300 hover:text-white transition-colors\"\n                  data-testid=\"footer-collections\"\n                >\n                  Collections\n                </Link>\n              </li>\n            </ul>\n          </div>\n          \n          <div>\n            <h4 className=\"font-semibold mb-4\">Resources</h4>\n            <ul className=\"space-y-2\">\n              <li>\n                <Link href=\"/about\" className=\"text-gray-300 hover:text-white transition-colors\" data-testid=\"footer-about\">\n                  About Us\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/privacy\" className=\"text-gray-300 hover:text-white transition-colors\" data-testid=\"footer-privacy\">\n                  Privacy Policy\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/terms\" className=\"text-gray-300 hover:text-white transition-colors\" data-testid=\"footer-terms\">\n                  Terms of Service\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/contact\" className=\"text-gray-300 hover:text-white transition-colors\" data-testid=\"footer-contact\">\n                  Contact\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-gray-700 pt-8 mt-8 text-center\">\n          <p className=\"text-gray-400\">\n            © 2024 Shark Tank Lingo. All rights reserved. Made with ❤️ for entrepreneurs.\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":5236},"client/src/components/GlossarySection.tsx":{"content":"import { Link, useLocation } from 'wouter';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { businessTerms, businessCategories } from '@/data/businessTerms';\nimport { BookOpen, ArrowRight } from 'lucide-react';\n\nexport default function GlossarySection() {\n  const totalTerms = businessTerms.length;\n  const categories = Object.values(businessCategories);\n  const [location, setLocation] = useLocation();\n  \n  const scrollToQuiz = () => {\n    if (location === '/') {\n      // Already on home page, just scroll\n      const element = document.getElementById('quiz');\n      element?.scrollIntoView({ behavior: 'smooth' });\n    } else {\n      // Navigate to home page and then scroll to quiz\n      setLocation('/');\n      setTimeout(() => {\n        const element = document.getElementById('quiz');\n        element?.scrollIntoView({ behavior: 'smooth' });\n      }, 100);\n    }\n  };\n\n  // Get term count for each category\n  const getCategoryTermCount = (categorySlug: string) => {\n    return businessTerms.filter(term => term.category === categorySlug).length;\n  };\n\n  return (\n    <section id=\"glossary\" className=\"py-16 px-4 sm:px-6 lg:px-8 bg-gray-50 pt-[50px] pb-[50px]\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-serif font-bold text-shark-navy mb-4\">\n            Master the Language of Business\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-6\">\n            Explore our comprehensive collection of {totalTerms}+ business terms organized across {categories.length} categories, \n            with real-world examples and Shark Tank insights to boost your entrepreneurial vocabulary.\n          </p>\n          <div className=\"flex justify-center gap-4 mb-8\">\n            <Badge className=\"bg-shark-blue text-white px-4 py-2 text-lg\">\n              {totalTerms}+ Terms\n            </Badge>\n            <Badge className=\"bg-shark-gold text-shark-navy px-4 py-2 text-lg\">\n              {categories.length} Categories\n            </Badge>\n          </div>\n        </div>\n\n        {/* Featured Categories Grid */}\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12\">\n          {categories.slice(0, 6).map(category => {\n            const termCount = getCategoryTermCount(category.slug);\n            return (\n              <Link key={category.slug} href={`/glossary/${category.slug}`}>\n                <Card className=\"hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 cursor-pointer h-full\">\n                  <CardHeader>\n                    <div className={`inline-flex items-center justify-center w-14 h-14 bg-gradient-to-br ${category.color} rounded-xl mb-3 shadow-lg`}>\n                      <span className=\"text-xl\">{category.icon}</span>\n                    </div>\n                    <div className=\"flex justify-between items-start mb-2\">\n                      <CardTitle className=\"text-lg font-bold text-shark-navy\">\n                        {category.name}\n                      </CardTitle>\n                      <Badge variant=\"outline\" className=\"ml-2\">\n                        {termCount}\n                      </Badge>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-gray-600 mb-4 line-clamp-2\">\n                      {category.description}\n                    </p>\n                    <div className=\"flex items-center text-shark-blue font-medium\">\n                      <span>Explore {termCount} terms</span>\n                      <ArrowRight className=\"ml-2 h-4 w-4\" />\n                    </div>\n                  </CardContent>\n                </Card>\n              </Link>\n            );\n          })}\n        </div>\n\n        {/* Popular Terms Preview */}\n        <div className=\"mb-12\">\n          <h3 className=\"text-2xl font-serif font-bold text-shark-navy mb-6 text-center\">\n            Popular Business Terms\n          </h3>\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            {businessTerms.slice(0, 8).map(term => (\n              <Link key={term.id} href={`/term/${term.id}`}>\n                <Card className=\"hover:shadow-lg transition-shadow cursor-pointer\">\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex items-center gap-3\">\n                      <span className=\"text-2xl\">{term.icon}</span>\n                      <div>\n                        <h4 className=\"font-semibold text-shark-navy\">{term.term}</h4>\n                        <p className=\"text-sm text-gray-600 capitalize\">{term.difficulty}</p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </Link>\n            ))}\n          </div>\n        </div>\n\n        {/* Call to Actions */}\n        <div className=\"text-center\">\n          <div className=\"flex flex-col sm:flex-row justify-center gap-4\">\n            <Link href=\"/glossary\">\n              <Button \n                className=\"bg-shark-blue hover:bg-shark-teal text-white px-8 py-4 rounded-full font-semibold text-lg transition-colors shadow-lg pl-[32px] pr-[32px] pt-[20px] pb-[20px]\"\n                data-testid=\"explore-all-terms\"\n              >\n                <BookOpen className=\"mr-2 h-5 w-5\" />\n                Browse All {totalTerms}+ Terms\n              </Button>\n            </Link>\n            <Button \n              onClick={scrollToQuiz}\n              variant=\"outline\"\n              className=\"border-shark-blue text-shark-blue hover:bg-shark-blue hover:text-white px-8 py-4 rounded-full font-semibold text-lg transition-colors pt-[20px] pb-[20px]\"\n              data-testid=\"test-knowledge-btn\"\n            >\n              Test Your Knowledge\n            </Button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":6026},"client/src/components/Hero.tsx":{"content":"import { useState, useMemo, useRef, useEffect } from 'react';\nimport { Search, Lightbulb, Target, Gamepad2, TrendingUp } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { businessTerms } from '@/data/businessTerms';\nimport { BusinessTerm } from '@/types';\nimport CompactTermCard from './CompactTermCard';\nimport { useLocation } from 'wouter';\n\ninterface HeroProps {\n  searchQuery: string;\n  setSearchQuery: (query: string) => void;\n}\n\nexport default function Hero({ searchQuery, setSearchQuery }: HeroProps) {\n  const [showResults, setShowResults] = useState(false);\n  const searchRef = useRef<HTMLDivElement>(null);\n  \n  // Filter terms based on search query\n  const filteredTerms = useMemo(() => {\n    if (!searchQuery.trim()) return [];\n    \n    const query = searchQuery.toLowerCase();\n    return businessTerms\n      .filter(term =>\n        term.term.toLowerCase().includes(query) ||\n        term.simpleExplanation.toLowerCase().includes(query) ||\n        term.businessDefinition.toLowerCase().includes(query)\n      )\n      .slice(0, 3); // Show top 3 results to fit term cards\n  }, [searchQuery]);\n  \n  // Handle click outside to close dropdown\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (searchRef.current && !searchRef.current.contains(event.target as Node)) {\n        setShowResults(false);\n      }\n    };\n    \n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setSearchQuery(value);\n    setShowResults(value.trim().length > 0);\n  };\n  \n  const [, setLocation] = useLocation();\n\n  return (\n    <section className=\"gradient-hero py-20 px-4 sm:px-6 lg:px-8 text-center\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-4xl md:text-6xl font-serif font-bold text-white mb-6\">\n            Business Terms, <span className=\"text-shark-gold\">Simply Explained</span>\n          </h1>\n          <p className=\"text-xl md:text-2xl text-gray-100 mb-8\">\n            Decode the language of entrepreneurship with real-world examples from Shark Tank pitches and beyond\n          </p>\n        </div>\n        \n        {/* Search Bar */}\n        <div className=\"max-w-2xl mx-auto mb-12\" ref={searchRef}>\n          <div className=\"relative\">\n            <Input\n              type=\"text\"\n              placeholder=\"Search business terms... (e.g. 'valuation', 'equity')\"\n              value={searchQuery}\n              onChange={handleInputChange}\n              onFocus={() => {\n                if (searchQuery.trim()) {\n                  setShowResults(true);\n                }\n              }}\n              className=\"w-full px-6 py-4 text-lg rounded-full border-0 shadow-2xl focus:ring-4 focus:ring-shark-gold/30 pl-14\"\n              data-testid=\"hero-search-input\"\n            />\n            <Search className=\"absolute left-5 top-1/2 transform -translate-y-1/2 text-gray-400\" size={20} />\n            \n            {/* Search Results Dropdown */}\n            {showResults && filteredTerms.length > 0 && (\n              <div className=\"absolute top-full left-0 right-0 mt-2 bg-gray-50 rounded-2xl shadow-2xl border-0 overflow-hidden z-50 max-h-[80vh] overflow-y-auto\">\n                <div className=\"p-4 bg-white border-b\">\n                  <p className=\"text-sm font-medium text-gray-600\">\n                    Found {filteredTerms.length} result{filteredTerms.length === 1 ? '' : 's'}\n                  </p>\n                </div>\n                <div className=\"p-3 space-y-3\">\n                  {filteredTerms.map((term) => (\n                    <CompactTermCard \n                      key={term.id} \n                      term={term} \n                      onSelect={() => setShowResults(false)}\n                    />\n                  ))}\n                </div>\n                {searchQuery.trim() && filteredTerms.length === 3 && (\n                  <div className=\"p-4 text-center bg-white border-t\">\n                    <button \n                      onClick={() => {\n                        setShowResults(false);\n                        setLocation('/glossary');\n                      }}\n                      className=\"text-shark-blue hover:text-shark-teal font-medium text-sm\"\n                    >\n                      View all results in glossary →\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n            \n            {/* No Results Message */}\n            {showResults && searchQuery.trim() && filteredTerms.length === 0 && (\n              <div className=\"absolute top-full left-0 right-0 mt-2 bg-white rounded-2xl shadow-2xl border-0 p-6 z-50\">\n                <div className=\"text-center\">\n                  <p className=\"text-gray-500 mb-2\">No terms found for \"{searchQuery}\"</p>\n                  <p className=\"text-sm text-gray-400\">Try searching for terms like \"valuation\", \"equity\", or \"revenue\"</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Feature Cards Preview */}\n        <div className=\"grid md:grid-cols-3 gap-6 max-w-5xl mx-auto\">\n          <Card className=\"bg-white/15 backdrop-blur-sm border-0 card-hover shadow-xl\">\n            <CardContent className=\"p-6 text-center\">\n              <div className=\"bg-gradient-to-br from-yellow-400 to-orange-500 rounded-full p-4 w-16 h-16 mx-auto mb-4 shadow-lg\">\n                <Lightbulb className=\"text-white\" size={32} />\n              </div>\n              <h3 className=\"text-xl font-semibold text-white mb-2\">Simple Explanations</h3>\n              <p className=\"text-gray-200\">Complex business terms broken down into everyday language</p>\n            </CardContent>\n          </Card>\n          \n          <Card className=\"bg-white/15 backdrop-blur-sm border-0 card-hover shadow-xl\">\n            <CardContent className=\"p-6 text-center\">\n              <div className=\"bg-gradient-to-br from-green-400 to-emerald-500 rounded-full p-4 w-16 h-16 mx-auto mb-4 shadow-lg\">\n                <Target className=\"text-white\" size={32} />\n              </div>\n              <h3 className=\"text-xl font-semibold text-white mb-2\">Real Examples</h3>\n              <p className=\"text-gray-200\">Learn from actual Shark Tank pitches and real-world scenarios</p>\n            </CardContent>\n          </Card>\n          \n          <Card className=\"bg-white/15 backdrop-blur-sm border-0 card-hover shadow-xl\">\n            <CardContent className=\"p-6 text-center\">\n              <div className=\"bg-gradient-to-br from-purple-400 to-indigo-500 rounded-full p-4 w-16 h-16 mx-auto mb-4 shadow-lg\">\n                <Gamepad2 className=\"text-white\" size={32} />\n              </div>\n              <h3 className=\"text-xl font-semibold text-white mb-2\">Interactive Learning</h3>\n              <p className=\"text-gray-200\">Test your knowledge with fun quizzes and gamified challenges</p>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":7300},"client/src/components/Navigation.tsx":{"content":"import { useState } from 'react';\nimport { Menu, X } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Link, useLocation } from 'wouter';\nimport sharkTankLogo from '@/assets/shark-tank-logo.png';\n\nexport default function Navigation() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [location, setLocation] = useLocation();\n\n  const handleSectionNavigation = (sectionId: string) => {\n    setIsMenuOpen(false);\n    if (location === '/') {\n      // If on home page, scroll to section\n      const element = document.getElementById(sectionId);\n      element?.scrollIntoView({ behavior: 'smooth' });\n    } else {\n      // If on other pages, store target section and navigate to home\n      sessionStorage.setItem('scrollToSection', sectionId);\n      setLocation('/');\n    }\n  };\n\n  return (\n    <nav className=\"gradient-hero shadow-md relative z-50\" data-testid=\"navigation\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          <Link href=\"/\" className=\"flex items-center space-x-3\">\n            <div className=\"flex-shrink-0\">\n              <img \n                src={sharkTankLogo} \n                alt=\"Shark Tank\" \n                className=\"h-8 w-auto logo-glow\"\n                data-testid=\"shark-tank-logo\"\n              />\n            </div>\n            <div>\n              <h1 className=\"text-xl font-serif font-bold\">\n                <span className=\"text-shark-cyan\">SHARK</span>\n                <span className=\"text-white\">TANK</span>{' '}\n                <span className=\"text-shark-gold\">Lingo</span>\n              </h1>\n            </div>\n          </Link>\n          \n          <div className=\"hidden md:flex items-center space-x-6\">\n            {location !== '/' && (\n              <Link href=\"/\" className=\"text-gray-200 hover:text-white transition-colors\">\n                Home\n              </Link>\n            )}\n            <button \n              onClick={() => handleSectionNavigation('glossary')}\n              className=\"text-gray-200 hover:text-white transition-colors\"\n              data-testid=\"nav-glossary\"\n            >\n              Glossary\n            </button>\n            <button \n              onClick={() => handleSectionNavigation('quiz')}\n              className=\"text-gray-200 hover:text-white transition-colors\"\n              data-testid=\"nav-quiz\"\n            >\n              Quiz\n            </button>\n            <button \n              onClick={() => handleSectionNavigation('blog')}\n              className=\"text-gray-200 hover:text-white transition-colors\"\n              data-testid=\"nav-blog\"\n            >\n              Blog\n            </button>\n          </div>\n          \n          <div className=\"md:hidden\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n              data-testid=\"mobile-menu-toggle\"\n              className=\"text-gray-200 hover:text-white hover:bg-white/10\"\n            >\n              {isMenuOpen ? <X className=\"h-5 w-5\" /> : <Menu className=\"h-5 w-5\" />}\n            </Button>\n          </div>\n        </div>\n        \n        {/* Mobile Menu */}\n        {isMenuOpen && (\n          <div className=\"md:hidden absolute top-16 left-0 right-0 bg-shark-navy/95 backdrop-blur-sm shadow-lg border-t border-white/10\">\n            <div className=\"px-4 py-4 space-y-4 bg-[#00000073]\">\n              {location !== '/' && (\n                <Link \n                  href=\"/\" \n                  className=\"block text-gray-200 hover:text-white transition-colors py-2\"\n                  onClick={() => setIsMenuOpen(false)}\n                >\n                  Home\n                </Link>\n              )}\n              <button \n                onClick={() => handleSectionNavigation('glossary')}\n                className=\"block w-full text-gray-200 hover:text-white transition-colors py-2 text-center font-semibold\"\n                data-testid=\"mobile-nav-glossary\"\n              >\n                Glossary\n              </button>\n              <button \n                onClick={() => handleSectionNavigation('quiz')}\n                className=\"block w-full text-gray-200 hover:text-white transition-colors py-2 text-center font-semibold\"\n                data-testid=\"mobile-nav-quiz\"\n              >\n                Quiz\n              </button>\n              <button \n                onClick={() => handleSectionNavigation('blog')}\n                className=\"block w-full text-gray-200 hover:text-white transition-colors py-2 text-center font-semibold\"\n                data-testid=\"mobile-nav-blog\"\n              >\n                Blog\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n}","size_bytes":4808},"client/src/components/Newsletter.tsx":{"content":"import { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { useToast } from '@/hooks/use-toast';\n\nexport default function Newsletter() {\n  const [email, setEmail] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!email) {\n      toast({\n        title: \"Email required\",\n        description: \"Please enter a valid email address.\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setIsSubmitting(true);\n    \n    // Simulate API call\n    setTimeout(() => {\n      toast({\n        title: \"Successfully subscribed!\",\n        description: \"You'll receive our weekly updates soon.\",\n      });\n      setEmail('');\n      setIsSubmitting(false);\n    }, 1000);\n  };\n\n  return (\n    <section className=\"bg-white py-16 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-4xl mx-auto text-center\">\n        <div className=\"mb-8\">\n          <h2 className=\"text-3xl md:text-4xl font-serif font-bold text-shark-navy mb-4\">\n            Stay Sharp with Weekly Updates\n          </h2>\n          <p className=\"text-xl text-gray-600\">\n            Get new business terms, Shark Tank insights, and exclusive content delivered to your inbox.\n          </p>\n        </div>\n        \n        <form onSubmit={handleSubmit} className=\"max-w-md mx-auto\">\n          <div className=\"flex gap-4\">\n            <Input\n              type=\"email\"\n              placeholder=\"Enter your email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"flex-1 px-6 py-4 border-2 border-gray-200 rounded-full focus:border-shark-blue transition-colors\"\n              data-testid=\"newsletter-email-input\"\n            />\n            <Button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"bg-shark-blue hover:bg-shark-teal text-white px-8 py-4 rounded-full font-semibold whitespace-nowrap transition-colors\"\n              data-testid=\"newsletter-subscribe-button\"\n            >\n              {isSubmitting ? 'Subscribing...' : 'Subscribe'}\n            </Button>\n          </div>\n          <p className=\"text-sm text-gray-500 mt-3\">\n            Join 10,000+ entrepreneurs. Unsubscribe anytime.\n          </p>\n        </form>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2453},"client/src/components/QuizSection.tsx":{"content":"import { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Progress } from '@/components/ui/progress';\nimport { Badge } from '@/components/ui/badge';\nimport { Lightbulb, Trophy, RefreshCw } from 'lucide-react';\nimport { useQuiz } from '@/hooks/useQuiz';\nimport { quizQuestions } from '@/data/quizData';\n\nexport default function QuizSection() {\n  const {\n    quizState,\n    currentQuestion,\n    selectedAnswer,\n    showExplanation,\n    progressPercentage,\n    selectAnswer,\n    nextQuestion,\n    startNextBatch,\n    resetQuiz,\n    remainingQuestions,\n    canStartNextBatch,\n    questionsPerBatch\n  } = useQuiz(quizQuestions);\n\n  // Final results screen (after all batches)\n  if (quizState.showResults) {\n    const accuracyPercentage = quizState.totalQuestionsAnswered > 0 \n      ? Math.round((quizState.totalCorrectAnswers / quizState.totalQuestionsAnswered) * 100)\n      : 0;\n    \n    return (\n      <section id=\"quiz\" className=\"gradient-hero py-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          <Card className=\"bg-white rounded-3xl shadow-2xl\">\n            <CardContent className=\"p-8 text-center\">\n              <Trophy className=\"mx-auto text-shark-gold mb-4\" size={64} />\n              <h3 className=\"text-2xl font-serif font-bold text-shark-navy mb-4\">Quiz Session Complete!</h3>\n              <div className=\"mb-6 space-y-3\">\n                <p className=\"text-xl text-gray-600\">\n                  <span className=\"text-shark-blue font-bold\">{quizState.totalCorrectAnswers} out of {quizState.totalQuestionsAnswered}</span> questions correct\n                </p>\n                <p className=\"text-lg text-gray-600\">\n                  Overall Accuracy: <span className=\"text-shark-blue font-bold\">{accuracyPercentage}%</span>\n                </p>\n                <p className=\"text-sm text-gray-500\">\n                  Completed {quizState.currentBatch - 1} batch{quizState.currentBatch > 2 ? 'es' : ''} • {remainingQuestions} questions remaining\n                </p>\n              </div>\n              <div className=\"flex justify-center gap-4\">\n                <Button\n                  onClick={resetQuiz}\n                  className=\"bg-shark-blue hover:bg-shark-teal text-white px-6 py-3 rounded-full font-semibold transition-colors\"\n                  data-testid=\"retake-quiz\"\n                >\n                  Start New Quiz Session\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  className=\"border-2 border-shark-blue text-shark-blue hover:bg-shark-blue hover:text-white px-6 py-3 rounded-full font-semibold transition-colors\"\n                  data-testid=\"learn-more-terms\"\n                >\n                  Learn More Terms\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n    );\n  }\n\n  // Batch completion screen\n  if (quizState.showBatchResults) {\n    const batchAccuracy = Math.round((quizState.batchScore / questionsPerBatch) * 100);\n    const overallAccuracy = quizState.totalQuestionsAnswered > 0 \n      ? Math.round((quizState.totalCorrectAnswers / quizState.totalQuestionsAnswered) * 100)\n      : 0;\n    \n    return (\n      <section id=\"quiz\" className=\"gradient-hero py-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          <Card className=\"bg-white rounded-3xl shadow-2xl\">\n            <CardContent className=\"p-8 text-center\">\n              <div className=\"mb-6\">\n                <div className=\"inline-flex items-center justify-center w-16 h-16 bg-shark-blue/10 rounded-full mb-4\">\n                  <Trophy className=\"text-shark-blue\" size={32} />\n                </div>\n                <h3 className=\"text-2xl font-serif font-bold text-shark-navy mb-2\">\n                  Batch {quizState.currentBatch} Complete!\n                </h3>\n                <p className=\"text-gray-600\">Great job! Here's how you performed:</p>\n              </div>\n\n              <div className=\"grid md:grid-cols-2 gap-6 mb-8\">\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"text-lg font-semibold text-shark-navy mb-2\">This Batch</h4>\n                  <p className=\"text-2xl font-bold text-shark-blue mb-1\">{quizState.batchScore}/{questionsPerBatch}</p>\n                  <p className=\"text-sm text-gray-600\">{batchAccuracy}% accuracy</p>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"text-lg font-semibold text-shark-navy mb-2\">Overall</h4>\n                  <p className=\"text-2xl font-bold text-shark-blue mb-1\">{quizState.totalCorrectAnswers}/{quizState.totalQuestionsAnswered}</p>\n                  <p className=\"text-sm text-gray-600\">{overallAccuracy}% accuracy</p>\n                </div>\n              </div>\n\n              <div className=\"mb-6\">\n                <p className=\"text-sm text-gray-500 mb-4\">\n                  {remainingQuestions} questions remaining in the question bank\n                </p>\n                <div className=\"flex justify-center gap-4\">\n                  {canStartNextBatch ? (\n                    <Button\n                      onClick={startNextBatch}\n                      className=\"bg-shark-blue hover:bg-shark-teal text-white px-8 py-3 rounded-full font-semibold transition-colors\"\n                      data-testid=\"next-batch\"\n                    >\n                      Continue to Batch {quizState.currentBatch + 1}\n                    </Button>\n                  ) : (\n                    <p className=\"text-shark-navy font-medium\">Not enough questions for another full batch</p>\n                  )}\n                  <Button\n                    onClick={resetQuiz}\n                    variant=\"outline\"\n                    className=\"border-2 border-shark-blue text-shark-blue hover:bg-shark-blue hover:text-white px-8 py-3 rounded-full font-semibold transition-colors\"\n                    data-testid=\"end-quiz\"\n                  >\n                    End Quiz Session\n                  </Button>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section id=\"quiz\" className=\"gradient-hero py-16 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-serif font-bold text-white mb-4\">\n            Shark Tank Quiz\n          </h2>\n          <p className=\"text-xl text-gray-100\">\n            Test your understanding of business terminology\n          </p>\n        </div>\n\n        <Card className=\"bg-white rounded-3xl shadow-2xl\">\n          <CardContent className=\"p-8\">\n            {/* Progress Bar */}\n            <div className=\"mb-8\">\n              <div className=\"flex justify-between text-sm text-gray-600 mb-2\">\n                <span>Batch {quizState.currentBatch} • Question {quizState.currentQuestion + 1} of {questionsPerBatch}</span>\n                <span>\n                  <span className=\"font-semibold\">{quizState.batchScore}</span>/{questionsPerBatch} correct this batch\n                </span>\n              </div>\n              <Progress value={progressPercentage} className=\"w-full h-2\" />\n              <div className=\"text-xs text-gray-500 mt-2 text-center\">\n                Overall: {quizState.totalCorrectAnswers}/{quizState.totalQuestionsAnswered} correct • {remainingQuestions} questions remaining\n              </div>\n            </div>\n\n            {/* Quiz Question */}\n            <div className=\"mb-8\">\n              <h3 className=\"text-2xl font-serif font-bold text-shark-navy mb-6\">\n                {currentQuestion.question}\n              </h3>\n              \n              <div className=\"space-y-4\">\n                {currentQuestion.options.map((option, index) => {\n                  let buttonClass = \"quiz-option w-full p-4 text-left border-2 border-gray-200 rounded-lg transition-colors\";\n                  \n                  if (showExplanation) {\n                    if (index === currentQuestion.correctAnswer) {\n                      buttonClass += \" correct\";\n                    } else if (selectedAnswer === index && index !== currentQuestion.correctAnswer) {\n                      buttonClass += \" incorrect\";\n                    }\n                  } else if (selectedAnswer === index) {\n                    buttonClass += \" border-shark-cyan bg-shark-cyan/10\";\n                  }\n                  \n                  return (\n                    <button\n                      key={index}\n                      onClick={() => !showExplanation && selectAnswer(index)}\n                      className={buttonClass}\n                      disabled={showExplanation}\n                      data-testid={`quiz-option-${index}`}\n                    >\n                      {String.fromCharCode(65 + index)}. {option}\n                    </button>\n                  );\n                })}\n              </div>\n            </div>\n\n            {/* Explanation */}\n            {showExplanation && (\n              <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n                <h4 className=\"font-semibold text-gray-800 mb-2\">Explanation:</h4>\n                <p className=\"text-gray-700\">{currentQuestion.explanation}</p>\n              </div>\n            )}\n\n            {/* Quiz Controls */}\n            <div className=\"flex justify-between items-center\">\n              <div className=\"text-sm text-gray-500 flex items-center\">\n                <Lightbulb className=\"mr-2\" size={16} />\n                <span>Hint: {currentQuestion.hint}</span>\n              </div>\n              <Button\n                onClick={nextQuestion}\n                disabled={selectedAnswer === null}\n                className=\"bg-shark-blue hover:bg-shark-teal text-white px-6 py-3 rounded-full font-semibold transition-colors disabled:opacity-50\"\n                data-testid=\"next-question\"\n              >\n                {quizState.currentQuestion === questionsPerBatch - 1 ? 'Complete Batch' : 'Next Question'}\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  );\n}\n","size_bytes":10281},"client/src/components/SocialShareButton.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Share2, Twitter, Linkedin, Facebook, MessageCircle, Copy } from \"lucide-react\";\nimport { useSocialShare, ShareData } from \"@/hooks/useSocialShare\";\nimport { useLanguage } from \"@/hooks/useLanguage\";\n\ninterface SocialShareButtonProps {\n  shareData: ShareData;\n  size?: 'sm' | 'md' | 'lg';\n  variant?: 'default' | 'outline' | 'ghost';\n  showText?: boolean;\n}\n\nexport function SocialShareButton({ \n  shareData, \n  size = 'sm', \n  variant = 'ghost',\n  showText = false \n}: SocialShareButtonProps) {\n  const { shareContent, isSharing } = useSocialShare();\n  const { t } = useLanguage();\n\n  const platforms = [\n    { \n      key: 'twitter', \n      label: 'Twitter', \n      icon: Twitter, \n      color: 'text-blue-400',\n      bgColor: 'hover:bg-blue-50' \n    },\n    { \n      key: 'linkedin', \n      label: 'LinkedIn', \n      icon: Linkedin, \n      color: 'text-blue-600',\n      bgColor: 'hover:bg-blue-50' \n    },\n    { \n      key: 'facebook', \n      label: 'Facebook', \n      icon: Facebook, \n      color: 'text-blue-700',\n      bgColor: 'hover:bg-blue-50' \n    },\n    { \n      key: 'whatsapp', \n      label: 'WhatsApp', \n      icon: MessageCircle, \n      color: 'text-green-600',\n      bgColor: 'hover:bg-green-50' \n    },\n    { \n      key: 'copy', \n      label: 'Copy Link', \n      icon: Copy, \n      color: 'text-gray-600',\n      bgColor: 'hover:bg-gray-50' \n    },\n  ];\n\n  const handleShare = (platform: string) => {\n    shareContent({\n      ...shareData,\n      platform: platform as any,\n    });\n  };\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button \n          variant={variant} \n          size={size === 'md' ? 'default' : size} \n          disabled={isSharing}\n          className=\"gap-2\"\n          data-testid={`share-button-${shareData.contentType}-${shareData.contentId}`}\n        >\n          <Share2 className=\"h-4 w-4\" />\n          {showText && <span>{t('share.term')}</span>}\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\" className=\"w-48\">\n        {platforms.map((platform) => {\n          const Icon = platform.icon;\n          return (\n            <DropdownMenuItem\n              key={platform.key}\n              onClick={() => handleShare(platform.key)}\n              className={`flex items-center gap-3 cursor-pointer ${platform.bgColor}`}\n              data-testid={`share-${platform.key}-${shareData.contentType}`}\n            >\n              <Icon className={`h-4 w-4 ${platform.color}`} />\n              <span>{platform.label}</span>\n            </DropdownMenuItem>\n          );\n        })}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}","size_bytes":2820},"client/src/components/TermCard.tsx":{"content":"import { BusinessTerm } from '@/types';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { ArrowRight, TrendingUp, PieChart, DollarSign, Users, Rocket, Flame } from 'lucide-react';\nimport { Link } from 'wouter';\n\nconst categoryIcons: { [key: string]: any } = {\n  'investor-vc-lingo': TrendingUp,\n  'startup-metrics': PieChart,\n  'deal-structures': DollarSign,\n  'valuation-funding': TrendingUp,\n  'pitch-strategy': Flame,\n  'product-tech': Rocket,\n  'roles-titles': Users,\n  'legal-compliance': Users,\n  'marketing-growth': Users,\n  'testing-feedback': Flame,\n  'market-business-models': PieChart,\n  'financial-accounting': DollarSign,\n  'startup-culture': Rocket,\n  'operations-supply': Rocket,\n  'product-development': Rocket,\n  'customer-growth': Users,\n  'funding-investment': TrendingUp\n};\n\nconst categoryColors: { [key: string]: string } = {\n  'investor-vc-lingo': 'bg-gradient-to-br from-blue-400 to-blue-600 text-white',\n  'startup-metrics': 'bg-gradient-to-br from-green-400 to-emerald-500 text-white',\n  'deal-structures': 'bg-gradient-to-br from-purple-400 to-indigo-600 text-white',\n  'valuation-funding': 'bg-gradient-to-br from-yellow-400 to-orange-500 text-white',\n  'pitch-strategy': 'bg-gradient-to-br from-red-400 to-pink-500 text-white',\n  'product-tech': 'bg-gradient-to-br from-cyan-400 to-blue-500 text-white',\n  'roles-titles': 'bg-gradient-to-br from-teal-400 to-cyan-500 text-white',\n  'legal-compliance': 'bg-gradient-to-br from-gray-400 to-gray-600 text-white',\n  'marketing-growth': 'bg-gradient-to-br from-pink-400 to-rose-500 text-white',\n  'testing-feedback': 'bg-gradient-to-br from-indigo-400 to-purple-500 text-white',\n  'market-business-models': 'bg-gradient-to-br from-emerald-400 to-green-500 text-white',\n  'financial-accounting': 'bg-gradient-to-br from-amber-400 to-yellow-500 text-white',\n  'startup-culture': 'bg-gradient-to-br from-violet-400 to-purple-500 text-white',\n  'operations-supply': 'bg-gradient-to-br from-stone-400 to-gray-500 text-white',\n  'product-development': 'bg-gradient-to-br from-orange-400 to-red-500 text-white',\n  'customer-growth': 'bg-gradient-to-br from-lime-400 to-green-500 text-white',\n  'funding-investment': 'bg-gradient-to-br from-sky-400 to-blue-500 text-white'\n};\n\nconst categoryBadgeColors: { [key: string]: string } = {\n  'investor-vc-lingo': 'bg-blue-500 text-white',\n  'startup-metrics': 'bg-green-500 text-white',\n  'deal-structures': 'bg-purple-500 text-white',\n  'valuation-funding': 'bg-yellow-500 text-white',\n  'pitch-strategy': 'bg-red-500 text-white',\n  'product-tech': 'bg-cyan-500 text-white',\n  'roles-titles': 'bg-teal-500 text-white',\n  'legal-compliance': 'bg-gray-500 text-white',\n  'marketing-growth': 'bg-pink-500 text-white',\n  'testing-feedback': 'bg-indigo-500 text-white',\n  'market-business-models': 'bg-orange-500 text-white',\n  'financial-accounting': 'bg-emerald-500 text-white',\n  'startup-culture': 'bg-rose-500 text-white',\n  'operations-supply': 'bg-slate-500 text-white',\n  'product-development': 'bg-violet-500 text-white',\n  'customer-growth': 'bg-lime-500 text-white',\n  'funding-investment': 'bg-amber-500 text-white'\n};\n\ninterface TermCardProps {\n  term: BusinessTerm;\n}\n\nexport default function TermCard({ term }: TermCardProps) {\n  const IconComponent = categoryIcons[term.category] || DollarSign;\n  const categoryColorClass = categoryColors[term.category] || 'bg-gradient-to-br from-gray-400 to-gray-600 text-white';\n  const badgeColorClass = categoryBadgeColors[term.category] || 'bg-gray-500 text-white';\n\n  return (\n    <Card className=\"bg-white rounded-2xl shadow-xl card-hover border-0 overflow-hidden\" data-testid={`term-card-${term.id}`}>\n      <CardContent className=\"p-6\">\n        <div className=\"flex items-start justify-between mb-4\">\n          <div className={`${categoryColorClass} rounded-2xl p-4 shadow-lg transform transition-transform hover:scale-110`}>\n            <IconComponent size={28} />\n          </div>\n          <Badge className={`${badgeColorClass} px-4 py-2 rounded-full text-sm font-semibold capitalize shadow-md`}>\n            {term.category}\n          </Badge>\n        </div>\n        \n        <h3 className=\"text-2xl font-serif font-bold text-shark-navy mb-3\">{term.term}</h3>\n        \n        <div className=\"space-y-4\">\n          <div>\n            <h4 className=\"font-semibold text-gray-800 mb-2\">Business Definition:</h4>\n            <p className=\"text-gray-600\">{term.businessDefinition}</p>\n          </div>\n          \n          <div>\n            <h4 className=\"font-semibold text-gray-800 mb-2\">In Simple Terms:</h4>\n            <p className=\"text-gray-600 line-clamp-3\">{term.simpleExplanation}</p>\n          </div>\n          \n          <div className=\"bg-gradient-to-br from-yellow-100 to-orange-100 p-4 rounded-xl border-l-4 border-shark-gold shadow-md\">\n            <h4 className=\"font-semibold text-shark-navy mb-2 flex items-center\">\n              🦈 <span className=\"ml-2\">Shark Tank Example:</span>\n            </h4>\n            <p className=\"text-gray-700 text-sm mb-2 italic\">\"{term.sharkTankExample}\"</p>\n            <p className=\"text-xs font-medium text-shark-blue\">- {term.sharkName}</p>\n          </div>\n\n          {term.realWorldExample && (\n            <div className=\"bg-gradient-to-br from-blue-100 to-cyan-100 p-4 rounded-xl border-l-4 border-shark-cyan shadow-md\">\n              <h4 className=\"font-semibold text-shark-navy mb-2 flex items-center\">\n                🌍 <span className=\"ml-2\">Real World Example:</span>\n              </h4>\n              <p className=\"text-gray-700 text-sm line-clamp-2\">{term.realWorldExample}</p>\n            </div>\n          )}\n        </div>\n        \n        <Link href={`/term/${term.id}`}>\n          <Button \n            variant=\"ghost\" \n            className=\"mt-4 text-shark-blue hover:text-shark-teal font-semibold text-sm p-0\"\n            data-testid={`learn-more-${term.id}`}\n          >\n            Learn More <ArrowRight className=\"ml-2 h-4 w-4\" />\n          </Button>\n        </Link>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":6163},"client/src/components/ThemeCollections.tsx":{"content":"import { Card, CardContent } from '@/components/ui/card';\nimport { ArrowRight, GraduationCap, DollarSign, Rocket } from 'lucide-react';\nimport { detailedLearningPaths } from '@/data/detailedLearningPaths';\nimport { useLocation } from 'wouter';\n\nconst iconMap = {\n  '🎓': GraduationCap,\n  '⚡': DollarSign,\n  '🚀': Rocket\n};\n\nconst collections = detailedLearningPaths.map(path => ({\n  id: path.id,\n  title: path.title,\n  description: path.description,\n  icon: iconMap[path.icon as keyof typeof iconMap] || GraduationCap,\n  termCount: path.termCount,\n  duration: path.duration,\n  gradient: path.gradient,\n  iconColor: path.iconColor\n}));\n\nexport default function ThemeCollections() {\n  const [location, navigate] = useLocation();\n  return (\n    <section id=\"learning-paths\" className=\"bg-white py-16 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-serif font-bold text-shark-navy mb-4\">\n            Curated Learning Paths\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Start your journey with specially curated collections designed for different learning goals and experience levels.\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {collections.map(collection => {\n            const IconComponent = collection.icon;\n            \n            return (\n              <Card key={collection.id} className={`bg-gradient-to-br ${collection.gradient} border-0 card-hover cursor-pointer`} data-testid={`collection-${collection.id}`} onClick={() => navigate(`/learning-path/${collection.id}`)}>\n                <CardContent className=\"p-6\">\n                  <IconComponent className={`${collection.iconColor} mb-4`} size={48} />\n                  <h3 className=\"text-xl font-serif font-bold text-white mb-3\">\n                    {collection.title}\n                  </h3>\n                  <p className=\"text-white/90 text-sm mb-4\">{collection.description}</p>\n                  <div className=\"flex items-center gap-2 text-xs text-white/70 mb-4\">\n                    <span>Level: {detailedLearningPaths.find(p => p.id === collection.id)?.level || 'Beginner'}</span>\n                    <span>•</span>\n                    <span>{detailedLearningPaths.find(p => p.id === collection.id)?.targetAudience?.split(',')[0] || 'All levels'}</span>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-white/80\">\n                      {collection.termCount} terms • {collection.duration}\n                    </span>\n                    <ArrowRight className=\"text-white\" size={16} />\n                  </div>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2941},"client/src/data/businessTerms.ts":{"content":"import { BusinessTerm } from '../types';\n\n// Categories with SEO-optimized information\nexport const businessCategories = {\n  'investor-vc-lingo': {\n    name: 'Investor & VC Lingo',\n    description: 'Essential terminology used by investors and venture capitalists in funding discussions',\n    slug: 'investor-vc-lingo',\n    icon: '👔',\n    color: 'from-blue-500 to-indigo-600'\n  },\n  'startup-metrics': {\n    name: 'Startup Metrics',\n    description: 'Key performance indicators and metrics that startups track for growth',\n    slug: 'startup-metrics',\n    icon: '📊',\n    color: 'from-green-500 to-emerald-600'\n  },\n  'deal-structures': {\n    name: 'Deal Structures',\n    description: 'Different types of investment deals and their structures',\n    slug: 'deal-structures',\n    icon: '🤝',\n    color: 'from-purple-500 to-violet-600'\n  },\n  'valuation-funding': {\n    name: 'Valuation & Funding',\n    description: 'Company valuation, fundraising processes, and investment stages',\n    slug: 'valuation-funding',\n    icon: '💰',\n    color: 'from-yellow-500 to-orange-600'\n  },\n  'pitch-strategy': {\n    name: 'Pitch & Strategy',\n    description: 'Strategic terms for pitching and business strategy development',\n    slug: 'pitch-strategy',\n    icon: '🎯',\n    color: 'from-red-500 to-pink-600'\n  },\n  'product-operations': {\n    name: 'Product & Operations',\n    description: 'Product development, technology, and operational efficiency terms',\n    slug: 'product-operations',\n    icon: '⚙️',\n    color: 'from-cyan-500 to-blue-600'\n  },\n  'roles-titles': {\n    name: 'Roles & Titles',\n    description: 'Common job titles and roles in the startup ecosystem',\n    slug: 'roles-titles',\n    icon: '👥',\n    color: 'from-teal-500 to-cyan-600'\n  },\n  'legal-compliance': {\n    name: 'Legal & Compliance',\n    description: 'Legal terms, compliance requirements, and intellectual property concepts',\n    slug: 'legal-compliance',\n    icon: '⚖️',\n    color: 'from-gray-500 to-slate-600'\n  },\n  'marketing-growth': {\n    name: 'Marketing & Growth',\n    description: 'Marketing strategies and growth hacking terminology',\n    slug: 'marketing-growth',\n    icon: '📈',\n    color: 'from-pink-500 to-rose-600'\n  },\n  'market-business-models': {\n    name: 'Market & Business Models',\n    description: 'Different market types and business model frameworks',\n    slug: 'market-business-models',\n    icon: '🏢',\n    color: 'from-emerald-500 to-green-600'\n  },\n  'financial-metrics': {\n    name: 'Financial Metrics',\n    description: 'Key financial ratios, performance metrics, and business calculations',\n    slug: 'financial-metrics',\n    icon: '💹',\n    color: 'from-amber-500 to-yellow-600'\n  },\n  'business-accounting': {\n    name: 'Business Accounting',\n    description: 'Accounting principles, financial processes, and business finance terms',\n    slug: 'business-accounting',\n    icon: '📊',\n    color: 'from-indigo-500 to-blue-600'\n  }\n};\n\nexport const businessTerms: BusinessTerm[] = [\n  // Investor & VC Lingo (10 terms)\n  {\n    id: 'angel-investor',\n    term: 'Angel Investor',\n    category: 'investor-vc-lingo',\n    icon: '😇',\n    businessDefinition: 'A high net worth individual who invests their personal money in early-stage startups.',\n    simpleExplanation: \"Like a guardian angel for startups - someone with money who believes in your idea and wants to help you grow.\",\n    sharkTankExample: \"Main ek angel investor ki tarah aap mein invest kar raha hun because I believe in your vision.\",\n    sharkName: 'Anupam Mittal',\n    realWorldExample: 'Ratan Tata has been an angel investor in many Indian startups including Ola, Paytm, and Urban Company.',\n    difficulty: 'beginner',\n    relatedTerms: ['venture-capitalist', 'seed-funding', 'pre-money-valuation'],\n    metaTitle: 'Angel Investor - Definition, Examples & How They Fund Startups',\n    metaDescription: 'Learn about angel investors, how they fund early-stage startups, and real examples from Shark Tank India. Essential term for entrepreneurs.',\n    caseStudy: {\n      introductionContext: \"Angel investors are individuals who invest early capital (and often mentor) in startups in exchange for equity.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Skippi Ice Pops — after their Shark Tank appearance (all-sharks invested ~₹1 crore for 15%), Skippi later raised additional rounds that included angel networks (Hyderabad Angels) and other angel/seed investors.\",\n        startupDetails: \"Skippi Ice Pops secured investment from all sharks and subsequently attracted angel networks for follow-on funding.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"The Sharks acted like high-profile angels on-air (seed capital + mentorship). Post-show, traditional angel groups joined follow-on rounds, showing the pathway: TV validation -> angel syndicate interest -> fresh capital.\",\n        founderPerspective: \"Founders leveraged Shark Tank validation to attract angel networks and secure additional growth capital.\",\n        sharkPerspective: \"Sharks provided both capital and mentorship, setting the foundation for subsequent angel investment rounds.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Angel involvement provided early growth capital and investor networks that unlocked distribution and follow-on VC interest.\",\n        impactOnFounder: \"For founders, angel capital often comes with operational help and introductions beyond money.\",\n        dealOutcome: \"TV validation led to successful angel syndicate participation and continued growth funding.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Treat on-air shark interest as angel validation; prepare a tidy 'post-show' raise deck for angels.\",\n          \"Show traction & unit economics to convert TV buzz into angel commitments.\",\n          \"Use angel investors for strategic introductions, not just cash.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't rely solely on TV exposure without solid business fundamentals.\",\n          \"Avoid diluting too much equity in early angel rounds.\",\n          \"Don't neglect building relationships with angel networks before needing funding.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'venture-capitalist',\n    term: 'Venture Capitalist (VC)',\n    category: 'investor-vc-lingo',\n    icon: '🏢',\n    businessDefinition: 'Professional investment firms that manage pooled funds to invest in high-growth startups.',\n    simpleExplanation: \"Companies that collect money from rich people and institutions, then invest it in promising startups hoping for big returns.\",\n    sharkTankExample: \"Unlike us sharks who invest our own money, VCs manage other people's money in their funds.\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'Sequoia Capital India invested in companies like Zomato, Byju\\'s, and WhatsApp, generating massive returns.',\n    difficulty: 'intermediate',\n    relatedTerms: ['angel-investor', 'series-a', 'portfolio-company'],\n    metaTitle: 'Venture Capitalist (VC) - How VC Firms Invest in Startups',\n    metaDescription: 'Understand venture capital, how VC firms work, and their role in startup funding. Learn the difference between VCs and angel investors.',\n    caseStudy: {\n      introductionContext: \"VCs are institutional investors that provide growth capital and governance at scale (Series A+), usually in exchange for board influence and structured terms.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Proxgy — after an on-air shark investment, Proxgy later attracted institutional / VC and marquee investors in larger rounds (Series A interest and investor syndicates reported).\",\n        startupDetails: \"Proxgy leveraged their Shark Tank investment as validation to attract institutional VCs for larger funding rounds.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Shark investment acted as a catalyst; VCs and larger funds used the Sharks' validation and traction metrics to underwrite larger, priced rounds with more formal governance and term-sheet protections.\",\n        founderPerspective: \"Founders used Shark Tank validation to streamline VC diligence and secure larger investment amounts.\",\n        sharkPerspective: \"Sharks provided initial validation that made the company more attractive to institutional VCs.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Being in a shark/angel portfolio made subsequent VC diligence faster and helped secure larger cheque sizes — but it also brought heavier governance (board seats, reporting) and performance expectations.\",\n        impactOnFounder: \"VC funding provided growth capital but came with increased governance and reporting requirements.\",\n        dealOutcome: \"Shark Tank validation facilitated successful institutional VC fundraising with professional terms.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"If you expect to raise VC later, model governance (board composition, reporting cadence) early.\",\n          \"Convert Shark/angel validation into a clean data room to streamline VC diligence.\",\n          \"Expect VCs to negotiate liquidation, anti-dilution and board terms — prepare counsel.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't underestimate the governance complexity that comes with VC funding.\",\n          \"Avoid raising VC money without understanding board dynamics and control implications.\",\n          \"Don't ignore the performance pressure that comes with institutional investment.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'term-sheet',\n    term: 'Term Sheet',\n    category: 'investor-vc-lingo',\n    icon: '📄',\n    businessDefinition: 'A non-binding document outlining the basic terms and conditions of an investment deal.',\n    simpleExplanation: \"Like a rough draft of the investment deal - it outlines who gets what, how much, and the basic rules before lawyers create the final paperwork.\",\n    sharkTankExample: \"Agar aapko mera offer pasand hai, toh we'll send you a term sheet with all the details.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'When a startup accepts a VC\\'s offer, they first receive a term sheet detailing equity percentage, board seats, and liquidation preferences.',\n    difficulty: 'advanced',\n    relatedTerms: ['due-diligence', 'equity-dilution', 'liquidation-preference'],\n    metaTitle: 'Term Sheet Explained - Key Components of Startup Investment Deals',\n    metaDescription: 'Learn about term sheets in startup funding, their key components, and how they work in investment negotiations. Essential for entrepreneurs.',\n    caseStudy: {\n      introductionContext: \"A term sheet is a non-binding document summarising principal deal terms (amount, equity, valuation, board rights, liquidation preference) that precedes legal documentation.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Cosmix — the Sharks' on-air offers function as term sheets (Cosmix accepted an on-air structure: ₹1 Cr for 1% equity + 1% royalty until recoup). On-air offers are treated as headline term sheets that trigger detailed post-show docs.\",\n        startupDetails: \"Cosmix accepted a hybrid deal structure that served as the basis for detailed post-show legal documentation.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"On-air agreements are effectively a public term sheet: teams then enter due diligence and convert that into binding share-purchase agreements and schedules.\",\n        founderPerspective: \"Founders used the on-air offer as a framework for negotiating detailed investment terms.\",\n        sharkPerspective: \"Sharks provided headline terms on-air that required detailed legal documentation and due diligence.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"A good on-air term sheet accelerates publicity and momentum, but founders must be ready for re-negotiation during legal diligence — the on-air term is rarely the final legal instrument.\",\n        impactOnFounder: \"Term sheet acceptance created momentum but required careful navigation of legal documentation phase.\",\n        dealOutcome: \"Public term sheet provided validation while detailed legal terms were negotiated privately.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Treat any on-air offer as a headline term sheet; prepare a clean data room immediately.\",\n          \"Know which terms are negotiable (e.g., royalty caps, board seats) versus structural (liquidation preference).\",\n          \"Get counsel to translate the term sheet into enforceable agreements fast.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't assume on-air terms are final without proper legal documentation.\",\n          \"Avoid agreeing to terms without understanding their full implications.\",\n          \"Don't delay legal documentation after accepting a term sheet.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'due-diligence',\n    term: 'Due Diligence',\n    category: 'investor-vc-lingo',\n    icon: '🔍',\n    businessDefinition: 'The comprehensive investigation and verification of a company before making an investment decision.',\n    simpleExplanation: \"Like a thorough background check before buying a used car - investors examine everything about your business to make sure it's worth investing in.\",\n    sharkTankExample: \"Pitch mein jo numbers bataye hain, due diligence mein humein sab verify karna hoga.\",\n    sharkName: 'Ashneer Grover',\n    realWorldExample: 'Before investing ₹100 crores in Paytm, Ant Financial conducted extensive due diligence on their financial records, technology, and legal compliance.',\n    difficulty: 'intermediate',\n    relatedTerms: ['term-sheet', 'data-room', 'legal-audit'],\n    metaTitle: 'Due Diligence in Startups - Investor Verification Process Explained',\n    metaDescription: 'Understand the due diligence process in startup investments, what investors check, and how to prepare. Key term for fundraising.',\n    caseStudy: {\n      introductionContext: \"Due diligence is the investor's verification (finance, legal, IP, customers) performed after a term sheet to confirm the investment.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Multiple on-air Shark Tank deals subsequently stalled or changed during due diligence; media investigations show several on-air commitments later fell through or were revised after diligence flagged issues.\",\n        startupDetails: \"Several Shark Tank companies experienced deal changes or cancellations during the post-show due diligence process.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"After the cameras, Sharks' teams audit books, contracts, IP filings and claims — discrepancies (ghost orders, overstated revenue, unclear cap tables) commonly cause re-pricing or deal collapse.\",\n        founderPerspective: \"Founders learned that on-air success didn't guarantee final deals without clean documentation.\",\n        sharkPerspective: \"Sharks required thorough verification of all claims made during the pitch before finalizing investments.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Due diligence is where TV drama meets legal reality. Clean documentation and honest disclosure on stage materially increase the chance an on-air term becomes a closed deal.\",\n        impactOnFounder: \"Companies with clean books and honest pitches successfully closed deals, while others faced renegotiation or cancellation.\",\n        dealOutcome: \"Proper preparation and transparency during due diligence determined final deal success.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Prepare a diligence checklist (financials, cap table, customer contracts, IP docs) before pitching.\",\n          \"Don't exaggerate on camera — undisclosed liabilities discovered later kill deals.\",\n          \"Offer an investor data room link immediately after the episode airs.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't overstate revenue or customer numbers during the pitch.\",\n          \"Avoid having incomplete or messy financial records.\",\n          \"Don't delay providing requested documentation during due diligence.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'portfolio-company',\n    term: 'Portfolio Company',\n    category: 'investor-vc-lingo',\n    icon: '🗂️',\n    businessDefinition: 'A company that is part of an investor\\'s or VC firm\\'s collection of investments.',\n    simpleExplanation: \"Like having a collection of stamps, investors have a collection of companies they've invested in - each one is a portfolio company.\",\n    sharkTankExample: \"After investment, you'll become one of my portfolio companies and I'll help you grow.\",\n    sharkName: 'Vineeta Singh',\n    realWorldExample: 'Flipkart, Myntra, and PolicyBazaar are all portfolio companies of Accel Partners India.',\n    difficulty: 'beginner',\n    relatedTerms: ['venture-capitalist', 'board-of-directors', 'investor-relations'],\n    metaTitle: 'Portfolio Company - What It Means for Startups and Investors',\n    metaDescription: 'Learn about portfolio companies, how they benefit from investor support, and the relationship between VCs and their investments.',\n    caseStudy: {\n      introductionContext: \"A portfolio company is a business in an investor's holdings; portfolio status brings access to the investor's network and follow-on capital.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Proxgy and Skippi are now cited in press as portfolio companies for Sharks and angel syndicates — press coverage highlights large returns for early Sharks after later exits or re-rounds.\",\n        startupDetails: \"Both companies leveraged their portfolio status with Sharks to gain credibility and access to additional resources.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Once Sharks invest, the startup becomes part of the shark's portfolio — that label helps in PR, but also brings expectations (quarterly updates, participation in follow-on rounds).\",\n        founderPerspective: \"Founders gained credibility and network access but had to meet increased reporting expectations.\",\n        sharkPerspective: \"Sharks provided ongoing support and expected regular updates on portfolio company performance.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Being a Shark portfolio company drives visibility and investor interest, but founders must meet increased reporting and growth expectations to benefit from follow-on capital.\",\n        impactOnFounder: \"Portfolio status provided validation and network access while creating performance accountability.\",\n        dealOutcome: \"Strong portfolio relationships led to successful follow-on funding and business growth.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Treat Sharks like portfolio investors — provide structured updates and KPIs.\",\n          \"Use portfolio status to open introductions to distribution partners or VCs.\",\n          \"Plan for governance changes (investor meetings, possible board seats).\"\n        ],\n        mistakesToAvoid: [\n          \"Don't neglect regular communication with portfolio investors.\",\n          \"Avoid over-relying on investor networks without building your own capabilities.\",\n          \"Don't ignore governance expectations that come with portfolio status.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'liquidation-preference',\n    term: 'Liquidation Preference',\n    category: 'investor-vc-lingo',\n    icon: '💧',\n    businessDefinition: 'The right of certain shareholders to receive their investment back before others in case of company sale or closure.',\n    simpleExplanation: \"Like being first in line when a company is sold - investors with liquidation preference get their money back before founders and employees.\",\n    sharkTankExample: \"I want 2x liquidation preference, meaning if the company is sold, I get double my investment back first.\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'When Housing.com was sold, investors with liquidation preferences recovered their investments first, while common shareholders got much less.',\n    difficulty: 'advanced',\n    relatedTerms: ['equity-dilution', 'preferred-stock', 'exit-strategy'],\n    metaTitle: 'Liquidation Preference in Startups - Investor Protection Mechanism',\n    metaDescription: 'Understand liquidation preference in startup funding, how it protects investors, and its impact on founders. Advanced funding concept explained.',\n    caseStudy: {\n      introductionContext: \"Liquidation preference determines the order and amount investors get paid at a sale/liquidation (e.g., 1× non-participating preference).\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Explicit on-air mentions of liquidation preference are rarely publicized for Shark Tank India deals. Commentary and legal primers note that term sheets commonly include liquidation clauses and that founders should expect preference terms in formal VC/term-sheet stages.\",\n        startupDetails: \"While not discussed on-air, liquidation preferences are standard components of formal investment documentation.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"In practice, investors negotiating beyond the show may ask for liquidation preference in legal documents — it's typically a post-term-sheet legal protection rather than a TV negotiating point.\",\n        founderPerspective: \"Founders discovered liquidation preferences during legal documentation phase, requiring careful analysis of exit economics.\",\n        sharkPerspective: \"Investors included standard protective clauses in formal agreements to secure their investment returns.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Because liquidation preference materially affects founder economics at exit, it's a core legal term tackled during post-show documentation — but public, explicit on-air examples are scarce.\",\n        impactOnFounder: \"Founders needed legal counsel to understand how preferences would affect their returns in exit scenarios.\",\n        dealOutcome: \"Proper understanding of liquidation preferences ensured fair deal structures for all parties.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Ask counsel to model exits under 1× vs 2× preference to see founder impact.\",\n          \"Negotiate non-participating vs participating preference explicitly.\",\n          \"Insist on clarity (cap, conversion triggers) — don't sign vague preference language.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't agree to liquidation preferences without understanding exit implications.\",\n          \"Avoid accepting high multiple preferences without negotiation.\",\n          \"Don't ignore how preferences affect employee equity value.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'anti-dilution',\n    term: 'Anti-Dilution Provision',\n    category: 'investor-vc-lingo',\n    icon: '🛡️',\n    businessDefinition: 'Contractual provisions that protect investors from dilution when a company issues new shares at a lower price.',\n    simpleExplanation: \"Insurance for investors - if the company's value drops in future funding rounds, their ownership percentage gets protected or adjusted.\",\n    sharkTankExample: \"I want anti-dilution protection so my stake doesn't get reduced if you raise money at a lower valuation later.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'Early investors in companies like Snapdeal benefited from anti-dilution provisions when the company raised down-rounds at lower valuations.',\n    difficulty: 'advanced',\n    relatedTerms: ['down-round', 'equity-dilution', 'preferred-stock'],\n    metaTitle: 'Anti-Dilution Provision - Protecting Investor Ownership in Startups',\n    metaDescription: 'Learn about anti-dilution provisions in startup investments, how they protect investors, and their impact on company ownership structure.',\n    caseStudy: {\n      introductionContext: \"Anti-dilution clauses protect investors from equity dilution in later down rounds (full ratchet, weighted average variants).\",\n      sharkTankPitchReference: {\n        pitchDescription: \"There are public discussions and founder anecdotes referencing anti-dilution clauses in Shark-linked negotiations — e.g., media and founders have discussed anti-dilution fears; a notable public mention (social posts) cited a founder rejecting an offer because of anti-dilution terms. Additionally, industry commentary by Shark-alumni highlights anti-dilution mechanics as important investor protections.\",\n        startupDetails: \"Some founders walked away from deals due to unfavorable anti-dilution terms in the legal documentation phase.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Anti-dilution terms appear in downstream legal documents; founders have declined offers or walked back deals where the protective clauses were overly founder-unfriendly.\",\n        founderPerspective: \"Founders needed to understand how anti-dilution clauses would affect their ownership in future funding rounds.\",\n        sharkPerspective: \"Investors included anti-dilution provisions as standard protection against down-round scenarios.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Anti-dilution can massively change founder ownership in down rounds — founders must understand whether the clause is full-ratchet or weighted-average and its practical effect before agreeing.\",\n        impactOnFounder: \"Understanding anti-dilution mechanics was crucial for founders to protect their long-term ownership interests.\",\n        dealOutcome: \"Well-negotiated anti-dilution terms balanced investor protection with founder interests.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Demand worked examples: show dilution math under plausible down-round scenarios.\",\n          \"Prefer weighted-average anti-dilution over full-ratchet.\",\n          \"Get legal counsel to cap or sunset anti-dilution protections where possible.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't agree to anti-dilution terms without modeling their impact on your ownership.\",\n          \"Avoid accepting full-ratchet provisions that severely punish founders in down rounds.\",\n          \"Don't sign anti-dilution clauses without sunset provisions or caps.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'board-of-directors',\n    term: 'Board of Directors',\n    category: 'investor-vc-lingo',\n    icon: '👥',\n    businessDefinition: 'A group of elected individuals who represent shareholders and oversee major company decisions.',\n    simpleExplanation: \"Like a council of advisors who help make big decisions for the company - usually includes founders, investors, and independent experts.\",\n    sharkTankExample: \"As part of this deal, I want a board seat to help guide the company's strategic decisions.\",\n    sharkName: 'Anupam Mittal',\n    realWorldExample: 'Flipkart\\'s board includes representatives from Tiger Global, Accel, and co-founders, who collectively make major strategic decisions.',\n    difficulty: 'intermediate',\n    relatedTerms: ['board-seat', 'corporate-governance', 'shareholder-rights'],\n    metaTitle: 'Board of Directors in Startups - Role, Composition & Responsibilities',\n    metaDescription: 'Understand the role of board of directors in startups, how board seats work, and their impact on company governance and decisions.',\n    caseStudy: {\n      introductionContext: \"A board provides governance and strategic direction; investors often request board seats to influence major decisions.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Cosmix — Namita Thapar's offer was explicitly framed as providing industry expertise and a healthcare voice 'on your board,' and sharks have publicly referenced board value in several on-air negotiations.\",\n        startupDetails: \"Namita Thapar emphasized the strategic value of having healthcare industry expertise on the board.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Sharks negotiate board involvement (observer vs full seat) as part of the investment value — board seats give sharks governance levers and founders access to strategic counsel.\",\n        founderPerspective: \"Founders valued the strategic guidance and network access that came with experienced board members.\",\n        sharkPerspective: \"Sharks used board positions to provide ongoing strategic support and maintain investment oversight.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Founders who accepted board seats gained operational mentorship and network help; those wary of control impacts negotiated observer status or limited voting rights. Clear role definitions avoid future governance friction.\",\n        impactOnFounder: \"Board involvement provided valuable guidance while requiring founders to adapt to formal governance processes.\",\n        dealOutcome: \"Well-structured board arrangements balanced strategic value with appropriate governance oversight.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Define board seat type (observer, voting seat) and committee rights in the term sheet.\",\n          \"Limit reserved matters to avoid daily micromanagement.\",\n          \"Agree on meeting cadence and KPI reporting for board effectiveness.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't give board seats without clearly defining roles and responsibilities.\",\n          \"Avoid allowing board members to micromanage day-to-day operations.\",\n          \"Don't neglect setting up proper board meeting procedures and documentation.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'drag-along-rights',\n    term: 'Drag-Along Rights',\n    category: 'investor-vc-lingo',\n    icon: '🎯',\n    businessDefinition: 'A contractual provision that allows majority shareholders to force minority shareholders to join in the sale of a company.',\n    simpleExplanation: \"If most owners want to sell the company, they can 'drag along' the remaining owners to sell too, so no one can block a good deal.\",\n    sharkTankExample: \"With drag-along rights, if I and other major investors want to sell, all shareholders have to agree to sell.\",\n    sharkName: 'Ghazal Alagh',\n    realWorldExample: 'When WhatsApp was acquired by Facebook, drag-along rights ensured all shareholders participated in the $19 billion sale.',\n    difficulty: 'advanced',\n    relatedTerms: ['tag-along-rights', 'exit-strategy', 'shareholder-agreement'],\n    metaTitle: 'Drag-Along Rights in Startups - Majority Shareholder Protection Explained',\n    metaDescription: 'Learn about drag-along rights in startup agreements, how they facilitate company exits, and protect majority investors in M&A deals.',\n    caseStudy: {\n      introductionContext: \"Drag-along rights let majority holders force minority shareholders to sell on exit terms; tag-along rights let minority holders join a sale on the same terms.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Public on-air examples of drag-along / tag-along clauses being negotiated are rare on Shark Tank India shows; however, term-sheet primers and post-deal explanations for Shark-backed companies list these as standard investor protections included during legal documentation. Media writeups and investor guides reference standard inclusion of these rights in post-show agreements.\",\n        startupDetails: \"These rights are typically included in formal investment documentation rather than negotiated on-air.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"These rights are typically documented during the legal stage after the show to protect both founders and investors in future exit scenarios — they are not usually a TV negotiating point but crucial in the final agreements.\",\n        founderPerspective: \"Founders needed to understand how these rights would affect their control over exit decisions.\",\n        sharkPerspective: \"Investors included these standard provisions to ensure smooth exit processes and protect investment returns.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Drag/tag rights are standard in investor term sheets; founders should understand the implications (e.g., loss of sale veto vs protection from forced exclusion). Because publicly visible on-air negotiation is uncommon, the practical lessons come from post-deal documentation and counsel.\",\n        impactOnFounder: \"Understanding these rights helped founders prepare for potential exit scenarios and maintain appropriate control.\",\n        dealOutcome: \"Well-structured drag-along and tag-along rights facilitated smooth exit processes when opportunities arose.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Insist on clear thresholds (who can drag, what approvals needed).\",\n          \"Ask for fair price protections and notice periods for tag-along events.\",\n          \"Review how these rights interact with employee ESOP and subsequent financings.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't agree to drag-along rights without understanding the threshold requirements.\",\n          \"Avoid accepting terms that don't protect minority shareholders in exit scenarios.\",\n          \"Don't ignore how these rights affect employee equity in exit situations.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'tag-along-rights',\n    term: 'Tag-Along Rights',\n    category: 'investor-vc-lingo',\n    icon: '🏃',\n    businessDefinition: 'A contractual provision that allows minority shareholders to join a sale initiated by majority shareholders.',\n    simpleExplanation: \"If big investors are selling their shares to someone, smaller shareholders can 'tag along' and sell at the same good price.\",\n    sharkTankExample: \"Tag-along rights protect smaller shareholders - if I sell my stake, employees can also sell at the same terms.\",\n    sharkName: 'Vineeta Singh',\n    realWorldExample: 'When Sequoia Capital sold part of their Zomato stake, tag-along rights allowed employee shareholders to participate in the sale.',\n    difficulty: 'advanced',\n    relatedTerms: ['drag-along-rights', 'minority-protection', 'exit-strategy'],\n    metaTitle: 'Tag-Along Rights - Protecting Minority Shareholders in Startups',\n    metaDescription: 'Understand tag-along rights in startup investments, how they protect minority shareholders, and ensure fair treatment in company exits.',\n    caseStudy: {\n      introductionContext: \"Drag-along rights let majority holders force minority shareholders to sell on exit terms; tag-along rights let minority holders join a sale on the same terms.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Public on-air examples of drag-along / tag-along clauses being negotiated are rare on Shark Tank India shows; however, term-sheet primers and post-deal explanations for Shark-backed companies list these as standard investor protections included during legal documentation. Media writeups and investor guides reference standard inclusion of these rights in post-show agreements.\",\n        startupDetails: \"These rights ensure fair treatment for all shareholders during exit events, though rarely discussed on-air.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"These rights are typically documented during the legal stage after the show to protect both founders and investors in future exit scenarios — they are not usually a TV negotiating point but crucial in the final agreements.\",\n        founderPerspective: \"Founders appreciated having protection against being excluded from favorable exit opportunities.\",\n        sharkPerspective: \"Investors ensured that all shareholders could participate fairly in exit events while maintaining deal flexibility.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Drag/tag rights are standard in investor term sheets; founders should understand the implications (e.g., loss of sale veto vs protection from forced exclusion). Because publicly visible on-air negotiation is uncommon, the practical lessons come from post-deal documentation and counsel.\",\n        impactOnFounder: \"Tag-along rights provided important protection for founders and employees during partial exit scenarios.\",\n        dealOutcome: \"Balanced drag-along and tag-along provisions ensured fair treatment while enabling efficient exit processes.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Insist on clear thresholds (who can drag, what approvals needed).\",\n          \"Ask for fair price protections and notice periods for tag-along events.\",\n          \"Review how these rights interact with employee ESOP and subsequent financings.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't neglect tag-along protections that ensure fair treatment in exits.\",\n          \"Avoid complex thresholds that make it difficult to exercise tag-along rights.\",\n          \"Don't ignore how tag-along rights protect employee shareholders in exit scenarios.\"\n        ]\n      }\n    }\n  },\n\n  // Startup Metrics (10 terms)\n  {\n    id: 'monthly-recurring-revenue',\n    term: 'Monthly Recurring Revenue (MRR)',\n    category: 'financial-metrics',\n    icon: '🔄',\n    businessDefinition: 'The predictable revenue generated by a business from its subscribers or recurring customers every month.',\n    simpleExplanation: \"Like having a salary instead of doing odd jobs - it's the guaranteed money your business makes every month from subscriptions or regular customers.\",\n    sharkTankExample: \"What's your MRR? Subscription businesses are valued higher because of predictable monthly revenue.\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'Netflix India generates MRR from millions of subscribers paying monthly fees, making revenue highly predictable.',\n    difficulty: 'intermediate',\n    relatedTerms: ['annual-recurring-revenue', 'subscription-model', 'customer-lifetime-value'],\n    metaTitle: 'Monthly Recurring Revenue (MRR) - Key SaaS Metric Explained',\n    metaDescription: 'Learn about MRR in subscription businesses, how to calculate and optimize it. Essential metric for SaaS startups and investors.',\n    caseStudy: {\n      introductionContext: \"MRR = predictable monthly subscription revenue; critical for valuing subscription/SaaS startups.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"CoGrad (Cograd) — an AI/EdTech subscription product that pitched as a school/SaaS offering on Shark Tank India.\",\n        startupDetails: \"CoGrad was an education technology platform offering AI-powered learning solutions to schools and students.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Founders presented classroom pilots and subscription pricing to justify a recurring revenue base rather than one-time sales — sharks probed monthly license counts and renewal likelihood.\",\n        founderPerspective: \"Founders emphasized the predictability and scalability of subscription revenue vs. one-time sales.\",\n        sharkPerspective: \"Sharks appreciated the recurring nature but wanted proof of sustainable growth and low churn.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"SaaS-style asks succeed when MRR growth and churn assumptions are clear; CoGrad used pilot traction to justify monthly pricing and projected ARR/MRR scaling.\",\n        impactOnFounder: \"MRR focus helped position the business as more valuable than traditional one-time sales models.\",\n        dealOutcome: \"Subscription model validation led to better investor understanding and deal structure.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Show current MRR, new MRR growth rate, and churn in the pitch.\",\n          \"Break down ARPU (average revenue per account) and short-term expansion plans.\",\n          \"Provide month-by-month cohort MRR for the last 6 months.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't confuse one-time revenue with recurring revenue.\",\n          \"Avoid projecting MRR without proof of renewal behavior.\",\n          \"Don't ignore churn rates when presenting MRR growth.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'annual-recurring-revenue',\n    term: 'Annual Recurring Revenue (ARR)',\n    category: 'financial-metrics',\n    icon: '📅',\n    businessDefinition: 'The yearly value of recurring revenue from subscriptions, typically calculated as MRR × 12.',\n    simpleExplanation: \"Your monthly recurring revenue multiplied by 12 - it shows investors how much guaranteed money your business will make in a year.\",\n    sharkTankExample: \"Your ARR of ₹1.2 crores shows strong subscription traction - this is what we like to see in SaaS businesses.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'Zoho\\'s ARR grew to over $1 billion, making it one of India\\'s most valuable SaaS companies.',\n    difficulty: 'intermediate',\n    relatedTerms: ['monthly-recurring-revenue', 'saas-metrics', 'revenue-growth-rate'],\n    metaTitle: 'Annual Recurring Revenue (ARR) - SaaS Business Metric Guide',\n    metaDescription: 'Understand ARR in subscription businesses, how it differs from MRR, and why investors focus on this key SaaS metric.',\n    caseStudy: {\n      introductionContext: \"ARR = annualized recurring revenue (12× MRR for subscription businesses) — used to compare year-over-year scale.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"TeaFit — a consumables brand that used subscription-style sales and reported recurring customer behaviour when discussing revenue and growth after their on-air deal.\",\n        startupDetails: \"TeaFit was a health and wellness brand focusing on tea-based products with subscription delivery models.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Founders translated monthly subscription orders and bulk subscription purchases into an ARR projection to justify valuation and funding needs.\",\n        founderPerspective: \"Founders used ARR to demonstrate business scale and predictability to investors.\",\n        sharkPerspective: \"Sharks valued the annualized view but wanted to understand underlying unit economics.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Presenting ARR (not just one-off sales) convinced sharks of predictable revenue streams and made valuation conversations more defensible.\",\n        impactOnFounder: \"ARR focus helped shift conversation from transactional to subscription-based business model.\",\n        dealOutcome: \"Clear ARR presentation led to better understanding of business potential and scalability.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Convert subscription/order frequency into ARR and show realistic renewal assumptions.\",\n          \"Use ARR to calculate valuation multiples for comparable peers.\",\n          \"Reconcile ARR with cash flow/run-rate in diligence materials.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't present ARR without backing it up with actual recurring behavior.\",\n          \"Avoid inflating ARR projections beyond realistic renewal rates.\",\n          \"Don't ignore the difference between ARR and actual cash collection timing.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'customer-lifetime-value',\n    term: 'Customer Lifetime Value (CLV)',\n    category: 'financial-metrics',\n    icon: '💎',\n    businessDefinition: 'The total revenue a business expects to earn from a single customer throughout their relationship.',\n    simpleExplanation: \"How much money you'll make from one customer over their entire lifetime with your business - like calculating total spending of a loyal restaurant customer.\",\n    sharkTankExample: \"Your CAC is ₹1000 but CLV is ₹5000 - that's a great ratio! You make 5x what you spend to acquire each customer.\",\n    sharkName: 'Vineeta Singh',\n    realWorldExample: 'Amazon Prime members have a higher CLV because they shop more frequently and spend more than regular customers.',\n    difficulty: 'intermediate',\n    relatedTerms: ['customer-acquisition-cost', 'ltv-cac-ratio', 'retention-rate'],\n    metaTitle: 'Customer Lifetime Value (CLV) - Calculate Customer Worth in Business',\n    metaDescription: 'Learn how to calculate and optimize Customer Lifetime Value (CLV), its relationship with CAC, and importance for business growth.',\n    caseStudy: {\n      introductionContext: \"LTV = projected gross profit from a customer over their lifetime; used to justify pay-to-acquire marketing spend.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Snitch — D2C menswear that highlighted repeat purchases and higher-than-average customer value after TV exposure.\",\n        startupDetails: \"Snitch was a direct-to-consumer menswear brand focusing on young professionals with strong brand positioning.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Snitch presented repeat-purchase behaviour and product lines to argue customers deliver revenue over multiple buys — sharks used that to accept higher CAC assumptions.\",\n        founderPerspective: \"Founders emphasized repeat purchase behavior and expanding product lines to increase customer value.\",\n        sharkPerspective: \"Sharks appreciated the LTV model but wanted proof of sustained repeat purchase rates.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"A defensible LTV (backed by repeat-rate and average order value) turned one-off TV spikes into a scalable customer economics story.\",\n        impactOnFounder: \"Strong LTV metrics justified higher marketing spend and customer acquisition investments.\",\n        dealOutcome: \"Clear LTV demonstration supported successful deal negotiations and growth investment strategy.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Calculate LTV from cohort repeat rates, margin per order, and average lifespan.\",\n          \"Show LTV sensitivity across conservative and aggressive repeat-rate scenarios.\",\n          \"Use LTV to set maximum sustainable CAC targets.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't project LTV without historical data on repeat purchases.\",\n          \"Avoid ignoring churn rates when calculating customer lifetime.\",\n          \"Don't confuse gross revenue with actual profit contribution in LTV calculations.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'ltv-cac-ratio',\n    term: 'LTV/CAC Ratio',\n    category: 'startup-metrics',\n    icon: '⚖️',\n    businessDefinition: 'The ratio comparing Customer Lifetime Value to Customer Acquisition Cost, indicating business sustainability.',\n    simpleExplanation: \"How much you earn from a customer versus how much you spend to get them - like earning ₹3000 from a customer but spending only ₹1000 to acquire them (3:1 ratio).\",\n    sharkTankExample: \"Your LTV/CAC ratio is 6:1, which is excellent! You're making ₹6 for every ₹1 spent on customer acquisition.\",\n    sharkName: 'Ashneer Grover',\n    realWorldExample: 'Successful SaaS companies like Freshworks maintain LTV/CAC ratios above 3:1 to ensure profitable growth.',\n    difficulty: 'advanced',\n    relatedTerms: ['customer-lifetime-value', 'customer-acquisition-cost', 'unit-economics'],\n    metaTitle: 'LTV/CAC Ratio - Key Metric for Sustainable Business Growth',\n    metaDescription: 'Understand LTV/CAC ratio, ideal benchmarks, and how this metric determines startup profitability and investor interest.',\n    caseStudy: {\n      introductionContext: \"LTV:CAC measures unit economics — a higher ratio means more efficient customer acquisition.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"FitFeast — a D2C healthy-snacks brand that justified valuation using customer economics and acquisition costs tied to marketplace and D2C channels.\",\n        startupDetails: \"FitFeast was a health-focused snack brand targeting fitness enthusiasts through multiple digital channels.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Founders showed channel CAC (ads, marketplace promos) vs repeat purchase LTV to demonstrate payback period and scale feasibility.\",\n        founderPerspective: \"Founders used channel-specific LTV/CAC ratios to show efficient customer acquisition across channels.\",\n        sharkPerspective: \"Sharks evaluated whether the ratios were sustainable and scalable across different acquisition channels.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Sharks liked businesses with >3× LTV:CAC and short payback; FitFeast used channel-level numbers to renegotiate valuation and the final deal.\",\n        impactOnFounder: \"Strong LTV/CAC ratios supported higher valuation and convinced investors of unit economics viability.\",\n        dealOutcome: \"Clear unit economics presentation led to successful deal negotiation and investment confidence.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Present LTV, CAC and payback months by channel.\",\n          \"Show sensitivity: what happens to payback if CAC increases 20–50%.\",\n          \"Prove early channel scalability before promising large marketing spend.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't present blended ratios without channel-specific breakdowns.\",\n          \"Avoid optimistic LTV projections without proof of repeat behavior.\",\n          \"Don't ignore rising CAC trends in competitive markets.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'churn-rate',\n    term: 'Churn Rate',\n    category: 'startup-metrics',\n    icon: '📉',\n    businessDefinition: 'The percentage of customers who stop using a product or service during a specific time period.',\n    simpleExplanation: \"How many customers you're losing - like a bucket with holes where water (customers) keeps leaking out every month.\",\n    sharkTankExample: \"Your monthly churn rate is 10%? That's too high! You're losing customers faster than you're acquiring them.\",\n    sharkName: 'Ghazal Alagh',\n    realWorldExample: 'Netflix closely monitors churn rate to understand which content keeps subscribers engaged and reduce cancellations.',\n    difficulty: 'intermediate',\n    relatedTerms: ['retention-rate', 'customer-lifetime-value', 'cohort-analysis'],\n    metaTitle: 'Churn Rate - How to Calculate and Reduce Customer Loss',\n    metaDescription: 'Learn about churn rate in subscription businesses, how to calculate it, and proven strategies to reduce customer churn.',\n    caseStudy: {\n      introductionContext: \"Churn = percent of customers lost over a period; critical for subscription/SaaS health and MRR decay modelling.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Proxgy — smart-safety wearables that sold pilots and recurring enterprise contracts; sharks discussed contract renewals and retention risk.\",\n        startupDetails: \"Proxgy developed IoT-based safety wearables for enterprise customers with recurring service contracts.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Investors probed pilot-to-renewal conversion and enterprise churn risk (replacement cycles, hardware failure, procurement cycles) to estimate net MRR decay.\",\n        founderPerspective: \"Founders emphasized low enterprise churn rates and long contract cycles to demonstrate stability.\",\n        sharkPerspective: \"Sharks wanted to understand hardware failure rates and enterprise procurement renewal patterns.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Lower churn in enterprise pilots validated higher projected lifetime value; high hardware/maintenance risk raised churn concerns that affected offers.\",\n        impactOnFounder: \"Demonstrating low churn rates increased investor confidence in recurring revenue sustainability.\",\n        dealOutcome: \"Churn analysis influenced deal structure and investor expectations for growth sustainability.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Report gross & net churn separately (revenue churn vs customer churn).\",\n          \"Show pilot renewal rates and contract lengths for enterprise deals.\",\n          \"Present retention-improving actions (SLA, service, maintenance plans).\"\n        ],\n        mistakesToAvoid: [\n          \"Don't hide churn data or present only gross retention numbers.\",\n          \"Avoid ignoring seasonal or cyclical churn patterns.\",\n          \"Don't underestimate the impact of involuntary churn (payment failures, etc.).\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'retention-rate',\n    term: 'Retention Rate',\n    category: 'startup-metrics',\n    icon: '🤗',\n    businessDefinition: 'The percentage of customers who continue using a product or service over a specific time period.',\n    simpleExplanation: \"The opposite of churn rate - how many customers stick around and keep using your product, showing how much they love it.\",\n    sharkTankExample: \"90% retention rate means customers love your product! High retention leads to predictable revenue growth.\",\n    sharkName: 'Anupam Mittal',\n    realWorldExample: 'WhatsApp had exceptional retention rates with users continuing to use the app daily, making it attractive to Facebook.',\n    difficulty: 'beginner',\n    relatedTerms: ['churn-rate', 'customer-satisfaction', 'product-market-fit'],\n    metaTitle: 'Retention Rate - Measuring Customer Loyalty and Product Success',\n    metaDescription: 'Understand retention rate, how to improve it, and why high retention is crucial for startup growth and investor confidence.',\n    caseStudy: {\n      introductionContext: \"Retention = percent of customers who continue buying — drives LTV and sustainable growth.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Skippi Ice Pops — after Shark Tank, Skippi converted TV interest into repeat retail orders and measured reorders, demonstrating retention for a FMCG impulse product.\",\n        startupDetails: \"Skippi Ice Pops was a natural frozen treats brand that tracked both consumer and retailer repeat purchase behavior.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Founders used reorder frequency and retailer reorder cadence to show customer retention and justify distribution expansion investments.\",\n        founderPerspective: \"Founders demonstrated both end-consumer repeat purchases and B2B retailer reorder patterns.\",\n        sharkPerspective: \"Sharks appreciated retention metrics for an impulse purchase category where retention is typically low.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"High short-term retention (reorders at retail) supported expansion into new outlets and helped sharks forecast faster payback on marketing.\",\n        impactOnFounder: \"Strong retention metrics justified distribution expansion and increased trade confidence.\",\n        dealOutcome: \"Retention data supported scaling strategy and continued investor interest in growth plans.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Measure and report 30/60/90-day repeat purchase rates for consumer brands.\",\n          \"Link retention tactics (new SKUs, seasonal flavors) to measurable uplift.\",\n          \"Use retention cohorts to forecast inventory and working-capital needs.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't confuse one-time viral spikes with sustainable retention.\",\n          \"Avoid measuring retention without accounting for seasonality.\",\n          \"Don't ignore the difference between user retention and revenue retention.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'gross-margin',\n    term: 'Gross Margin',\n    category: 'financial-metrics',\n    icon: '📊',\n    businessDefinition: 'The percentage of revenue remaining after deducting the direct costs of producing goods or services.',\n    simpleExplanation: \"After paying for materials and production, how much profit percentage is left from each sale - like selling a ₹100 shirt that costs ₹40 to make (60% gross margin).\",\n    sharkTankExample: \"Your gross margin is only 20%? That's too thin - you need better pricing or lower production costs.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'Software companies like Microsoft have high gross margins (80%+) because software has low marginal production costs.',\n    difficulty: 'beginner',\n    relatedTerms: ['net-margin', 'unit-economics', 'cost-of-goods-sold'],\n    metaTitle: 'Gross Margin - Calculate Profitability and Business Efficiency',\n    metaDescription: 'Learn how to calculate gross margin, improve it, and understand why investors focus on this key profitability metric.',\n    caseStudy: {\n      introductionContext: \"Gross margin = revenue minus COGS; investors compare margins by category (SaaS vs FMCG vs hardware).\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Cosmix — a herbal supplements brand that disclosed strong margins in its pitch and accepted a deal combining equity + royalty based on projected gross margin and price points.\",\n        startupDetails: \"Cosmix was a herbal supplements brand with strong unit economics and healthy gross margins.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Cosmix presented per-unit gross margin to justify the royalty structure and show room for marketing spend while maintaining profitability.\",\n        founderPerspective: \"Founders used strong gross margins to demonstrate business viability and justify hybrid deal structure.\",\n        sharkPerspective: \"Sharks appreciated the margin analysis which supported the feasibility of royalty payments.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Clear gross-margin math convinced sharks that a royalty (payable as a % of sales) would still leave founders with enough margin to scale.\",\n        impactOnFounder: \"Strong margins provided flexibility in deal structure and demonstrated business sustainability.\",\n        dealOutcome: \"Healthy gross margins enabled acceptance of royalty-based deal terms while maintaining profitability.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Present unit economics: price -> COGS -> gross margin -> contribution margin.\",\n          \"Show margin sensitivity if procurement costs or SKU mix change.\",\n          \"Use margin to set sustainable marketing budgets and royalty feasibility.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't hide or downplay thin margins without improvement plans.\",\n          \"Avoid accepting royalty deals without ensuring sufficient remaining margin.\",\n          \"Don't ignore how scale affects COGS and margin improvement.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'runway',\n    term: 'Runway',\n    category: 'financial-metrics',\n    icon: '🛬',\n    businessDefinition: 'The amount of time a company can continue operating with its current cash reserves at the current burn rate.',\n    simpleExplanation: \"How long your money will last - like having ₹10 lakhs and spending ₹2 lakhs monthly means you have 5 months runway before needing more money.\",\n    sharkTankExample: \"With ₹50 lakhs in bank and ₹8 lakhs monthly burn, you have just 6 months runway - plan your next funding round now!\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'During COVID-19, many startups extended their runway by cutting costs and reducing burn rates to survive longer.',\n    difficulty: 'intermediate',\n    relatedTerms: ['burn-rate', 'cash-flow', 'funding-round'],\n    metaTitle: 'Startup Runway - How Long Your Money Will Last and Planning',\n    metaDescription: 'Calculate your startup runway, understand its importance for fundraising timing, and strategies to extend it during tough times.',\n    caseStudy: {\n      introductionContext: \"Runway = months of operation remaining at current burn — a key metric showing urgency for fundraising.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Stage (vernacular OTT) — founders accepted equity + debt to extend runway and execute content growth plans after negotiating with sharks.\",\n        startupDetails: \"Stage was a vernacular OTT platform that needed capital to extend operations and fund content creation.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Sharks structured part of the investment as debt and equity to stretch runway while limiting dilution; founders used runway projections to justify short-term KPIs.\",\n        founderPerspective: \"Founders emphasized runway needs to demonstrate urgency while showing clear milestone-based capital deployment.\",\n        sharkPerspective: \"Sharks structured deal to provide runway extension while tying capital release to performance milestones.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Clear runway math (burn vs cash + committed funding) helped sharks structure deals that tied capital tranches to milestone-based runway extension.\",\n        impactOnFounder: \"Transparent runway analysis enabled structured funding that balanced investor protection with operational needs.\",\n        dealOutcome: \"Runway-focused discussion led to hybrid debt-equity structure that optimized capital efficiency.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Show current burn, cash on hand, and runway under base/worst-case scenarios.\",\n          \"Tie fundraising tranches to explicit runway-extension milestones.\",\n          \"Model hiring and marketing spends against runway to avoid surprise shortfalls.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't wait until runway is critically low before starting fundraising.\",\n          \"Avoid unrealistic burn projections that underestimate operational costs.\",\n          \"Don't ignore seasonal variations in burn rate and revenue timing.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'cohort-analysis',\n    term: 'Cohort Analysis',\n    category: 'financial-metrics',\n    icon: '👥',\n    businessDefinition: 'A method of analyzing customer behavior by grouping customers based on shared characteristics or time of acquisition.',\n    simpleExplanation: \"Tracking groups of customers who joined in the same month to see how their behavior changes over time - like following a class of students through different grades.\",\n    sharkTankExample: \"Your cohort analysis shows customers from January are spending more than February customers - what changed?\",\n    sharkName: 'Vineeta Singh',\n    realWorldExample: 'Spotify uses cohort analysis to understand which user acquisition channels bring the most loyal subscribers.',\n    difficulty: 'advanced',\n    relatedTerms: ['retention-rate', 'churn-rate', 'customer-behavior'],\n    metaTitle: 'Cohort Analysis - Track Customer Behavior and Business Performance',\n    metaDescription: 'Learn cohort analysis for startups, how to segment customers, and use data to improve retention and growth strategies.',\n    caseStudy: {\n      introductionContext: \"Cohort analysis tracks groups (by signup date/channel) to measure retention, LTV, and marketing effectiveness.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Bummer — a D2C innerwear brand that emphasised repeat behavior and customer segments; cohort metrics helped founders explain which acquisition channels produced the highest repeat rates.\",\n        startupDetails: \"Bummer was a D2C innerwear brand that used cohort analysis to optimize customer acquisition and retention strategies.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Founders used cohorts (by month of acquisition and by channel) to show retention improvements over time and the long-term value of organic/PR-driven cohorts (post-show).\",\n        founderPerspective: \"Founders demonstrated how cohort analysis guided product improvements and channel optimization decisions.\",\n        sharkPerspective: \"Sharks appreciated data-driven approach to understanding customer behavior and channel effectiveness.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Cohort-driven evidence (improving retention for later cohorts) reassured sharks that product/UX fixes and marketing shifts were working and scalable.\",\n        impactOnFounder: \"Cohort analysis provided clear framework for measuring and communicating business improvements over time.\",\n        dealOutcome: \"Data-driven cohort insights supported investment decision and provided roadmap for post-investment optimization.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Present cohort tables (month × retention %) for last 6–12 months.\",\n          \"Use cohorts to optimize channel mix and onboarding improvements.\",\n          \"Highlight cohort LTV trends to show the impact of product changes.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't present cohort data without clear insights and action plans.\",\n          \"Avoid cherry-picking favorable cohorts without explaining variations.\",\n          \"Don't ignore seasonal effects when analyzing cohort performance.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'revenue',\n    term: 'Revenue',\n    category: 'financial-metrics',\n    icon: '💰',\n    businessDefinition: 'The total amount of income generated by a business from its operations before any expenses are deducted.',\n    simpleExplanation: \"All the money your business brings in from selling products or services - like total sales before paying for anything.\",\n    sharkTankExample: \"Your revenue is ₹50 lakhs, but what's your profit? Revenue doesn't mean anything if you're not making money.\",\n    sharkName: 'Ashneer Grover',\n    realWorldExample: 'Flipkart reported revenue of ₹34,000 crores in FY2021 from all its marketplace and retail operations.',\n    difficulty: 'beginner',\n    relatedTerms: ['gross-revenue', 'net-revenue', 'profit', 'turnover'],\n    metaTitle: 'Revenue - Understanding Business Income and Sales',\n    metaDescription: 'Learn about revenue in business, different types of revenue, and how it differs from profit. Essential financial concept for entrepreneurs.',\n    caseStudy: {\n      introductionContext: \"Revenue is the top line of financial statements — total income before costs, crucial for scale and growth assessment.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Licious — meat delivery startup reported growing monthly revenue from ₹2 crores to ₹15+ crores, demonstrating strong market demand and scalability.\",\n        startupDetails: \"Licious achieved significant revenue growth through direct-to-consumer meat delivery across multiple Indian cities.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Founders emphasized revenue growth rate and monthly trajectory to show business momentum and market validation, helping sharks understand scalability potential.\",\n        founderPerspective: \"Strong revenue growth demonstrated market demand and business model validation.\",\n        sharkPerspective: \"Sharks appreciated revenue growth but probed underlying unit economics and path to profitability.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"High revenue growth rate impressed sharks and supported higher valuation, but investors also examined conversion to profit and customer acquisition efficiency.\",\n        impactOnFounder: \"Revenue growth became primary metric for demonstrating business success and scaling potential.\",\n        dealOutcome: \"Strong revenue trajectory supported successful funding and continued expansion plans.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Present revenue growth rate alongside absolute numbers to show momentum.\",\n          \"Break down revenue by channel, product line, or customer segment for clarity.\",\n          \"Connect revenue growth to specific business initiatives and market opportunities.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't present revenue without addressing profitability and unit economics.\",\n          \"Avoid inflating revenue with one-time or non-recurring items.\",\n          \"Don't ignore revenue quality and sustainability when presenting growth.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'net-revenue',\n    term: 'Net Revenue',\n    category: 'financial-metrics',\n    icon: '📊',\n    businessDefinition: 'Revenue after deducting returns, allowances, discounts, and other revenue adjustments.',\n    simpleExplanation: \"Your total sales minus refunds, discounts, and returns - the actual money you keep from sales.\",\n    sharkTankExample: \"Your gross revenue is ₹1 crore, but after returns and discounts, your net revenue is ₹80 lakhs - focus on net numbers.\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'E-commerce companies like Myntra report net revenue after accounting for returns, which can be 20-30% in fashion.',\n    difficulty: 'intermediate',\n    relatedTerms: ['gross-revenue', 'revenue', 'returns', 'discounts'],\n    metaTitle: 'Net Revenue - Calculate True Business Income After Adjustments',\n    metaDescription: 'Understand net revenue calculation, how it differs from gross revenue, and why it matters for business profitability analysis.',\n    caseStudy: {\n      introductionContext: \"Net revenue provides the true picture of business income after customer-related adjustments — critical for accurate profitability analysis.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Mamaearth — personal care brand had to account for high returns in online beauty sales when presenting true revenue to sharks.\",\n        startupDetails: \"Mamaearth developed a natural personal care brand with significant online sales requiring careful revenue reporting.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Founders presented net revenue after factoring in product returns and customer satisfaction guarantees, providing realistic business performance metrics.\",\n        founderPerspective: \"Net revenue reporting built credibility and provided more accurate business performance metrics.\",\n        sharkPerspective: \"Sharks appreciated transparent revenue reporting that factored in actual customer behavior.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Transparent net revenue reporting built investor trust and provided realistic foundation for scaling and profitability projections.\",\n        impactOnFounder: \"Accurate revenue reporting became foundation for honest business planning and investor relations.\",\n        dealOutcome: \"Transparent financial reporting supported investor confidence and deal completion.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Always present net revenue alongside gross revenue for transparency.\",\n          \"Track return rates and discount impact to understand revenue quality.\",\n          \"Use net revenue for accurate profitability and margin calculations.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't present only gross revenue without acknowledging adjustments.\",\n          \"Avoid underestimating return rates and their impact on net revenue.\",\n          \"Don't ignore seasonal variations in returns and discounts.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'gross-revenue',\n    term: 'Gross Revenue',\n    category: 'financial-metrics',\n    icon: '💵',\n    businessDefinition: 'Total revenue before any deductions for returns, allowances, discounts, or other revenue reductions.',\n    simpleExplanation: \"All the money from sales before subtracting anything - the biggest possible revenue number before any adjustments.\",\n    sharkTankExample: \"Your gross revenue looks impressive, but what matters is how much you actually keep after returns and costs.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'Amazon India reports gross revenue including all marketplace transactions before deducting seller fees and returns.',\n    difficulty: 'beginner',\n    relatedTerms: ['net-revenue', 'revenue', 'sales', 'turnover'],\n    metaTitle: 'Gross Revenue - Total Business Income Before Adjustments',\n    metaDescription: 'Learn about gross revenue, how it compares to net revenue, and why investors look beyond gross numbers for true performance.',\n    caseStudy: {\n      introductionContext: \"Gross revenue represents maximum income before adjustments — useful for scale assessment but must be evaluated alongside net revenue.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Nykaa — beauty marketplace achieved significant gross revenue through platform transactions but sharks focused on take rates and net revenue.\",\n        startupDetails: \"Nykaa built a comprehensive beauty marketplace with significant gross merchandise value and transaction volumes.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Founders presented gross revenue to demonstrate scale and market traction, but sharks probed conversion to actual retained revenue through take rates.\",\n        founderPerspective: \"Gross revenue demonstrated business scale and market opportunity in beauty sector.\",\n        sharkPerspective: \"Sharks used gross revenue for scale assessment but focused on net revenue conversion and profitability.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"High gross revenue demonstrated market potential and business scaling, but investors required clarity on net revenue and actual profit capture.\",\n        impactOnFounder: \"Gross revenue became useful for demonstrating market opportunity while net metrics drove investment decisions.\",\n        dealOutcome: \"Scale demonstration through gross revenue supported initial interest while net metrics determined final deal terms.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Use gross revenue to demonstrate business scale and market opportunity.\",\n          \"Always pair gross revenue with net revenue and take rate information.\",\n          \"Show gross revenue trends to demonstrate market traction and growth momentum.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't rely solely on gross revenue without showing actual retained income.\",\n          \"Avoid confusing investors by not clearly distinguishing gross from net revenue.\",\n          \"Don't ignore the quality of gross revenue and its conversion to profit.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'gmv',\n    term: 'GMV (Gross Merchandise Value)',\n    category: 'financial-metrics',\n    icon: '🛒',\n    businessDefinition: 'The total value of goods sold through a marketplace or platform over a specific time period.',\n    simpleExplanation: \"Total value of all products sold on your platform - like if customers bought ₹100 crores worth of products through your app.\",\n    sharkTankExample: \"Your GMV is ₹10 crores, but what's your take rate? GMV doesn't mean profit - show me your actual revenue.\",\n    sharkName: 'Vineeta Singh',\n    realWorldExample: 'Flipkart reported GMV of over $23 billion in 2021, representing total value of goods sold on their platform.',\n    difficulty: 'intermediate',\n    relatedTerms: ['revenue', 'take-rate', 'marketplace', 'transaction-volume'],\n    metaTitle: 'GMV (Gross Merchandise Value) - Measure Marketplace Transaction Volume',\n    metaDescription: 'Understand GMV in marketplace businesses, how it differs from revenue, and why take rates matter for profitability.',\n    caseStudy: {\n      introductionContext: \"GMV measures total marketplace transaction value — important for scale assessment but must be converted to actual revenue through take rates.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"IndiaMART — B2B marketplace emphasized GMV growth to demonstrate platform utility and business model scalability for connecting buyers and sellers.\",\n        startupDetails: \"IndiaMART built a comprehensive B2B marketplace connecting manufacturers, suppliers, and buyers across India.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Founders used GMV growth to show marketplace adoption and transaction volume, then explained commission structure and revenue conversion.\",\n        founderPerspective: \"GMV demonstrated successful marketplace creation and growing transaction volumes between businesses.\",\n        sharkPerspective: \"Sharks appreciated GMV scale but focused on monetization through take rates and sustainable business model.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"High GMV demonstrated marketplace success and scale potential, but conversion to revenue through sustainable take rates determined investment viability.\",\n        impactOnFounder: \"GMV became primary metric for demonstrating marketplace adoption and transaction scale.\",\n        dealOutcome: \"Strong GMV growth supported marketplace validation while revenue conversion determined final investment terms.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Present GMV alongside take rates to show revenue conversion potential.\",\n          \"Track GMV growth rate to demonstrate marketplace adoption and scaling.\",\n          \"Use GMV per user metrics to understand marketplace engagement depth.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't present GMV without clear explanation of revenue conversion mechanism.\",\n          \"Avoid focusing only on GMV growth without addressing profitability path.\",\n          \"Don't ignore GMV quality and repeat transaction patterns.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'irr',\n    term: 'IRR (Internal Rate of Return)',\n    category: 'financial-metrics',\n    icon: '📈',\n    businessDefinition: 'The discount rate that makes the net present value of all cash flows from an investment equal to zero.',\n    simpleExplanation: \"The annual profit rate an investor can expect from their investment - like earning 25% per year on money invested in your business.\",\n    sharkTankExample: \"Based on your projections, my IRR would be 40% - that's an attractive return for the risk I'm taking.\",\n    sharkName: 'Anupam Mittal',\n    realWorldExample: 'Venture capital firms typically target IRR of 20-30% for their portfolio investments to compensate for high risk.',\n    difficulty: 'advanced',\n    relatedTerms: ['roi', 'cash-flow', 'valuation', 'returns'],\n    metaTitle: 'IRR (Internal Rate of Return) - Calculate Investment Returns Accurately',\n    metaDescription: 'Understand IRR calculation, why investors use it, and how to improve your business IRR for better funding outcomes.',\n    caseStudy: {\n      introductionContext: \"IRR measures annualized return rate on investment — critical for investor evaluation and comparison across opportunities.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Ola — ride-sharing platform demonstrated strong IRR potential to early investors through rapid market expansion and unit economics improvement.\",\n        startupDetails: \"Ola achieved significant scale and market penetration, providing strong returns to early-stage investors.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Investors calculated IRR based on investment amount, timeline, and exit valuation scenarios to evaluate return potential versus other opportunities.\",\n        founderPerspective: \"Founders understood IRR requirements helped structure business model and growth strategy for investor returns.\",\n        sharkPerspective: \"Sharks used IRR projections to compare investment opportunities and determine acceptable risk-return ratios.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Strong projected IRR attracted multiple funding rounds and enabled rapid scaling through investor confidence in return potential.\",\n        impactOnFounder: \"Understanding IRR expectations helped founders align business strategy with investor return requirements.\",\n        dealOutcome: \"Compelling IRR projections supported premium valuations and competitive investor interest.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Model multiple exit scenarios to show potential IRR ranges for investors.\",\n          \"Understand investor IRR expectations for your industry and stage.\",\n          \"Build business model that can deliver attractive IRR through scale and profitability.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't present unrealistic IRR projections without solid business fundamentals.\",\n          \"Avoid ignoring time value of money when calculating investor returns.\",\n          \"Don't underestimate the importance of IRR in investor decision-making.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'profit',\n    term: 'Profit',\n    category: 'financial-metrics',\n    icon: '💹',\n    businessDefinition: 'The financial gain obtained when revenue exceeds all business expenses and costs.',\n    simpleExplanation: \"Money left over after paying all your business expenses - the actual money you make from running your business.\",\n    sharkTankExample: \"Revenue is vanity, profit is sanity. Show me your path to profitability - when will you start making actual money?\",\n    sharkName: 'Ashneer Grover',\n    realWorldExample: 'Zomato took years to achieve profitability despite high revenue, focusing on market share before optimizing costs.',\n    difficulty: 'beginner',\n    relatedTerms: ['gross-profit', 'net-profit', 'revenue', 'margin'],\n    metaTitle: 'Profit - The Ultimate Business Success Metric',\n    metaDescription: 'Understand profit types, how to calculate them, and why profitability matters more than revenue for business sustainability.',\n    caseStudy: {\n      introductionContext: \"Profit is the ultimate measure of business success — revenue minus all costs, showing actual value creation.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Paper Boat — beverage brand focused on premium pricing and brand building to achieve profitability while competing with established players.\",\n        startupDetails: \"Paper Boat built a premium beverage brand with focus on profitability through differentiated positioning and pricing.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Founders emphasized profit margins and path to profitability over revenue growth, demonstrating sustainable business model with premium pricing strategy.\",\n        founderPerspective: \"Profitability focus enabled sustainable growth and reduced dependency on continuous funding.\",\n        sharkPerspective: \"Sharks appreciated clear profit generation over pure revenue growth in competitive FMCG market.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Profit-focused approach enabled sustainable scaling and attractive investor returns without requiring excessive capital infusion.\",\n        impactOnFounder: \"Profitability became foundation for business independence and strategic decision-making autonomy.\",\n        dealOutcome: \"Clear profit generation supported favorable investment terms and reduced investor risk concerns.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Present clear path to profitability with specific timeline and milestones.\",\n          \"Show unit-level profitability before scaling to demonstrate model viability.\",\n          \"Balance growth investment with profit generation for sustainable scaling.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't sacrifice long-term profitability for short-term revenue growth.\",\n          \"Avoid unclear cost accounting that obscures true profit picture.\",\n          \"Don't ignore the importance of profit margins in competitive markets.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'gross-profit',\n    term: 'Gross Profit',\n    category: 'financial-metrics',\n    icon: '📊',\n    businessDefinition: 'Revenue minus the direct costs of producing goods or services, excluding operating expenses.',\n    simpleExplanation: \"Money left after paying for materials and production costs, but before paying office rent, salaries, and other business expenses.\",\n    sharkTankExample: \"Your gross profit margin is 60%? That's healthy - you have good pricing power and cost control on production.\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'Apple maintains high gross profit margins (35-40%) on iPhones by controlling design and commanding premium pricing.',\n    difficulty: 'intermediate',\n    relatedTerms: ['gross-margin', 'cost-of-goods-sold', 'net-profit', 'revenue'],\n    metaTitle: 'Gross Profit - Measure Production Profitability and Pricing Power',\n    metaDescription: 'Learn gross profit calculation, how it differs from net profit, and why gross margins indicate business health.',\n    caseStudy: {\n      introductionContext: \"Gross profit measures production efficiency and pricing power — essential for evaluating core business model viability.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"The Whole Truth Foods — protein bar company emphasized high gross margins through direct manufacturing and premium ingredient sourcing.\",\n        startupDetails: \"The Whole Truth Foods achieved strong gross margins through vertical integration and premium natural ingredient positioning.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Founders demonstrated gross profit margins above industry standards through efficient manufacturing and premium pricing strategy, showing sustainable unit economics.\",\n        founderPerspective: \"Strong gross margins provided flexibility for marketing investment and retail partnerships.\",\n        sharkPerspective: \"Sharks appreciated healthy gross margins as foundation for sustainable scaling and competitive positioning.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"High gross profit margins enabled aggressive marketing spend and retail expansion while maintaining profitability at unit level.\",\n        impactOnFounder: \"Strong gross margins became competitive advantage enabling pricing flexibility and market positioning.\",\n        dealOutcome: \"Healthy gross margins supported investment confidence and scaling strategy validation.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Maintain gross margins above 50% for healthy SaaS/digital businesses, 30%+ for physical products.\",\n          \"Track gross margin trends to understand pricing power and cost inflation impact.\",\n          \"Use gross profit to fund customer acquisition and business development activities.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't sacrifice gross margins for revenue growth without clear scaling benefits.\",\n          \"Avoid unclear cost allocation between COGS and operating expenses.\",\n          \"Don't ignore gross margin trends that indicate competitive or supply chain pressures.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'net-profit',\n    term: 'Net Profit',\n    category: 'financial-metrics',\n    icon: '🏆',\n    businessDefinition: 'The amount remaining after all expenses, taxes, and costs have been deducted from total revenue.',\n    simpleExplanation: \"The final profit after paying for everything - materials, salaries, rent, taxes - this is what you actually take home.\",\n    sharkTankExample: \"Your net profit margin is 15%? That's excellent! You're efficiently managing all costs while scaling the business.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'Infosys consistently maintains net profit margins of 20-25%, demonstrating operational efficiency in IT services.',\n    difficulty: 'intermediate',\n    relatedTerms: ['gross-profit', 'operating-expenses', 'ebitda', 'bottom-line'],\n    metaTitle: 'Net Profit - The Ultimate Business Performance Metric',\n    metaDescription: 'Understand net profit calculation, how to improve it, and why net margins determine business sustainability.',\n    caseStudy: {\n      introductionContext: \"Net profit represents true business performance after all costs — the ultimate measure of operational efficiency and value creation.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Boat — consumer electronics brand achieved strong net profitability through efficient operations and brand-premium pricing in competitive market.\",\n        startupDetails: \"Boat built a profitable consumer electronics brand with strong net margins through operational efficiency and premium positioning.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Founders demonstrated ability to generate net profit while scaling, showing operational discipline and efficient cost management across all business functions.\",\n        founderPerspective: \"Net profitability provided business independence and flexibility for strategic investments.\",\n        sharkPerspective: \"Sharks appreciated net profit generation as proof of complete business model viability and management execution.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Consistent net profit generation enabled self-funded growth and reduced dependency on external capital for operations.\",\n        impactOnFounder: \"Net profitability became foundation for business autonomy and strategic decision-making independence.\",\n        dealOutcome: \"Strong net margins supported premium valuation and reduced investor risk in competitive market.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Target net profit margins of 10-20% for sustainable business growth.\",\n          \"Monitor net profit trends to ensure scaling doesn't compromise profitability.\",\n          \"Use net profit reinvestment for sustainable growth and competitive advantage.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't ignore net profitability while focusing only on gross margins.\",\n          \"Avoid unsustainable cost reduction that compromises long-term net profit generation.\",\n          \"Don't sacrifice net profit for market share without clear competitive advantage.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'ebitda',\n    term: 'EBITDA',\n    category: 'financial-metrics',\n    icon: '📋',\n    businessDefinition: 'Earnings Before Interest, Taxes, Depreciation, and Amortization - a measure of operating performance.',\n    simpleExplanation: \"Think of EBITDA as your business's 'raw earning power' - it's like checking how much money your lemonade stand makes before worrying about the loan you took to buy the cart, taxes you owe, or the cart wearing out.\\n\\nIf you sell ₹100 worth of lemonade and spend ₹60 on lemons and sugar, your EBITDA is ₹40. This tells investors if your core business idea actually makes money, regardless of how you financed it.\\n\\n**Good EBITDA:** 15-25% for most businesses (₹15-25 profit per ₹100 sales)\\n**Bad EBITDA:** Below 10% or negative means your basic business model struggles\\n\\nTech companies like Infosys have 25-30% EBITDA, while restaurants typically have 10-15%.\",\n    sharkTankExample: \"Your EBITDA is positive and growing - that shows your core business is healthy and profitable at the operational level.\",\n    sharkName: 'Ghazal Alagh',\n    realWorldExample: 'Zomato improved from -40% EBITDA (losing ₹40 for every ₹100 in sales) to +2% EBITDA by optimizing delivery costs and focusing on profitable orders.\\n\\nInfosys maintains 25-30% EBITDA showing excellent operational efficiency.\\n\\n**Good Example:** A SaaS company with ₹10 lakh monthly revenue and ₹7 lakh in operational costs has 30% EBITDA (₹3 lakh), excellent for tech startups.\\n\\n**Bad Example:** A restaurant with ₹5 lakh revenue but ₹6 lakh in food, staff, and rent costs has -20% EBITDA, indicating fundamental business model problems.',\n    difficulty: 'advanced',\n    relatedTerms: ['ebit', 'operating-profit', 'net-profit', 'cash-flow'],\n    metaTitle: 'EBITDA - Measure Core Business Operating Performance',\n    metaDescription: 'Learn EBITDA calculation, why investors use it, and how to improve operational efficiency through EBITDA analysis.',\n    caseStudy: {\n      introductionContext: \"EBITDA measures operational performance excluding financial and accounting decisions — crucial for comparing business efficiency.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Zomato — food delivery platform focused on EBITDA improvement through operational efficiency and market consolidation before achieving net profitability.\",\n        startupDetails: \"Zomato demonstrated path to profitability through EBITDA optimization and operational leverage in food delivery business.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Management focused on EBITDA per order and geographic market efficiency to show operational improvement independent of capital structure and accounting methods.\",\n        founderPerspective: \"EBITDA focus enabled clear measurement of operational improvements and efficiency gains.\",\n        sharkPerspective: \"Investors used EBITDA to evaluate core business performance and path to sustainable profitability.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"EBITDA improvement demonstrated operational efficiency and provided clear path to net profitability through operational leverage.\",\n        impactOnFounder: \"EBITDA focus enabled operational optimization and clear performance measurement across markets.\",\n        dealOutcome: \"Strong EBITDA trajectory supported continued investment and scaling confidence.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Track EBITDA margins by business unit to identify operational efficiency opportunities.\",\n          \"Use EBITDA to compare performance across companies with different capital structures.\",\n          \"Focus on EBITDA improvement before optimizing capital structure and tax strategies.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't ignore cash flow and capital expenditure requirements when focusing on EBITDA.\",\n          \"Avoid using EBITDA as the only profitability metric without considering net profit.\",\n          \"Don't manipulate operational metrics to artificially improve EBITDA without real efficiency gains.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'ebit',\n    term: 'EBIT',\n    category: 'financial-metrics',\n    icon: '💼',\n    businessDefinition: 'Earnings Before Interest and Taxes - operating profit excluding financing and tax considerations.',\n    simpleExplanation: \"Profit from business operations before paying loan interest and taxes - shows how profitable your core business is.\",\n    sharkTankExample: \"Your EBIT shows the business operations are profitable - now we need to see if the capital structure makes sense.\",\n    sharkName: 'Anupam Mittal',\n    realWorldExample: 'Manufacturing companies like Tata Motors report EBIT to show operational performance separate from financing decisions.',\n    difficulty: 'advanced',\n    relatedTerms: ['ebitda', 'operating-profit', 'interest-expense', 'taxes'],\n    metaTitle: 'EBIT - Analyze Operating Profit Before Financing Costs',\n    metaDescription: 'Understand EBIT calculation, how it differs from EBITDA, and why it matters for business valuation and performance.',\n    caseStudy: {\n      introductionContext: \"EBIT measures operating profit before financing and tax effects — essential for evaluating core business profitability.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Mahindra Electric — electric vehicle division focused on EBIT improvement through operational efficiency and scale economics in manufacturing.\",\n        startupDetails: \"Mahindra Electric worked on achieving positive EBIT through manufacturing efficiency and scale in electric vehicle production.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Management tracked EBIT per vehicle and manufacturing efficiency to demonstrate operational improvement independent of financing structure and government incentives.\",\n        founderPerspective: \"EBIT focus enabled clear measurement of manufacturing and operational efficiency improvements.\",\n        sharkPerspective: \"Investors used EBIT to evaluate core manufacturing profitability and scaling potential.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"EBIT improvement demonstrated manufacturing efficiency and provided foundation for sustainable profitability through operational leverage.\",\n        impactOnFounder: \"EBIT optimization became key metric for operational decision-making and performance measurement.\",\n        dealOutcome: \"Improving EBIT trajectory supported investment confidence in manufacturing efficiency and scaling.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Use EBIT to evaluate core business profitability independent of financing decisions.\",\n          \"Track EBIT margins to understand operational efficiency and competitive positioning.\",\n          \"Focus on EBIT improvement through operational excellence before optimizing capital structure.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't ignore interest expenses when evaluating total business profitability.\",\n          \"Avoid focusing only on EBIT without considering cash flow and capital requirements.\",\n          \"Don't manipulate depreciation to artificially improve EBIT without real operational gains.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'cash-flow',\n    term: 'Cash Flow',\n    category: 'financial-metrics',\n    icon: '💸',\n    businessDefinition: 'The net amount of cash moving into and out of a business during a specific period.',\n    simpleExplanation: \"Actual money coming in and going out of your business - like tracking your bank account balance changes every month.\",\n    sharkTankExample: \"Your profits look good on paper, but what's your cash flow? Can you actually pay your bills every month?\",\n    sharkName: 'Ashneer Grover',\n    realWorldExample: 'Many profitable companies fail due to poor cash flow management - they have sales but money comes in too slowly.',\n    difficulty: 'intermediate',\n    relatedTerms: ['burn-rate', 'working-capital', 'accounts-receivable', 'runway'],\n    metaTitle: 'Cash Flow - Manage Business Liquidity and Financial Health',\n    metaDescription: 'Understand cash flow management, why it matters more than profit, and how to improve cash flow in your business.',\n    caseStudy: {\n      introductionContext: \"Cash flow measures actual money movement — critical for survival regardless of profitability on paper.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Captain Fresh — B2B seafood supply chain company emphasized cash flow management through inventory financing and payment terms optimization.\",\n        startupDetails: \"Captain Fresh built a seafood supply chain business requiring careful cash flow management due to perishable inventory and payment cycles.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Founders demonstrated cash flow positive operations through efficient inventory turnover and payment terms management, crucial for supply chain business sustainability.\",\n        founderPerspective: \"Cash flow management became critical for maintaining operations while scaling supply chain infrastructure.\",\n        sharkPerspective: \"Sharks appreciated positive cash flow generation as foundation for sustainable scaling in capital-intensive business.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Strong cash flow management enabled rapid scaling without continuous funding, providing operational independence and growth flexibility.\",\n        impactOnFounder: \"Cash flow discipline became competitive advantage enabling faster growth and better supplier relationships.\",\n        dealOutcome: \"Positive cash flow supported investor confidence and enabled aggressive scaling strategy.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Monitor cash flow weekly to identify potential liquidity issues early.\",\n          \"Optimize payment terms with customers and suppliers for better cash conversion.\",\n          \"Build cash flow forecasting models for different growth scenarios.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't confuse profitability with positive cash flow - they can be very different.\",\n          \"Avoid overextending growth without adequate cash flow buffer.\",\n          \"Don't ignore seasonal cash flow patterns in forecasting.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'burn-rate',\n    term: 'Burn Rate',\n    category: 'financial-metrics',\n    icon: '🔥',\n    businessDefinition: 'The rate at which a company is spending its available cash reserves, typically measured monthly.',\n    simpleExplanation: \"How fast you're spending money each month - like how quickly your savings account is decreasing every month.\",\n    sharkTankExample: \"Your burn rate is ₹20 lakhs per month? At this rate, you'll run out of money in 6 months without new funding.\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'Many startups track burn rate closely to determine when they need to raise their next funding round.',\n    difficulty: 'intermediate',\n    relatedTerms: ['runway', 'gross-burn-rate', 'net-burn-rate', 'cash-flow'],\n    metaTitle: 'Burn Rate - Calculate How Fast Your Startup Spends Money',\n    metaDescription: 'Learn about burn rate calculation, how to optimize it, and why controlling burn rate is crucial for startup survival.',\n    caseStudy: {\n      introductionContext: \"Burn rate determines company survival timeline — critical for fundraising timing and operational efficiency.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Ola Electric — electric vehicle company managed burn rate carefully during scaling phase to optimize capital efficiency and operational leverage.\",\n        startupDetails: \"Ola Electric required significant capital for manufacturing setup while managing burn rate for sustainable scaling.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Management optimized burn rate through efficient capital allocation and operational scaling, balancing growth investment with cash preservation.\",\n        founderPerspective: \"Burn rate optimization became critical for extending runway and achieving key milestones between funding rounds.\",\n        sharkPerspective: \"Investors evaluated burn rate efficiency and runway planning as key indicators of management discipline.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Disciplined burn rate management enabled achievement of scaling milestones and successful fundraising at higher valuations.\",\n        impactOnFounder: \"Burn rate discipline became foundation for strategic decision-making and operational efficiency.\",\n        dealOutcome: \"Efficient burn rate management supported investor confidence and premium valuation achievement.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Track burn rate monthly and forecast runway under different scenarios.\",\n          \"Optimize burn rate by focusing spending on growth-driving activities.\",\n          \"Plan fundraising timeline based on burn rate and desired runway buffer.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't ignore burn rate optimization while focusing only on growth metrics.\",\n          \"Avoid dramatic burn rate increases without corresponding revenue acceleration.\",\n          \"Don't underestimate time required for fundraising when calculating runway needs.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'gross-burn-rate',\n    term: 'Gross Burn Rate',\n    category: 'financial-metrics',\n    icon: '🔥📊',\n    businessDefinition: 'The total amount of cash a company spends each month on operating expenses, regardless of revenue.',\n    simpleExplanation: \"Total monthly expenses including salaries, rent, and all costs - like your complete monthly spending before considering any income.\",\n    sharkTankExample: \"Your gross burn is ₹15 lakhs monthly, but you're only making ₹8 lakhs in revenue - that's unsustainable.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'Tech startups often have high gross burn rates due to talent costs, infrastructure, and growth investments.',\n    difficulty: 'intermediate',\n    relatedTerms: ['net-burn-rate', 'burn-rate', 'operating-expenses', 'fixed-costs'],\n    metaTitle: 'Gross Burn Rate - Track Total Monthly Business Spending',\n    metaDescription: 'Understand gross burn rate calculation, how it differs from net burn rate, and strategies to optimize spending.',\n    caseStudy: {\n      introductionContext: \"Gross burn rate shows total cash outflow — essential for understanding full cost structure and efficiency opportunities.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Byju's — edtech platform managed gross burn rate through operational efficiency while scaling content creation and technology infrastructure.\",\n        startupDetails: \"Byju's required significant investment in content, technology, and talent while managing gross burn rate for sustainable growth.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Management tracked gross burn rate across different cost categories to optimize spending allocation and operational efficiency during rapid scaling.\",\n        founderPerspective: \"Gross burn rate tracking enabled data-driven cost optimization and efficient resource allocation.\",\n        sharkPerspective: \"Investors evaluated gross burn rate trends to assess operational discipline and scaling efficiency.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Disciplined gross burn rate management enabled sustainable scaling while maintaining operational efficiency and competitive positioning.\",\n        impactOnFounder: \"Gross burn rate optimization became foundation for sustainable growth and operational excellence.\",\n        dealOutcome: \"Efficient gross burn rate management supported continued investor confidence and scaling success.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Break down gross burn rate by category to identify optimization opportunities.\",\n          \"Track gross burn rate per employee or per customer to understand efficiency trends.\",\n          \"Set gross burn rate targets aligned with growth milestones and fundraising timeline.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't cut gross burn rate arbitrarily without considering growth impact.\",\n          \"Avoid ignoring fixed vs. variable components of gross burn rate.\",\n          \"Don't optimize gross burn rate without maintaining competitive positioning.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'net-burn-rate',\n    term: 'Net Burn Rate',\n    category: 'financial-metrics',\n    icon: '🔥💰',\n    businessDefinition: 'The amount of cash a company loses each month after accounting for revenue - gross burn minus revenue.',\n    simpleExplanation: \"Monthly expenses minus monthly income - the actual cash you're losing each month after considering revenue.\",\n    sharkTankExample: \"Your net burn is only ₹5 lakhs because you're generating ₹10 lakhs in revenue against ₹15 lakhs expenses - much better!\",\n    sharkName: 'Vineeta Singh',\n    realWorldExample: 'SaaS companies often reduce net burn rate as they grow recurring revenue while keeping costs relatively stable.',\n    difficulty: 'intermediate',\n    relatedTerms: ['gross-burn-rate', 'burn-rate', 'revenue', 'cash-flow'],\n    metaTitle: 'Net Burn Rate - Calculate Real Monthly Cash Loss After Revenue',\n    metaDescription: 'Learn net burn rate calculation, how revenue reduces cash burn, and strategies to achieve cash flow positive.',\n    caseStudy: {\n      introductionContext: \"Net burn rate shows actual cash depletion after revenue — critical for understanding path to cash flow positive.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Razorpay — fintech payment gateway reduced net burn rate through growing transaction volumes and revenue while scaling operations efficiently.\",\n        startupDetails: \"Razorpay achieved improving net burn rate through growing payment processing revenue while managing operational scaling costs.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Management focused on net burn rate improvement through revenue acceleration and operational efficiency, demonstrating clear path to profitability.\",\n        founderPerspective: \"Net burn rate became key metric for demonstrating business model effectiveness and scaling efficiency.\",\n        sharkPerspective: \"Investors evaluated net burn rate trends as indicator of sustainable business model and growth efficiency.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Improving net burn rate demonstrated business model scaling and provided clear path to cash flow positive operations.\",\n        impactOnFounder: \"Net burn rate focus enabled balanced approach between growth investment and financial sustainability.\",\n        dealOutcome: \"Strong net burn rate trends supported investor confidence and higher valuation achievement.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Focus on reducing net burn rate through both revenue growth and cost optimization.\",\n          \"Track net burn rate monthly to understand trajectory toward cash flow positive.\",\n          \"Use net burn rate projections for fundraising and operational planning.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't ignore revenue quality when calculating net burn rate improvements.\",\n          \"Avoid unsustainable cost cuts that compromise revenue generation capability.\",\n          \"Don't confuse improving net burn rate with actual profitability achievement.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'contribution-margin',\n    term: 'Contribution Margin (CM1/CM2/CM3)',\n    category: 'financial-metrics',\n    icon: '📈',\n    businessDefinition: 'Different levels of margin calculation: CM1 (after direct costs), CM2 (after variable costs), CM3 (after semi-fixed costs).',\n    simpleExplanation: \"Imagine peeling an onion - each layer shows different profit levels.\\n\\n**CM1 (Contribution Margin 1):** After paying for your product costs. If you sell a t-shirt for ₹500 and it costs ₹200 to make, CM1 = 60%.\\n\\n**CM2:** After paying for marketing to get that customer. If you spent ₹50 on ads, CM2 = 50%.\\n\\n**CM3:** After paying allocated team costs like customer service. If that adds ₹30, CM3 = 44%.\\n\\n**Good benchmarks:** CM1 should be 50-70%, CM2 should be 30-50%, CM3 should be 20-40%.\\n\\n**Bad signs:** CM1 below 40% means expensive products, CM2 below 20% means expensive customer acquisition, negative CM3 means you lose money on each sale even before fixed costs.\",\n    sharkTankExample: \"Your CM1 is 70% but CM3 is only 15% - you need to optimize your middle-layer costs to improve overall profitability.\",\n    sharkName: 'Ghazal Alagh',\n    realWorldExample: 'Nykaa achieves CM1 of 65% (high product margins), CM2 of 45% (efficient marketing), and CM3 of 35% (good unit economics).\\n\\nD2C fashion brands typically see CM1 of 55-60%, CM2 of 25-35%, CM3 of 15-25%.\\n\\n**Good Example:** A subscription software company with CM1 of 80% (low marginal costs), CM2 of 60% (efficient digital marketing), CM3 of 50% (automated customer success), showing excellent scalability.\\n\\n**Bad Example:** A food delivery startup with CM1 of 30% (low food margins), CM2 of 10% (expensive customer acquisition), and CM3 of -5% (losing money per order).',\n    difficulty: 'advanced',\n    relatedTerms: ['gross-margin', 'unit-economics', 'variable-costs', 'fixed-costs'],\n    metaTitle: 'Contribution Margin (CM1/CM2/CM3) - Multi-Level Profitability Analysis',\n    metaDescription: 'Understand different contribution margin levels, how to calculate CM1, CM2, CM3, and optimize profitability at each level.',\n    caseStudy: {\n      introductionContext: \"Contribution margins at different levels reveal profitability drivers and optimization opportunities across the cost structure.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Nykaa — beauty marketplace optimized contribution margins at multiple levels through product mix, fulfillment efficiency, and customer acquisition optimization.\",\n        startupDetails: \"Nykaa achieved strong contribution margins through strategic product mix, efficient fulfillment, and optimized customer acquisition costs.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Management tracked CM1 (product margins), CM2 (after fulfillment), and CM3 (after customer acquisition) to optimize entire business model efficiency.\",\n        founderPerspective: \"Multi-level contribution margin analysis enabled granular optimization across different business functions.\",\n        sharkPerspective: \"Investors appreciated detailed margin analysis showing sustainable unit economics and scaling potential.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Systematic contribution margin optimization enabled sustainable scaling while maintaining healthy profitability at each operational level.\",\n        impactOnFounder: \"Detailed margin analysis became foundation for strategic decision-making and operational optimization.\",\n        dealOutcome: \"Strong contribution margins supported premium valuation and investor confidence in business model sustainability.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Track CM1, CM2, CM3 separately to identify specific optimization opportunities.\",\n          \"Use contribution margin analysis for product mix and pricing optimization.\",\n          \"Set minimum contribution margin thresholds for sustainable business operations.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't optimize one contribution margin level at the expense of others.\",\n          \"Avoid unclear cost allocation between different contribution margin levels.\",\n          \"Don't ignore contribution margin trends when scaling operations.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'net-margin',\n    term: 'Net Margin',\n    category: 'financial-metrics',\n    icon: '🎯',\n    businessDefinition: 'The percentage of revenue remaining after all expenses, taxes, and costs have been deducted.',\n    simpleExplanation: \"What percentage of every rupee in sales you actually keep as profit - like keeping ₹15 out of every ₹100 in sales.\",\n    sharkTankExample: \"Your net margin of 12% is healthy - you're converting sales efficiently into actual profit for shareholders.\",\n    sharkName: 'Anupam Mittal',\n    realWorldExample: 'Software companies like Infosys maintain net margins of 20-25%, while retail companies often have 2-5% net margins.',\n    difficulty: 'intermediate',\n    relatedTerms: ['gross-margin', 'operating-margin', 'net-profit', 'profitability'],\n    metaTitle: 'Net Margin - Calculate Final Profitability Percentage',\n    metaDescription: 'Learn net margin calculation, industry benchmarks, and strategies to improve overall business profitability.',\n    caseStudy: {\n      introductionContext: \"Net margin represents ultimate profitability efficiency — the final measure of how well a business converts sales into profit.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Titan Company — jewelry and watches achieved strong net margins through premium branding, efficient operations, and strategic product portfolio management.\",\n        startupDetails: \"Titan Company built sustainable competitive advantage through consistent net margin improvement and operational excellence.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Management focused on net margin optimization through operational efficiency, product mix, and cost management while maintaining competitive positioning.\",\n        founderPerspective: \"Net margin became key metric for demonstrating business model sustainability and management effectiveness.\",\n        sharkPerspective: \"Investors evaluated net margin trends as indicator of long-term business viability and competitive positioning.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Consistent net margin improvement demonstrated business maturity and provided foundation for sustainable dividend distribution and reinvestment.\",\n        impactOnFounder: \"Net margin focus enabled balanced approach between growth investment and profitability achievement.\",\n        dealOutcome: \"Strong net margins supported premium valuation and investor confidence in long-term business sustainability.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Target net margins appropriate for your industry while maintaining competitive positioning.\",\n          \"Track net margin trends to understand business efficiency and market dynamics.\",\n          \"Use net margin analysis for strategic decision-making and resource allocation.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't sacrifice long-term competitiveness for short-term net margin improvement.\",\n          \"Avoid comparing net margins across different industries without context.\",\n          \"Don't ignore net margin quality and sustainability when evaluating performance.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'product-market-fit',\n    term: 'Product-Market Fit',\n    category: 'startup-metrics',\n    icon: '🎯',\n    businessDefinition: 'The degree to which a product satisfies strong market demand and meets customer needs effectively.',\n    simpleExplanation: \"When customers love your product so much they can't imagine living without it - like how Indians couldn't live without WhatsApp once they started using it.\",\n    sharkTankExample: \"Do you have product-market fit? Are customers actively seeking your product or do you have to convince them?\",\n    sharkName: 'Anupam Mittal',\n    realWorldExample: 'Zomato achieved strong product-market fit when people started ordering food online regularly instead of just occasionally.',\n    difficulty: 'intermediate',\n    relatedTerms: ['customer-validation', 'retention-rate', 'organic-growth'],\n    metaTitle: 'Product-Market Fit - When Your Product Perfectly Serves Market Needs',\n    metaDescription: 'Understand product-market fit, how to measure it, and why it\\'s crucial before scaling your startup. Essential concept for entrepreneurs.',\n    caseStudy: {\n      introductionContext: \"PMF = clear evidence customers want and pay for the product — the pivot point from experimentation to scale.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Proxgy — demonstrated strong enterprise pilots, patents and early contracts that signalled product–market fit in safety wearables for industry verticals.\",\n        startupDetails: \"Proxgy developed IoT-based safety wearables with proven enterprise demand and strong pilot program results.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Founders presented pilot conversion to paid contracts, repeat orders and enterprise interest to show the product solved a real pain at scale.\",\n        founderPerspective: \"Founders used pilot program results and enterprise contracts to demonstrate clear market need and product fit.\",\n        sharkPerspective: \"Sharks valued the enterprise validation and patent protection as strong PMF indicators.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Demonstrated PMF lowered investor risk and enabled Proxgy to convert on-air validation into follow-on funding and enterprise rollouts.\",\n        impactOnFounder: \"Strong PMF evidence accelerated investment decisions and facilitated business scaling.\",\n        dealOutcome: \"Clear product-market fit validation led to successful funding and continued enterprise growth.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Show evidence: paid pilots, renewal rates, reference customers, and decreasing CAC.\",\n          \"Use pilot contracts and LOIs to prove willingness-to-pay.\",\n          \"Once PMF is proven, shift focus to repeatable GTM and operational scaling.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't confuse pilot interest with actual PMF without conversion data.\",\n          \"Avoid claiming PMF without demonstrable customer retention and satisfaction.\",\n          \"Don't ignore competitive threats once PMF is established.\"\n        ]\n      }\n    }\n  },\n\n  // Deal Structures (8 terms)\n  {\n    id: 'equity-deal',\n    term: 'Equity Deal',\n    category: 'deal-structures',\n    icon: '🥧',\n    businessDefinition: 'An investment where the investor receives ownership shares in the company in exchange for capital.',\n    simpleExplanation: \"Trading money for company ownership - like buying a piece of the business pie in exchange for your investment.\",\n    sharkTankExample: \"I'll give you ₹50 lakhs for 25% equity in your company - straight equity deal with no debt component.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'Most Shark Tank deals are equity deals where sharks get ownership stakes in exchange for their investment.',\n    difficulty: 'beginner',\n    relatedTerms: ['debt-deal', 'convertible-note', 'share-dilution'],\n    metaTitle: 'Equity Deal - Exchange Money for Company Ownership Explained',\n    metaDescription: 'Learn about equity deals in startup funding, how they work, pros and cons for founders and investors. Essential funding concept.',\n    caseStudy: {\n      introductionContext: \"An equity deal is a straight purchase of ownership: investor gives cash and receives a percentage of company equity. It's the default on Shark Tank when sharks want long-term upside.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Proxgy — accepted an on-air equity investment (reported as ₹1 crore from sharks), which the founders cite as a catalytic equity round that helped scale the business.\",\n        startupDetails: \"Proxgy developed IoT-based safety wearables for enterprise customers with proven demand and strong pilot programs.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Sharks bid for a percentage of Proxgy's equity in exchange for capital and mentorship. Negotiations focused on dilution, cap table effects, and how much value the sharks' networks would add to justify the equity price.\",\n        founderPerspective: \"Founders evaluated the trade-off between equity dilution and access to shark networks and strategic guidance.\",\n        sharkPerspective: \"Sharks assessed the company's growth potential and their ability to add value beyond capital through industry connections.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"The equity deal gave Proxgy both funding and validation; later media reports show the company used that equity infusion to attract follow-on capital and scale operations. Equity deals are simple conceptually but require founders to accept long-term dilution and governance changes.\",\n        impactOnFounder: \"Equity investment provided validation and capital that enabled scaling while requiring acceptance of dilution and governance considerations.\",\n        dealOutcome: \"Strategic equity partnership facilitated business growth and subsequent fundraising success.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Model post-deal cap table scenarios and control implications before accepting equity.\",\n          \"Quantify non-cash value (mentor introductions, GTM channels) when negotiating equity.\",\n          \"Keep a clear investor communications plan after taking equity capital.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't accept equity deals without understanding long-term dilution effects.\",\n          \"Avoid undervaluing strategic mentorship when evaluating equity offers.\",\n          \"Don't neglect governance implications of equity partnerships.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'debt-deal',\n    term: 'Debt Deal',\n    category: 'deal-structures',\n    icon: '📄',\n    businessDefinition: 'A financing arrangement where money is lent to a company with the expectation of repayment with interest.',\n    simpleExplanation: \"Like taking a loan - you get money now but have to pay it back with interest, without giving up company ownership.\",\n    sharkTankExample: \"Instead of equity, I'll give you ₹30 lakhs as debt at 12% interest - you keep 100% ownership but must repay with interest.\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'Many growing businesses take debt from banks or NBFCs to fund expansion without diluting equity.',\n    difficulty: 'beginner',\n    relatedTerms: ['equity-deal', 'revenue-based-financing', 'term-loan'],\n    metaTitle: 'Debt Deal vs Equity - Understanding Loan-Based Startup Funding',\n    metaDescription: 'Learn about debt deals in business financing, when to choose debt over equity, and terms entrepreneurs should know.',\n    caseStudy: {\n      introductionContext: \"A debt deal provides cash that must be repaid (with interest) and leaves ownership intact — attractive when founders want to avoid dilution or when revenue supports predictable repayments.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Stage (vernacular OTT platform) — received a mixed deal on Shark Tank: equity + a debt tranche (reported: ₹1.5 Cr equity + ₹1.5 Cr debt @ ~12%).\",\n        startupDetails: \"Stage was a vernacular OTT platform that needed capital for content creation and platform expansion.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Sharks structured part of their offer as debt to limit upfront equity dilution while still funding growth. Terms discussed on-air included interest rate and repayment tenure—sharks framed debt as a risk-mitigation tool when unit economics were near-term predictable.\",\n        founderPerspective: \"Founders appreciated preserving more equity ownership while accessing necessary growth capital.\",\n        sharkPerspective: \"Sharks used debt structure to reduce risk while still participating in company growth through equity component.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Debt preserved more founder equity but added fixed obligations that required disciplined cash flow management. For startups with short payback cycles or confirmed contracts, hybrid debt+equity offers can hit a sweet spot; for others, repayment pressure can be dangerous.\",\n        impactOnFounder: \"Hybrid structure provided capital while maintaining more control, but required careful cash flow management.\",\n        dealOutcome: \"Balanced approach allowed growth funding while preserving founder equity and providing investor downside protection.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Model monthly debt service under conservative revenue scenarios before accepting debt.\",\n          \"Negotiate covenants (grace periods, prepayment rights) to avoid liquidity traps.\",\n          \"Use debt when you have predictable receivables or confirmed customer contracts.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't take on debt without realistic repayment projections.\",\n          \"Avoid debt deals that strain cash flow during seasonal revenue dips.\",\n          \"Don't ignore covenant terms that could trigger early repayment requirements.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'convertible-note',\n    term: 'Convertible Note',\n    category: 'deal-structures',\n    icon: '🔄',\n    businessDefinition: 'A short-term debt instrument that converts into equity during a future funding round at predetermined terms.',\n    simpleExplanation: \"A loan that can transform into company ownership later - like lending money now with the option to become a partner when the business grows.\",\n    sharkTankExample: \"I'll invest ₹25 lakhs as a convertible note - it becomes equity when you raise your next funding round.\",\n    sharkName: 'Anupam Mittal',\n    realWorldExample: 'Y Combinator often uses convertible notes for seed investments that convert to equity during Series A rounds.',\n    difficulty: 'advanced',\n    relatedTerms: ['safe-note', 'conversion-discount', 'valuation-cap'],\n    metaTitle: 'Convertible Note - Debt That Converts to Equity Explained',\n    metaDescription: 'Understand convertible notes in startup funding, how they work, conversion terms, and benefits for early-stage investments.',\n    caseStudy: {\n      introductionContext: \"A convertible note is short-term debt that converts to equity at a future priced round (often with a cap and/or discount) — used when parties defer valuation.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"TeaFit — public coverage of TeaFit's post-show fundraising mentions convertible-note style instruments used in follow-on financing (shows how founders sometimes pair on-air deals with convertible structures later).\",\n        startupDetails: \"TeaFit was a health and wellness brand that utilized convertible instruments in their post-show fundraising rounds.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"On or after the show, founders may accept convertible notes to bridge to a priced round when valuation is uncertain. Investors get downside protection (note principal) and upside via conversion caps/discounts.\",\n        founderPerspective: \"Founders used convertible notes to avoid immediate valuation discussions while securing bridge capital.\",\n        sharkPerspective: \"Investors appreciated the flexibility to defer valuation while securing conversion rights at favorable terms.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Convertible notes avoid immediate valuation fights and can speed follow-on closes — but they complicate future cap-table math (multiple caps/discounts) if not standardized. For founders, clarity on conversion triggers and cap mechanics is essential.\",\n        impactOnFounder: \"Deferred valuation provided short-term capital without immediate dilution calculations, but required careful cap table planning.\",\n        dealOutcome: \"Convertible structure enabled quick capital access while preserving option to negotiate equity terms in future rounds.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Require a single clear cap + discount and document conversion triggers.\",\n          \"Model dilution under multiple conversion scenarios before signing.\",\n          \"Keep investor communication tight so notes convert cleanly in the next priced round.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't accept convertible notes without understanding conversion mechanics.\",\n          \"Avoid multiple notes with different caps that complicate future fundraising.\",\n          \"Don't defer valuation discussions indefinitely without clear conversion timeline.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'revenue-based-financing',\n    term: 'Revenue-Based Financing (RBF)',\n    category: 'deal-structures',\n    icon: '📈',\n    businessDefinition: 'A funding method where investors provide capital in exchange for a percentage of future revenues until a predetermined amount is repaid.',\n    simpleExplanation: \"Instead of giving equity or fixed loan payments, you pay back a percentage of your monthly revenue until you've repaid the agreed amount.\",\n    sharkTankExample: \"I'll give you ₹40 lakhs and take 8% of your monthly revenue until I get back ₹60 lakhs total.\",\n    sharkName: 'Ashneer Grover',\n    realWorldExample: 'GetVantage and Velocity provide RBF to Indian startups, taking 2-12% of monthly revenue until the investment is repaid with returns.',\n    difficulty: 'intermediate',\n    relatedTerms: ['royalty-deal', 'revenue-share', 'alternative-financing'],\n    metaTitle: 'Revenue-Based Financing (RBF) - Funding Based on Future Revenue',\n    metaDescription: 'Understand revenue-based financing, how it works, pros and cons compared to equity deals. Alternative funding for startups explained.',\n    caseStudy: {\n      introductionContext: \"RBF (revenue-share financing) repays investors as a fixed percentage of revenue until a multiple or cap is repaid — less dilution, payment scales with sales.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Tiggle — accepted an on-air structure that combined equity with a royalty/revenue-share component (e.g., 2% royalty until ₹1 Cr recouped), a classic RBF-style repayment.\",\n        startupDetails: \"Tiggle was a consumer brand that accepted a hybrid deal structure combining equity with revenue-based returns.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Sharks structured part of the return as a percent of sales to align payback with actual revenue: if sales surge, investors recover faster; if sales are slow, payments scale down, easing cash-pressure on founders.\",\n        founderPerspective: \"Founders appreciated the revenue-aligned payment structure that scaled with business performance rather than fixed obligations.\",\n        sharkPerspective: \"Sharks liked the revenue-based component as it aligned returns with business success while providing downside protection.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"RBF/Royalty reduced immediate dilution but inserted an on-going cost against topline. For consumer brands with visible unit economics, RBF is attractive; for low-margin products it may squeeze cash flow. Clear reporting and audit rights are vital.\",\n        impactOnFounder: \"Revenue-based structure preserved equity while creating ongoing revenue obligations that required careful cash flow management.\",\n        dealOutcome: \"Balanced approach provided growth capital while aligning investor returns with business performance.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Model payback under base, best, and worst revenue scenarios.\",\n          \"Negotiate caps and a clear sunset point (e.g., pay until X recouped).\",\n          \"Include audit rights and clear invoicing/reporting cadence in the contract.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't accept RBF terms that strain cash flow during revenue dips.\",\n          \"Avoid revenue-share agreements without clear caps or sunset clauses.\",\n          \"Don't ignore the ongoing administrative burden of revenue reporting.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'royalty-deal',\n    term: 'Royalty Deal',\n    category: 'deal-structures',\n    icon: '👑',\n    businessDefinition: 'An investment structure where the investor receives a percentage of sales or revenue in perpetuity or for a specified period.',\n    simpleExplanation: \"Like getting a percentage of every sale forever - investor gets a small cut of revenue from each transaction, similar to how authors get book royalties.\",\n    sharkTankExample: \"Instead of equity, I want 5% royalty on all sales until I make back 3x my investment, then it drops to 2% forever.\",\n    sharkName: 'Ghazal Alagh',\n    realWorldExample: 'Some Shark Tank US deals include royalty structures where sharks earn a percentage of product sales alongside or instead of equity.',\n    difficulty: 'intermediate',\n    relatedTerms: ['revenue-based-financing', 'licensing-deal', 'perpetual-payment'],\n    metaTitle: 'Royalty Deal - Percentage of Sales for Investment Explained',\n    metaDescription: 'Learn about royalty deals in startup funding, how they provide ongoing returns to investors based on company sales revenue.',\n    caseStudy: {\n      introductionContext: \"A royalty deal pays investors a fixed % of revenue (or per-unit amount) until a pre-agreed sum is repaid — similar to RBF but often with fixed caps and simpler accounting.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Cosmix and Tiggle — both secured deals that included a royalty component (Cosmix: reported as ₹1 Cr for 1% equity + 1% royalty until ₹1 Cr recouped; Tiggle: 2% royalty until ₹1 Cr recouped). These are concrete on-air royalty examples.\",\n        startupDetails: \"Both companies accepted hybrid deals combining equity with revenue-based royalty payments to sharks.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Sharks used royalty terms to limit equity dilution while ensuring a clear cash return path. The royalty was explicitly tied to sales and had a recoup cap (e.g., pay 1% until ₹1 Cr repaid).\",\n        founderPerspective: \"Founders accepted royalty structures to retain more equity while providing investors with revenue-linked returns.\",\n        sharkPerspective: \"Sharks appreciated royalty deals for predictable returns tied to business performance with clear exit caps.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Royalty deals align investor returns with topline performance and are attractive when founders want to retain more equity.\",\n        impactOnFounder: \"However, they add an operating-level accounting obligation and must be balanced so they don't choke growth.\",\n        dealOutcome: \"Royalty structures provided alternative to pure equity while maintaining investor returns linked to success.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Define royalty triggers (gross vs net sales) and exclusions (taxes, returns).\",\n          \"Cap total royalty payments to avoid perpetual burden.\",\n          \"Automate reporting and payments to reduce disputes.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't accept royalty terms that severely impact cash flow during growth phases.\",\n          \"Avoid unclear definitions of revenue subject to royalty payments.\",\n          \"Don't ignore the administrative burden of ongoing royalty tracking.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'contingent-deal',\n    term: 'Contingent Deal',\n    category: 'deal-structures',\n    icon: '🎯',\n    businessDefinition: 'An investment agreement where terms or funding depend on the company achieving specific milestones or conditions.',\n    simpleExplanation: \"Investment with conditions attached - like getting money in stages only after achieving certain goals, similar to unlocking levels in a game.\",\n    sharkTankExample: \"I'll invest ₹50 lakhs: ₹25 lakhs now, and ₹25 lakhs more when you reach ₹1 crore annual revenue.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'Many startup deals include contingent funding based on achieving revenue targets, user growth, or product development milestones.',\n    difficulty: 'intermediate',\n    relatedTerms: ['milestone-based-funding', 'performance-metrics', 'staged-investment'],\n    metaTitle: 'Contingent Deal - Milestone-Based Startup Investment Structure',\n    metaDescription: 'Understand contingent deals in startup funding, how milestone-based investments work, and their benefits for reducing investor risk.',\n    caseStudy: {\n      introductionContext: \"A contingent deal (milestone-based) ties parts of the offer to future KPIs — equity% or payment terms change if milestones are met.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"BL Fabrics — reported on-air conditional/clawback terms (example: a clause that shifts equity/clawback if revenue milestones are or aren't met), demonstrating milestone-linked offers by sharks.\",\n        startupDetails: \"BL Fabrics received a conditional deal structure where terms were tied to achieving specific business milestones.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Sharks proposed equity that would adjust or be clawed back based on agreed revenue targets or distribution milestones. This allowed sharks to protect upside while giving the founder time to execute.\",\n        founderPerspective: \"Founders accepted contingent terms to access capital while maintaining opportunity to improve deal terms through performance.\",\n        sharkPerspective: \"Sharks used contingent structures to align founder incentives with business performance while managing downside risk.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Contingent deals reduce immediate investor risk and motivate founders, but they require precise milestone definitions, timing, measurement methods and dispute-resolution mechanisms. Ambiguity in milestones is the top cause of post-offer friction.\",\n        impactOnFounder: \"Milestone-based terms provided opportunity for improved outcomes but required clear performance tracking and achievement.\",\n        dealOutcome: \"Structured approach balanced risk management with performance incentives, but required precise milestone definition.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Define measurable milestones (net revenue, signed LOIs, distribution deals), clear timelines and verification methods.\",\n          \"Include remedies and arbitration steps for disputes.\",\n          \"Keep milestone clauses simple and binary (met / not met) to avoid interpretation battles.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't accept vague milestones that could lead to disputes later.\",\n          \"Avoid complex milestone structures that are difficult to track or verify.\",\n          \"Don't ignore dispute resolution mechanisms for milestone disagreements.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'licensing-deal',\n    term: 'Licensing Deal',\n    category: 'deal-structures',\n    icon: '📜',\n    businessDefinition: 'An agreement where one party grants rights to use intellectual property, technology, or brand in exchange for payments.',\n    simpleExplanation: \"Renting out your idea or brand to others - like McDonald's letting others use their name and system in exchange for fees.\",\n    sharkTankExample: \"Instead of equity, let me license your technology to my existing companies for ₹10 lakhs upfront plus 15% royalty.\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'Qualcomm earns billions through licensing deals, allowing phone manufacturers to use their patented technologies for fees.',\n    difficulty: 'intermediate',\n    relatedTerms: ['intellectual-property', 'royalty-deal', 'franchise-model'],\n    metaTitle: 'Licensing Deal - Monetizing Intellectual Property and Technology',\n    metaDescription: 'Learn about licensing deals, how to monetize intellectual property, patents, and technology through strategic partnerships.',\n    caseStudy: {\n      introductionContext: \"A licensing deal grants rights to use IP/brand/product designs in exchange for fees/royalties — on-air pure licensing offers are uncommon, but licensing is a common post-show growth route.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"On-air pure licensing offers are rare on Shark Tank India; however, many Shark Tank alumni (e.g., successful consumer brands such as Snitch and other alumni) pursue post-show brand collaborations, strategic partnerships and licensing-style deals to expand product lines and channels — showing licensing's practical role after a Shark Tank appearance.\",\n        startupDetails: \"Multiple Shark Tank India alumni have leveraged their brand visibility for licensing opportunities with established retailers and manufacturers.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Rather than buy equity, a corporate partner or licensor may offer to license a product or brand for certain territories or product lines, or the founder may license IP to retailers/brands post-show to scale without capital-intensive manufacturing.\",\n        founderPerspective: \"Founders used licensing to scale distribution and monetize IP without heavy capital investment or equity dilution.\",\n        sharkPerspective: \"Sharks sometimes facilitated post-show licensing connections through their corporate networks rather than direct on-air licensing deals.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Licensing preserves founder capital and accelerates distribution if the licensee has scale; sharks sometimes prefer to negotiate licensing post-show via strategic partners rather than on-air since licensing requires legal detail and commercial pilots.\",\n        impactOnFounder: \"Licensing enabled rapid scaling and market expansion while preserving equity and reducing capital requirements.\",\n        dealOutcome: \"Strategic licensing partnerships provided growth acceleration with lower risk and capital intensity.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"If licensing, define territory, exclusivity, quality controls, minimum guarantees and audit rights.\",\n          \"Pilot licensing in one channel/territory before a broad roll-out.\",\n          \"Use licensing to monetize IP without heavy capex, but monitor brand control and quality closely.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't license without clear quality control and brand protection clauses.\",\n          \"Avoid exclusive licensing deals without minimum performance guarantees.\",\n          \"Don't neglect ongoing monitoring and audit rights in licensing agreements.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'term-sheet',\n    term: 'Term Sheet',\n    category: 'deal-structures',\n    icon: '📋',\n    businessDefinition: 'A non-binding document outlining the basic terms and conditions of an investment deal before formal legal documentation.',\n    simpleExplanation: \"Like a rough contract outline - it shows the main points of the deal (money, ownership, conditions) before lawyers write the final paperwork.\",\n    sharkTankExample: \"If you accept my offer, we'll send you a term sheet with all the details - valuation, equity percentage, and investor rights.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'When Sequoia invested in WhatsApp, they first provided a term sheet outlining $8 million for 15% equity before final documentation.',\n    difficulty: 'intermediate',\n    relatedTerms: ['due-diligence', 'equity-deal', 'legal-documentation'],\n    metaTitle: 'Term Sheet - Initial Investment Agreement Outline Explained',\n    metaDescription: 'Learn about term sheets in startup funding, key components, and how they lead to final investment documentation.',\n    caseStudy: {\n      introductionContext: \"A term sheet outlines key deal terms before legal documentation - amount, equity, valuation, board rights, and protective provisions.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Cosmix - after accepting the Sharks' on-air offer, the company received a detailed term sheet outlining the exact investment structure, equity percentage, and ongoing obligations.\",\n        startupDetails: \"Cosmix was a women's health and nutrition brand that secured investment from multiple sharks on the show.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"The on-air handshake translated into a formal term sheet specifying investment amount, equity percentage, board participation, and any performance milestones or royalty structures.\",\n        founderPerspective: \"Founders used the term sheet to understand exact obligations and rights before signing final agreements.\",\n        sharkPerspective: \"Sharks provided clear terms to avoid misunderstandings and establish the framework for the legal relationship.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"A well-structured term sheet accelerated the final documentation process and prevented disputes by clarifying expectations upfront.\",\n        impactOnFounder: \"Clear term sheet terms helped founders make informed decisions about governance and future obligations.\",\n        dealOutcome: \"Professional term sheet process led to smooth deal closure and clear ongoing relationship structure.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Review term sheets carefully with legal counsel before accepting final terms.\",\n          \"Negotiate unclear clauses in the term sheet phase rather than during legal documentation.\",\n          \"Understand all protective provisions and board rights outlined in the term sheet.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't sign term sheets without understanding all implications and obligations.\",\n          \"Avoid accepting vague terms that could cause disputes later.\",\n          \"Don't rush through term sheet review just to close deals quickly.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'preferred-shares',\n    term: 'Preferred Shares',\n    category: 'deal-structures',\n    icon: '⭐',\n    businessDefinition: 'A class of stock that gives investors certain rights and preferences over common stockholders, typically including liquidation preferences and anti-dilution protection.',\n    simpleExplanation: \"Special shares that give investors extra privileges - like getting paid first if the company is sold or having more voting power than regular shareholders.\",\n    sharkTankExample: \"My investment will be in preferred shares, which means I get paid back first if you sell the company, plus anti-dilution protection.\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'Most VC investments in companies like Flipkart and Paytm were made through preferred shares with liquidation preferences and board representation rights.',\n    difficulty: 'advanced',\n    relatedTerms: ['common-stock', 'liquidation-preference', 'anti-dilution'],\n    metaTitle: 'Preferred Shares - Investor Stock with Special Rights Explained',\n    metaDescription: 'Understand preferred shares in startup funding, their advantages over common stock, and typical investor preferences.',\n    caseStudy: {\n      introductionContext: \"Preferred shares offer investors enhanced rights including liquidation preferences, anti-dilution protection, and often board representation compared to common stock.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Skippi Ice Pops secured ₹1.2 crore for 15% equity from Aman Gupta and Vineeta Singh. Post-deal legal documentation structured this as preferred shares with standard liquidation preferences and anti-dilution protection.\",\n        startupDetails: \"Skippi achieved 40x sales growth post-investment, demonstrating how preferred share structures protect investors while allowing founders to benefit from massive growth.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"The sharks' investment converted to preferred shares with 1x liquidation preference, ensuring they'd recover their ₹1.2 crore investment before common shareholders in any exit scenario while participating in upside.\",\n        founderPerspective: \"Skippi founders understood that preferred shares gave investors first claim on proceeds but accepted this for access to shark networks and ₹6 crore in returns generated.\",\n        sharkPerspective: \"Sharks structured preferred shares to protect their downside while maintaining full upside participation, essential given the early stage and execution risk.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Preferred share structure enabled Skippi to raise subsequent rounds cleanly while protecting early shark investors, who saw 2900% returns as the company scaled nationally.\",\n        impactOnFounder: \"Founders retained control and significant upside despite preferred share liquidation preferences, proving the structure can align all parties when growth is exceptional.\",\n        dealOutcome: \"Professional preferred share structures created win-win outcomes with sharks earning outsized returns and founders building a ₹50+ crore business.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Accept reasonable liquidation preferences (1x) when investors provide significant strategic value beyond capital.\",\n          \"Model how preferred shares affect your returns in different exit scenarios before accepting terms.\",\n          \"Use preferred share structures to attract professional investors who can accelerate growth.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't accept multiple liquidation preferences (2x, 3x) that eliminate founder upside in moderate exits.\",\n          \"Avoid preferred share terms without understanding how they impact employee equity pools.\",\n          \"Don't ignore anti-dilution provisions that could significantly reduce your ownership in down rounds.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'esop',\n    term: 'ESOP (Employee Stock Option Plan)',\n    category: 'deal-structures',\n    icon: '👥',\n    businessDefinition: 'A program that gives employees the right to purchase company shares at a predetermined price, typically used to attract and retain talent.',\n    simpleExplanation: \"A way to give employees part ownership in the company - they get the option to buy shares at a fixed price, so if the company grows, they benefit too.\",\n    sharkTankExample: \"You should set aside 10-15% equity in an ESOP to attract and retain good talent as you scale the business.\",\n    sharkName: 'Vineeta Singh',\n    realWorldExample: 'Companies like Infosys and TCS created significant wealth for employees through ESOPs, making many employees millionaires when the companies went public.',\n    difficulty: 'intermediate',\n    relatedTerms: ['option-pool', 'vesting', 'equity-dilution'],\n    metaTitle: 'ESOP - Employee Stock Options for Startup Talent Retention',\n    metaDescription: 'Learn about Employee Stock Option Plans, how they work, and why startups use ESOPs to attract and retain talent.',\n    caseStudy: {\n      introductionContext: \"ESOPs allocate equity to employees through stock options, helping startups compete for talent by offering ownership upside alongside salaries.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Bambinos Live, which received ₹1 crore for 1.5% equity plus royalty, allocated 8% of their equity for ESOP to attract key technical and creative talent for their children's entertainment platform.\",\n        startupDetails: \"Bambinos needed specialized talent in animation, child psychology, and content creation to scale their platform, using ESOP to compete with larger entertainment companies for talent.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Post-shark investment, Bambinos created an 8% ESOP pool to attract senior engineers, content creators, and business development professionals without depleting cash reserves for competitive salaries.\",\n        founderPerspective: \"Founders balanced the 8% ESOP allocation against their majority ownership (55% + 27%) to maintain control while attracting critical talent for scaling operations.\",\n        sharkPerspective: \"Sharks endorsed the ESOP strategy as essential for building the specialized team needed to compete in the competitive children's entertainment market.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"The ESOP structure enabled Bambinos to hire experienced professionals from Disney and other major entertainment companies by offering meaningful equity upside alongside competitive salaries.\",\n        impactOnFounder: \"The 8% ESOP allocation reduced founder ownership but enabled hiring of talent that accelerated growth and justified the dilution through increased company value.\",\n        dealOutcome: \"Strategic ESOP implementation helped Bambinos scale from a small team to 50+ employees while maintaining founder control and enabling professional growth.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Reserve 8-12% for ESOP when you need specialized talent that commands high market salaries.\",\n          \"Structure ESOP grants with 4-year vesting to ensure long-term commitment from key hires.\",\n          \"Communicate the potential upside clearly during recruitment to compete with established companies.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't underestimate the ESOP pool size needed to attract senior talent from competitive industries.\",\n          \"Avoid granting equity without proper vesting schedules that protect against early departures.\",\n          \"Don't implement ESOP without clear valuation methodologies for communicating equity value to employees.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'option-pool',\n    term: 'Option Pool',\n    category: 'deal-structures',\n    icon: '🏊',\n    businessDefinition: 'A reserved percentage of company equity set aside specifically for employee stock options, typically created before funding rounds.',\n    simpleExplanation: \"A bucket of company shares reserved for employees - like setting aside a portion of a pizza for the team before dividing the rest among owners and investors.\",\n    sharkTankExample: \"Before we finalize the deal, you need to create a 15% option pool for employees, which will come out of your ownership, not mine.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'Most funded startups create option pools of 10-20% before Series A rounds, with companies like Freshworks reserving significant equity for employee options.',\n    difficulty: 'intermediate',\n    relatedTerms: ['esop', 'equity-dilution', 'pre-money-valuation'],\n    metaTitle: 'Option Pool - Reserved Equity for Employee Stock Options',\n    metaDescription: 'Understand option pools in startup equity planning, how they affect founder dilution, and typical sizing for different growth stages.',\n    caseStudy: {\n      introductionContext: \"An option pool reserves equity for future employee hires, typically sized at 10-20% and created before major funding rounds to avoid diluting investors.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Beyond Snack, after scaling from ₹20 lakh to ₹2.25 crore monthly revenue post-shark investment, created a 15% option pool to hire senior executives and expand their team from 12 to 50+ employees.\",\n        startupDetails: \"The rapid expansion from <1,000 to 4,000+ stores required significant talent acquisition across sales, operations, and supply chain management.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Beyond Snack established the option pool on their pre-money valuation, ensuring new hires received meaningful equity without diluting shark investors who had already committed capital.\",\n        founderPerspective: \"Founders accepted the 15% dilution to attract experienced professionals from FMCG companies who could execute their aggressive expansion plans.\",\n        sharkPerspective: \"Sharks supported the option pool creation as essential for building the team needed to capture the massive market opportunity they had validated.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"The well-sized option pool enabled Beyond Snack to hire senior talent from companies like Britannia and Parle, accelerating their distribution expansion and operational scaling.\",\n        impactOnFounder: \"The 15% option pool dilution was offset by increased company value from professional management and accelerated growth from 4x to 100x scale.\",\n        dealOutcome: \"Strategic option pool planning supported successful team building that enabled Beyond Snack to become one of the fastest-growing snack brands in India.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Size option pools at 15-20% when planning rapid team scaling from small to enterprise-level operations.\",\n          \"Create option pools immediately after major funding to attract talent before competitors in your space.\",\n          \"Reserve meaningful equity percentages (1-3%) for senior hires who can drive 10x growth.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't undersize option pools when you need to attract senior talent from established companies.\",\n          \"Avoid creating option pools after urgent hiring needs arise - plan ahead for growth phases.\",\n          \"Don't forget to refresh option pools as your company valuation increases and initial grants become less attractive.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'sweat-equity',\n    term: 'Sweat Equity',\n    category: 'deal-structures',\n    icon: '💪',\n    businessDefinition: 'Equity shares given to employees or founders in exchange for their work, expertise, or services rather than cash investment.',\n    simpleExplanation: \"Getting company ownership for your hard work instead of money - like earning shares by putting in effort and time rather than paying cash.\",\n    sharkTankExample: \"As a co-founder, you've earned your 40% sweat equity through two years of building this product without salary.\",\n    sharkName: 'Anupam Mittal',\n    realWorldExample: 'Many startup co-founders receive sweat equity for their contributions during early stages when companies have no revenue to pay salaries.',\n    difficulty: 'beginner',\n    relatedTerms: ['founder-equity', 'vesting', 'contribution-based-equity'],\n    metaTitle: 'Sweat Equity - Earning Company Ownership Through Work and Effort',\n    metaDescription: 'Learn about sweat equity, how it works for founders and early employees, and tax implications of equity for services.',\n    caseStudy: {\n      introductionContext: \"Sweat equity compensates founders and early employees with ownership stakes for their contributions when cash compensation isn't feasible.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Annie (Thinker Labs) founders worked for two years without salaries, building their language learning AI platform through pure sweat equity before appearing on Shark Tank and securing ₹1.05 crore for 3% equity at ₹35 crore valuation.\",\n        startupDetails: \"The founding team contributed specialized AI development, education expertise, and product design worth ₹50+ lakhs in market value through sweat equity during the development phase.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Annie founders documented their sweat equity contributions through timestamped development logs, showing 80-hour weeks and specialized skill contributions that justified their high pre-money valuation.\",\n        founderPerspective: \"Founders valued their combined sweat equity at market consulting rates (₹2000/hour for AI development) to justify significant ownership stakes and high valuation expectations.\",\n        sharkPerspective: \"Sharks recognized the substantial sweat equity investment as proof of commitment and valued the developed technology platform as justification for the ₹35 crore valuation.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"The well-documented sweat equity enabled Annie to command a premium valuation and secure investment at only 3% dilution, demonstrating how founder contributions can create substantial value.\",\n        impactOnFounder: \"Sweat equity documentation enabled founders to retain 97% ownership while accessing both capital and shark expertise for international expansion.\",\n        dealOutcome: \"Professional sweat equity valuation supported successful fundraising at attractive terms and enabled rapid scaling with minimal founder dilution.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Document sweat equity contributions with time logs and market rate valuations to justify high pre-money valuations.\",\n          \"Structure sweat equity with vesting schedules to protect against co-founder departures in successful companies.\",\n          \"Use sweat equity documentation to demonstrate founder commitment and technical capabilities to investors.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't build for years without documenting sweat equity contributions - this limits your ability to justify high valuations.\",\n          \"Avoid informal sweat equity arrangements between co-founders that could create disputes during fundraising.\",\n          \"Don't undervalue your sweat equity contributions when establishing pre-money valuations for investment rounds.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'advisory-equity',\n    term: 'Advisory Equity',\n    category: 'deal-structures',\n    icon: '🎓',\n    businessDefinition: 'Equity compensation given to advisors and mentors in exchange for their guidance, expertise, and industry connections.',\n    simpleExplanation: \"Giving company shares to advisors who help with business guidance - like paying consultants with ownership instead of cash for their valuable advice.\",\n    sharkTankExample: \"I'll take 2% equity not just for the money, but also as advisory equity for my ongoing mentorship and network access.\",\n    sharkName: 'Vineeta Singh',\n    realWorldExample: 'Many startups give 0.25-2% advisory equity to industry experts, former executives, or successful entrepreneurs who provide strategic guidance.',\n    difficulty: 'beginner',\n    relatedTerms: ['sweat-equity', 'vesting', 'mentor-compensation'],\n    metaTitle: 'Advisory Equity - Compensating Mentors and Advisors with Ownership',\n    metaDescription: 'Learn about advisory equity, how much to allocate to advisors, and structuring advisor relationships with equity compensation.',\n    caseStudy: {\n      introductionContext: \"Advisory equity compensates industry experts and mentors who provide strategic guidance, introductions, and credibility to growing startups.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Get-A-Whey protein company expanded from 4 to 45 cities post-shark investment, largely due to advisory equity arrangements with industry veterans who provided distribution networks and retail expertise beyond the sharks' initial investment.\",\n        startupDetails: \"The company formalized advisory relationships with former executives from ITC, Britannia, and other FMCG giants, offering 0.5-1% equity stakes for strategic guidance and network access.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Get-A-Whey allocated 3% total advisory equity to former FMCG executives who provided distribution strategies, retail relationships, and supply chain optimization that accelerated their national expansion.\",\n        founderPerspective: \"Founders recognized that advisory equity to industry experts was more valuable than additional capital, as these advisors unlocked distribution channels that would have taken years to develop.\",\n        sharkPerspective: \"Sharks encouraged strategic advisory equity allocation as it reduced execution risk and accelerated portfolio company growth without requiring additional shark capital.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Advisory equity enabled Get-A-Whey to rapidly expand distribution through advisors' retail relationships, achieving 10x growth in store presence within 18 months of the advisory arrangements.\",\n        impactOnFounder: \"The 3% advisory equity dilution was offset by 100x increase in distribution reach and revenue growth that advisors' networks enabled.\",\n        dealOutcome: \"Strategic advisory equity allocation created exponential value through accelerated market access and reduced go-to-market execution risk.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Allocate 0.5-1% equity to advisors who can unlock distribution channels or key partnerships in your industry.\",\n          \"Structure advisory equity with performance milestones tied to specific introductions or business outcomes.\",\n          \"Implement 2-year vesting for advisory equity to ensure ongoing engagement and value delivery.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't allocate advisory equity without clear expectations for network access and strategic contributions.\",\n          \"Avoid giving advisory equity to advisors who only provide general business advice without industry-specific expertise.\",\n          \"Don't structure advisory equity without vesting schedules that ensure ongoing commitment and performance.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'vesting',\n    term: 'Vesting',\n    category: 'deal-structures',\n    icon: '⏰',\n    businessDefinition: 'A schedule that determines when employees or founders earn the right to their allocated equity over time, typically to encourage retention.',\n    simpleExplanation: \"Earning your promised company shares gradually over time - like getting your equity in monthly installments to ensure you stay committed to the company.\",\n    sharkTankExample: \"Your founder shares should be on a 4-year vesting schedule with a 1-year cliff to ensure long-term commitment.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'Most tech companies use 4-year vesting with 1-year cliffs, so employees earn 25% after one year, then monthly thereafter.',\n    difficulty: 'intermediate',\n    relatedTerms: ['cliff', 'esop', 'equity-retention'],\n    metaTitle: 'Vesting Schedule - How Equity Ownership is Earned Over Time',\n    metaDescription: 'Understand equity vesting schedules, typical timelines, and how they protect companies while incentivizing long-term commitment.',\n    caseStudy: {\n      introductionContext: \"Vesting schedules ensure equity is earned over time, protecting companies from early departures while incentivizing long-term commitment from team members.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Hammer Lifestyle, after achieving ₹30 lakh single-day revenue and ₹2 crore monthly sales post-shark investment, implemented 4-year vesting schedules for their founding team and key employees to ensure commitment during rapid scaling.\",\n        startupDetails: \"The company's explosive growth required protecting founder equity and ensuring key team retention through proper vesting structures during the critical scaling phase.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Hammer implemented 4-year vesting with 1-year cliffs for founders and 3-year vesting for employees, ensuring team stability during their transition from startup to high-growth company with 40% equity distribution.\",\n        founderPerspective: \"Founders accepted reverse vesting on their own equity to demonstrate commitment to sharks and protect against co-founder departures during the high-stress scaling period.\",\n        sharkPerspective: \"Sharks required founder vesting to protect their investment and ensure leadership stability during the critical growth phase when execution risk was highest.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"The vesting structure successfully retained the founding team and key employees through Hammer's rapid growth phase, preventing departures that could have derailed their expansion momentum.\",\n        impactOnFounder: \"Vesting schedules provided protection against co-founder disputes while giving founders credibility with investors and ensuring focused execution on growth targets.\",\n        dealOutcome: \"Professional vesting structures enabled Hammer to maintain team stability while scaling from startup to ₹50+ crore revenue run rate with retained leadership.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Implement founder vesting immediately after major funding rounds to demonstrate commitment and protect against departures.\",\n          \"Use 4-year vesting with 1-year cliffs as standard for founders and 3-year vesting for employees in high-growth phases.\",\n          \"Include double-trigger acceleration (company sale + termination) to protect team members in acquisition scenarios.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't avoid founder vesting - it demonstrates commitment to investors and protects against co-founder disputes.\",\n          \"Avoid single-trigger acceleration that could lead to mass departures immediately after company sale.\",\n          \"Don't implement vesting without clear documentation and legal counsel to prevent disputes during high-stress periods.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'cliff',\n    term: 'Cliff',\n    category: 'deal-structures',\n    icon: '🏔️',\n    businessDefinition: 'A period during which no equity vests, typically one year, after which a larger portion vests all at once before regular vesting continues.',\n    simpleExplanation: \"A waiting period before you earn any equity - like having to work for a full year before getting your first batch of shares, then earning the rest monthly.\",\n    sharkTankExample: \"There's a 1-year cliff on your equity, so if you leave before completing one year, you get nothing, but after one year you get 25%.\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'Google, Facebook, and most tech companies use 1-year cliffs to ensure new hires stay at least one year before earning any equity.',\n    difficulty: 'intermediate',\n    relatedTerms: ['vesting', 'retention-strategy', 'equity-forfeiture'],\n    metaTitle: 'Cliff Vesting - Equity Waiting Period for Employee Retention',\n    metaDescription: 'Learn about cliff periods in equity vesting, why companies use cliffs, and typical cliff durations in startup compensation.',\n    caseStudy: {\n      introductionContext: \"A cliff period requires minimum tenure before any equity vests, protecting companies from short-term departures while ensuring committed team members earn meaningful ownership.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Proxgy, the IoT safety wearables company, implemented 1-year cliffs for all new hires after their shark investment to ensure commitment during their critical enterprise scaling phase and complex hardware development cycles.\",\n        startupDetails: \"The company needed specialized hardware engineers and enterprise sales professionals with long development cycles, making cliff periods essential for protecting training investments and project continuity.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Proxgy implemented 1-year cliffs for all equity grants to ensure engineers stayed through complete product development cycles and sales professionals remained through long enterprise sales processes.\",\n        founderPerspective: \"Founders used 1-year cliffs to balance competitive hiring with protection against departures during critical 18-month product development and enterprise pilot phases.\",\n        sharkPerspective: \"Sharks supported cliff implementation as essential protection for their IoT investment where hardware development and enterprise sales required sustained team commitment.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"The 1-year cliff structure successfully retained 95% of key technical and sales hires through Proxgy's complex product development and enterprise customer acquisition phases.\",\n        impactOnFounder: \"Cliff periods enabled aggressive hiring of senior engineers and enterprise sales professionals while protecting against costly departures during critical development phases.\",\n        dealOutcome: \"Strategic cliff implementation enabled team scaling while protecting equity and ensuring continuity through complex hardware and enterprise development cycles.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Implement 1-year cliffs as industry standard to balance retention incentives with equity protection.\",\n          \"Communicate cliff periods clearly during hiring to set appropriate expectations with new team members.\",\n          \"Consider different cliff periods for different roles based on training costs and strategic importance.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't implement excessively long cliff periods that make offers uncompetitive in the talent market.\",\n          \"Avoid unclear communication about cliff periods that can create misunderstandings and resentment.\",\n          \"Don't apply identical cliff structures without considering role-specific retention needs and market practices.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'clawback',\n    term: 'Clawback',\n    category: 'deal-structures',\n    icon: '🪃',\n    businessDefinition: 'A provision allowing investors to reclaim equity or payments under certain conditions, such as performance failures or misconduct.',\n    simpleExplanation: \"A way for investors to take back money or shares if certain conditions aren't met - like returning a purchase if the product doesn't work as promised.\",\n    sharkTankExample: \"I want a clawback provision - if you don't hit ₹2 crore revenue by year 2, I get back 5% of my equity at the original price.\",\n    sharkName: 'Ashneer Grover',\n    realWorldExample: 'Many investment agreements include clawback provisions for executive compensation if financial results are later found to be misstated.',\n    difficulty: 'advanced',\n    relatedTerms: ['performance-milestones', 'contingent-deal', 'investor-protection'],\n    metaTitle: 'Clawback Provision - Investor Rights to Reclaim Equity or Payments',\n    metaDescription: 'Understand clawback provisions in investment deals, when they trigger, and how they protect investor interests in startup funding.',\n    caseStudy: {\n      introductionContext: \"Clawback provisions protect investors by allowing recovery of equity or payments when specific conditions aren't met or misconduct occurs.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"According to industry reports about deal completion issues, several Shark Tank India companies faced clawback scenarios when they couldn't meet agreed performance milestones, leading to calls for escrow accounts to prevent over-commitment by sharks.\",\n        startupDetails: \"The controversy around 12 founders yet to receive promised funds highlights how clawback provisions and performance metrics can become disputed areas in high-stakes deals.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Clawback provisions provided downside protection for sharks while creating accountability for founders to meet performance targets and commitments made during pitches.\",\n        founderPerspective: \"Founders weighed clawback risks against investment benefits, ensuring they could realistically meet performance targets before accepting such terms.\",\n        sharkPerspective: \"Sharks used clawback provisions to protect against downside risks while maintaining upside participation in successful company growth.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Well-structured clawback provisions aligned founder and investor interests while providing appropriate downside protection for investors in high-risk investments.\",\n        impactOnFounder: \"Clawback provisions created accountability pressure but also demonstrated founder confidence in their ability to execute business plans.\",\n        dealOutcome: \"Balanced clawback structures protected investor interests while maintaining founder motivation and upside potential.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Negotiate reasonable clawback triggers based on achievable performance metrics and external factors.\",\n          \"Structure clawback provisions with clear timelines and measurement criteria to avoid disputes.\",\n          \"Consider graduated clawback mechanisms rather than binary all-or-nothing structures.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't accept clawback provisions with unrealistic performance targets or timelines.\",\n          \"Avoid vague clawback language that could create disputes about trigger events or measurement.\",\n          \"Don't ignore the psychological pressure and potential demotivation effects of harsh clawback terms.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'escrow',\n    term: 'Escrow',\n    category: 'deal-structures',\n    icon: '🏦',\n    businessDefinition: 'A financial arrangement where funds or assets are held by a neutral third party until specific conditions are met by both parties.',\n    simpleExplanation: \"Like having a trusted friend hold money until both sides complete their part of a deal - the money stays safe until everyone does what they promised.\",\n    sharkTankExample: \"Let's put ₹25 lakhs in escrow - you get it when you hit the product development milestones we agreed on.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'In major acquisitions like Walmart buying Flipkart, significant amounts are held in escrow to cover potential legal liabilities or warranty claims.',\n    difficulty: 'intermediate',\n    relatedTerms: ['contingent-deal', 'milestone-funding', 'third-party-holding'],\n    metaTitle: 'Escrow - Third-Party Holding for Secure Business Transactions',\n    metaDescription: 'Learn about escrow arrangements in business deals, how they protect both parties, and typical uses in startup transactions.',\n    caseStudy: {\n      introductionContext: \"Escrow arrangements protect both parties in business transactions by holding funds or assets with neutral third parties until conditions are satisfied.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Following allegations of deal completion issues, Ashneer Grover proposed that 'Sharks should put investment money in escrow accounts for accountability' to address concerns about 12 founders yet to receive promised funding.\",\n        startupDetails: \"The controversy highlighted the need for escrow arrangements to protect founders against sharks who might reassess deals based on online traffic and audience response post-show.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Escrow arrangements provided security for both sharks and founders, ensuring investments were protected while giving founders access to capital as they achieved milestones.\",\n        founderPerspective: \"Founders appreciated escrow protection against investor default while accepting accountability for achieving milestones to release funds.\",\n        sharkPerspective: \"Sharks used escrow arrangements to protect their capital while ensuring founders had incentives to achieve agreed targets before accessing funds.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Well-structured escrow arrangements reduced transaction risk for both parties while maintaining appropriate incentives for performance and execution.\",\n        impactOnFounder: \"Escrow provided certainty of funding availability while creating accountability for achieving specific milestones or conditions.\",\n        dealOutcome: \"Professional escrow structures enabled complex deals while protecting both parties' interests and ensuring proper execution.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Use reputable escrow agents with experience in business transactions and clear fee structures.\",\n          \"Define escrow release conditions precisely to avoid disputes about milestone achievement or condition fulfillment.\",\n          \"Include dispute resolution mechanisms for situations where parties disagree about escrow release conditions.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't use escrow arrangements without clear documentation of release conditions and dispute resolution procedures.\",\n          \"Avoid excessive escrow periods that unnecessarily delay access to needed capital or assets.\",\n          \"Don't overlook escrow fees and administrative costs when structuring deals that require third-party holding.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'royalty',\n    term: 'Royalty',\n    category: 'deal-structures',\n    icon: '💎',\n    businessDefinition: 'A payment made to an owner for the ongoing use of their asset, typically calculated as a percentage of revenue or per-unit amount.',\n    simpleExplanation: \"A percentage of sales paid to someone for using their idea, product, or brand - like paying a singer every time their song is played on the radio.\",\n    sharkTankExample: \"Instead of just equity, I also want 3% royalty on all sales until I recover twice my investment amount.\",\n    sharkName: 'Ghazal Alagh',\n    realWorldExample: 'Authors earn royalties from book sales, musicians from streaming, and franchisees pay royalties to franchisors like McDonald\\'s for using their brand.',\n    difficulty: 'beginner',\n    relatedTerms: ['royalty-deal', 'licensing', 'revenue-share'],\n    metaTitle: 'Royalty Payments - Ongoing Revenue from Asset Usage',\n    metaDescription: 'Understand royalty payments, how they work in different industries, and their role in investment and licensing deals.',\n    caseStudy: {\n      introductionContext: \"Royalty payments provide ongoing revenue streams for asset owners while allowing others to use intellectual property, brands, or business systems.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Adil Qadri Perfumes structured their deal as ₹1 crore for 1% equity plus 1% royalty until ₹1 crore recovered, while Uncle Peter's Pancakes accepted ₹60 lakhs for 2.4% equity plus 3% royalty until ₹1.2 crore recovered.\",\n        startupDetails: \"These consumer brands used royalty structures to access capital while preserving significant equity ownership, with royalties providing sharks revenue-linked returns alongside smaller equity stakes.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Royalty structures allowed sharks to participate in company growth through revenue sharing while providing founders with capital and reduced equity dilution compared to pure equity deals.\",\n        founderPerspective: \"Founders accepted royalty obligations to retain more equity ownership while providing investors with clear returns linked to business performance.\",\n        sharkPerspective: \"Sharks used royalty structures to ensure returns tied to business success while participating in company growth through both equity and revenue sharing.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Royalty arrangements aligned investor returns with business performance while providing founders with more flexible capital structures than pure equity deals.\",\n        impactOnFounder: \"Royalty obligations created ongoing revenue commitments but preserved more equity ownership for founders in successful businesses.\",\n        dealOutcome: \"Balanced royalty structures provided investor returns while supporting business growth through reduced equity dilution.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Structure royalties with clear calculation methods, payment schedules, and caps to avoid indefinite obligations.\",\n          \"Negotiate royalty rates that preserve adequate cash flow for business operations and growth investment.\",\n          \"Include sunset clauses or caps that limit total royalty payments to prevent excessive long-term obligations.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't accept royalty rates that significantly impair cash flow during critical growth phases.\",\n          \"Avoid vague royalty definitions that could create disputes about calculation methods or payment timing.\",\n          \"Don't agree to perpetual royalty obligations without caps or sunset provisions.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'royalty-model',\n    term: 'Royalty Model',\n    category: 'deal-structures',\n    icon: '📊',\n    businessDefinition: 'A business framework where ongoing payments are made based on usage, sales, or revenue, often used in licensing and franchising.',\n    simpleExplanation: \"A business system where you pay a percentage for using someone's idea or brand - like how franchises pay headquarters a cut of their sales.\",\n    sharkTankExample: \"Let's structure this as a royalty model - you pay me 5% of revenue monthly instead of giving up large equity upfront.\",\n    sharkName: 'Anupam Mittal',\n    realWorldExample: 'Spotify operates on a royalty model, paying artists and labels based on stream counts, while Uber uses commission models with drivers.',\n    difficulty: 'intermediate',\n    relatedTerms: ['revenue-share', 'licensing-model', 'franchise-system'],\n    metaTitle: 'Royalty Model - Business Framework for Usage-Based Payments',\n    metaDescription: 'Learn about royalty business models, how they work across industries, and when they make sense for startups and investors.',\n    caseStudy: {\n      introductionContext: \"Royalty models create ongoing payment streams based on usage or performance, enabling asset monetization while allowing others to build businesses using those assets.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Uncle Peter's Pancakes, after their 3% royalty + equity deal with sharks, developed a franchise royalty model where new franchise partners pay 5% ongoing royalties plus initial franchise fees for using their brand and systems.\",\n        startupDetails: \"The company leveraged their Shark Tank validation to create a scalable franchise model with standardized operations, enabling rapid expansion through partner investment rather than corporate capital.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Companies leveraged their Shark Tank success to create royalty models with distributors, licensees, or franchise partners who pay ongoing fees for brand or system usage.\",\n        founderPerspective: \"Founders used royalty models to scale reach and revenue without significant capital investment while maintaining control over core operations.\",\n        sharkPerspective: \"Sharks encouraged royalty model development as a way to monetize brand value and intellectual property beyond direct product sales.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Effective royalty models enabled rapid scaling and revenue diversification while creating passive income streams from intellectual property and brand assets.\",\n        impactOnFounder: \"Royalty models provided scalable revenue growth opportunities with lower capital requirements and risk compared to direct expansion.\",\n        dealOutcome: \"Strategic royalty model implementation created sustainable competitive advantages and diversified revenue streams for long-term growth.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Develop clear royalty model frameworks with defined usage rights, payment structures, and quality standards.\",\n          \"Protect intellectual property and brand assets before implementing royalty models to ensure sustainable competitive advantages.\",\n          \"Monitor royalty model performance and partner compliance to maintain quality and brand integrity.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't implement royalty models without proper intellectual property protection and clear usage guidelines.\",\n          \"Avoid royalty partnerships that could dilute brand value or create quality control issues.\",\n          \"Don't neglect ongoing monitoring and enforcement of royalty model terms and partner compliance.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'debt',\n    term: 'Debt',\n    category: 'deal-structures',\n    icon: '📜',\n    businessDefinition: 'Money borrowed that must be repaid with interest, typically without giving up ownership or equity in the business.',\n    simpleExplanation: \"Money you borrow that you have to pay back with extra fees - like a loan where you keep full ownership but owe money plus interest.\",\n    sharkTankExample: \"Instead of equity, I'll give you ₹50 lakhs as debt at 15% annual interest - you keep 100% ownership but must repay with interest.\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'Most businesses use debt financing from banks or NBFCs for working capital, equipment purchases, or expansion without diluting ownership.',\n    difficulty: 'beginner',\n    relatedTerms: ['loan', 'interest-rate', 'debt-financing'],\n    metaTitle: 'Debt Financing - Borrowing Money Without Giving Up Ownership',\n    metaDescription: 'Learn about debt financing for startups, advantages over equity, repayment obligations, and when debt makes sense for businesses.',\n    caseStudy: {\n      introductionContext: \"Debt financing provides capital that must be repaid with interest while preserving founder ownership, suitable when businesses have predictable cash flows or valuable assets.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Several Shark Tank India companies used traditional bank loans and NBFC debt financing before or after their show appearances to fund inventory and working capital needs, while reserving equity for strategic shark investments.\",\n        startupDetails: \"Companies like those in food and retail sectors combined shark equity with debt financing to optimize capital structure, using loans for inventory and equipment while preserving equity for growth and strategic partnerships.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Debt structures allowed companies to access capital for growth while maintaining full ownership control, with repayment tied to business cash flows rather than equity dilution.\",\n        founderPerspective: \"Founders valued debt financing for preserving ownership control while accepting fixed repayment obligations based on business performance projections.\",\n        sharkPerspective: \"Sharks offered debt when they wanted returns without long-term equity exposure or when companies had sufficient cash flow to support repayment.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Well-structured debt financing enabled growth capital access while preserving founder control, but required disciplined cash flow management to meet repayment obligations.\",\n        impactOnFounder: \"Debt preserved ownership and control while creating fixed financial obligations that required careful cash flow planning and management.\",\n        dealOutcome: \"Strategic debt use enabled growth funding while maintaining founder autonomy and full ownership of business success.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Use debt financing when you have predictable cash flows that can support regular repayment obligations.\",\n          \"Negotiate reasonable interest rates and repayment terms that align with your business cash flow cycles.\",\n          \"Maintain adequate cash reserves to handle repayment obligations even during temporary revenue dips.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't take on debt without realistic cash flow projections that demonstrate repayment capability.\",\n          \"Avoid excessive debt levels that constrain business flexibility or create cash flow stress.\",\n          \"Don't ignore covenant terms or restrictions that could limit business operations or growth strategies.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'loan',\n    term: 'Loan',\n    category: 'deal-structures',\n    icon: '🏪',\n    businessDefinition: 'A specific amount of money borrowed for a defined period with agreed repayment terms and interest rates.',\n    simpleExplanation: \"A formal agreement to borrow a specific amount of money that you pay back in installments with interest over a set time period.\",\n    sharkTankExample: \"I'll give you a ₹30 lakh loan at 12% interest, to be repaid in 36 monthly installments of ₹1 lakh each.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'Startups often take term loans from banks for equipment or working capital, like how Zerodha took initial loans before becoming profitable.',\n    difficulty: 'beginner',\n    relatedTerms: ['debt', 'interest-rate', 'repayment-schedule'],\n    metaTitle: 'Business Loan - Formal Borrowing with Structured Repayment',\n    metaDescription: 'Understand business loans, types available for startups, repayment structures, and how to qualify for favorable loan terms.',\n    caseStudy: {\n      introductionContext: \"Business loans provide structured financing with defined amounts, terms, and repayment schedules, suitable for specific capital needs with predictable returns.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Hammer Lifestyle, after achieving ₹30 lakh single-day revenue post-shark investment, secured additional term loans from banks to fund inventory expansion and working capital needs for their rapid scaling.\",\n        startupDetails: \"The company's proven sales performance and shark validation enabled them to access favorable loan terms for operational scaling while preserving remaining equity for future strategic rounds.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Companies strategically used loans for capital-intensive needs like inventory or equipment while reserving equity financing for strategic partnerships and growth capital.\",\n        founderPerspective: \"Founders balanced loan and equity financing to optimize capital costs while maintaining appropriate debt service coverage and ownership retention.\",\n        sharkPerspective: \"Sharks supported loan strategies when companies had assets or cash flows to support debt service, preserving equity value for growth phases.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Strategic loan utilization enabled capital access at lower cost than equity while maintaining founder control and preserving equity value for future growth rounds.\",\n        impactOnFounder: \"Loans provided cost-effective capital for specific needs while creating structured repayment obligations that encouraged disciplined financial management.\",\n        dealOutcome: \"Balanced loan and equity financing optimized capital structure while supporting sustainable growth and founder control preservation.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Match loan terms to cash flow cycles and ensure adequate debt service coverage ratios for repayment security.\",\n          \"Build relationships with multiple lenders to access competitive rates and terms for different financing needs.\",\n          \"Maintain strong financial records and credit history to qualify for favorable loan terms and lower interest rates.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't borrow more than you can service comfortably even during revenue downturns or seasonal variations.\",\n          \"Avoid loans with prepayment penalties that limit flexibility to pay down debt early or refinance.\",\n          \"Don't neglect personal guarantees and collateral requirements that could put personal assets at risk.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'interest-rate',\n    term: 'Interest Rate',\n    category: 'deal-structures',\n    icon: '📈',\n    businessDefinition: 'The percentage charged annually on borrowed money, representing the cost of capital and lender\\'s return on the loan.',\n    simpleExplanation: \"The extra cost you pay for borrowing money - like a rental fee for using someone else's cash, usually shown as a yearly percentage.\",\n    sharkTankExample: \"The loan comes with a 15% annual interest rate, so on ₹20 lakhs you'll pay ₹3 lakhs extra per year as the cost of borrowing.\",\n    sharkName: 'Ashneer Grover',\n    realWorldExample: 'Indian startups typically pay 12-24% interest on business loans depending on risk profile, while established companies get 8-15% rates.',\n    difficulty: 'beginner',\n    relatedTerms: ['debt', 'loan', 'cost-of-capital'],\n    metaTitle: 'Interest Rate - Cost of Borrowing Money for Business Financing',\n    metaDescription: 'Learn about interest rates in business financing, factors affecting rates, and how to negotiate better borrowing terms.',\n    caseStudy: {\n      introductionContext: \"Interest rates determine the cost of debt capital, influenced by risk assessment, market conditions, and borrower creditworthiness.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Yes Madam, after their Shark Tank appearance and ₹1.5 crore deal, leveraged their enhanced credibility to negotiate bank loans at 12% interest rates instead of the typical 18-24% for early-stage service companies.\",\n        startupDetails: \"The company's TV validation and documented revenue growth post-show enabled them to access significantly better financing terms from traditional lenders for expansion capital.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Companies leveraged their Shark Tank credibility to negotiate favorable interest rates, using media exposure and shark endorsement as risk mitigation factors for lenders.\",\n        founderPerspective: \"Founders used their TV success and shark backing as credibility signals to access lower-cost debt capital from traditional financial institutions.\",\n        sharkPerspective: \"Sharks provided credibility that helped portfolio companies access better financing terms, reducing their overall cost of capital for growth initiatives.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Enhanced credibility from shark backing enabled access to lower interest rates, reducing financing costs and improving overall return on invested capital.\",\n        impactOnFounder: \"Lower interest rates improved cash flow and profitability, enabling faster growth and better returns on debt-financed investments.\",\n        dealOutcome: \"Strategic credibility building reduced financing costs and created sustainable competitive advantages through better capital access.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Build strong credit history and financial records to qualify for lower interest rates on business financing.\",\n          \"Shop multiple lenders and negotiate rates based on your risk profile and business fundamentals.\",\n          \"Use strategic partnerships and endorsements to improve credibility and access better financing terms.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't accept high interest rates without shopping alternatives and negotiating based on your business strength.\",\n          \"Avoid variable rate loans without understanding interest rate risk and impact on cash flow projections.\",\n          \"Don't ignore total cost of borrowing including fees and charges beyond the stated interest rate.\"\n        ]\n      }\n    }\n  },\n\n  // Valuation & Funding (14 terms)\n  {\n    id: 'valuation',\n    term: 'Valuation',\n    category: 'valuation-funding',\n    icon: '📈',\n    businessDefinition: 'The estimated worth of a company based on its assets, revenue, growth potential, and market conditions.',\n    simpleExplanation: \"How much your company is worth - like getting your house appraised, but for businesses based on profits, growth, and future potential.\",\n    sharkTankExample: \"You're asking for ₹50 lakhs for 10% equity, which values your company at ₹5 crores. Can you justify this valuation?\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'When Zomato went public, investors valued the company at over ₹65,000 crores based on its market potential.',\n    difficulty: 'intermediate',\n    relatedTerms: ['pre-money-valuation', 'post-money-valuation', 'market-cap'],\n    metaTitle: 'Company Valuation - How to Value Your Startup for Investors',\n    metaDescription: 'Learn how to calculate company valuation, different valuation methods, and how investors determine what startups are worth.',\n    caseStudy: {\n      introductionContext: \"Company valuation is like getting your house appraised - it's an estimate of what your business is worth if someone wanted to buy it today. Think of it as putting a price tag on your entire company based on how much money it makes, how fast it's growing, and how valuable similar companies are.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Skippi Ice Pops came on Shark Tank asking for ₹45 lakhs for 5% of their company. This meant they believed their entire popsicle business was worth ₹9 crores (₹45 lakhs ÷ 5% = ₹9 crores). They were essentially saying: 'Our ice pops business is worth 9 crores total.'\",\n        startupDetails: \"At the time, Skippi was making healthy, natural ice pops and selling them successfully in stores and online. The founders had to convince the sharks that their small popsicle business was really worth that much money.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Here's how the valuation debate worked: Skippi was making around ₹1-2 crores in annual sales, growing fast, and had a unique healthy product. The sharks did quick math: 'If they're making ₹1.5 crores revenue and the ice cream market is huge, maybe 6x revenue (₹9 crores) is reasonable for a growing food brand.'\",\n        founderPerspective: \"The founders felt confident asking for a ₹9 crore valuation because: 1) Their sales were growing 200%+ yearly, 2) They had a unique healthy product in a growing market, 3) Big food companies often sell for 5-10x their annual revenue, 4) They had strong brand recognition and customer loyalty.\",\n        sharkPerspective: \"The sharks initially thought: 'Wait, ₹9 crores for a popsicle company making ₹1.5 crores? That's 6x revenue - pretty high for a food business.' But then they saw the growth rate, market potential, and unique positioning, and all five sharks wanted in!\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Something amazing happened - all five sharks wanted to invest, creating a bidding war! This validated that the ₹9 crore valuation wasn't crazy. The sharks saw the same potential the founders did. The final deal was even better than what they asked for because multiple sharks competed for the deal.\",\n        impactOnFounder: \"Having all five sharks validate their ₹9 crore valuation was incredible validation. It proved their business was valuable and gave them credibility with retailers, suppliers, and future investors. The founders could now say: 'Five successful businesspeople agreed our company is worth ₹9+ crores.'\",\n        dealOutcome: \"The validated valuation became their baseline for everything: hiring ('We're a ₹9+ crore company'), partnerships, and future funding. When they grew to ₹5+ crores revenue, they could justify even higher valuations because sharks had already validated their worth.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Use the 'revenue multiple method': Find similar companies that sold for 3-8x their annual revenue, then apply that multiple to your revenue (₹2 crores revenue × 4x multiple = ₹8 crores valuation).\",\n          \"Prepare your 'valuation story': 'We make X revenue, growing Y% annually, in a Z-sized market. Similar companies sell for this multiple, so we're worth this much.'\",\n          \"Show growth momentum: If your revenue is small but growing fast (100%+ annually), investors will pay for future potential, not just current numbers.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't value your company based on dreams - use real revenue numbers and realistic growth rates, not 'we could make ₹100 crores someday' fantasies.\",\n          \"Don't compare yourself to Zomato or Flipkart unless you have similar revenue and growth - compare to companies actually similar to yours in size and industry.\",\n          \"Don't fall in love with your valuation number - be ready to negotiate. The 'right' valuation is what smart investors are willing to pay.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'pre-money-valuation',\n    term: 'Pre-Money Valuation',\n    category: 'valuation-funding',\n    icon: '📊',\n    businessDefinition: 'The value of a company before receiving external investment or capital injection.',\n    simpleExplanation: \"What your company is worth before investors put in new money - the baseline value before anyone adds fresh cash to the business.\",\n    sharkTankExample: \"Your pre-money valuation is ₹4 crores. After my ₹1 crore investment, the post-money valuation becomes ₹5 crores.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'If a startup has a ₹10 crore pre-money valuation and raises ₹2 crores, the post-money valuation becomes ₹12 crores.',\n    difficulty: 'intermediate',\n    relatedTerms: ['post-money-valuation', 'equity-dilution', 'funding-round'],\n    metaTitle: 'Pre-Money Valuation - Company Worth Before Investment Explained',\n    metaDescription: 'Understand pre-money valuation, how it affects equity distribution, and its role in startup funding negotiations.',\n    caseStudy: {\n      introductionContext: \"Pre-money valuation is what your company is worth BEFORE the investor puts in their money. Think of it like this: if your house is worth ₹50 lakhs and you're selling 20% to a buyer for ₹10 lakhs, your house was worth ₹50 lakhs BEFORE they paid – that's the pre-money value.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Let's use FitFeast as an example. They asked for ₹1 crore for 6.5% equity. This means they valued their company at ₹15.38 crores BEFORE the sharks invested (₹1 crore ÷ 6.5% = ₹15.38 crores). That ₹15.38 crores was their pre-money valuation.\",\n        startupDetails: \"FitFeast was selling healthy meal options for fitness enthusiasts. They had to convince sharks that their business was worth ₹15+ crores even without the shark's ₹1 crore investment.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"The FitFeast founders basically said: 'Our company is worth ₹15.38 crores today. If you give us ₹1 crore, you'll own 6.5% of our ₹15.38 crore business.' The sharks had to decide: 'Is this healthy food business really worth ₹15+ crores right now, based on their current sales and growth?'\",\n        founderPerspective: \"The founders believed their pre-money valuation of ₹15.38 crores was fair because: 1) They had innovative healthy products, 2) The fitness food market was growing rapidly, 3) They had good early sales traction, 4) Similar food brands were valued at high multiples.\",\n        sharkPerspective: \"The sharks thought: 'Wait, ₹15+ crores for a early-stage food company? Let's see their revenue... If they're making ₹1-2 crores annually, that's 7-15x revenue multiple. That's pretty high for a food business without proven scale.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"The sharks challenged the ₹15+ crore pre-money valuation because the revenue and growth didn't fully support such a high number. They negotiated a different deal structure, essentially saying 'We think your company is worth less than ₹15 crores today, so we want more equity for our ₹1 crore.'\",\n        impactOnFounder: \"This taught the founders that pre-money valuations must be backed by solid numbers. You can't just claim your company is worth ₹15 crores without revenue and growth data to prove it. Investors will do the math and challenge unrealistic valuations.\",\n        dealOutcome: \"The final deal was restructured with a lower pre-money valuation, meaning the sharks got more equity for their ₹1 crore investment because they convinced the founders the company wasn't worth ₹15+ crores yet.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Calculate your pre-money valuation using real numbers: If you make ₹2 crores revenue and similar companies sell for 5x revenue, your pre-money value is ₹10 crores (not ₹20 crores!).\",\n          \"Be conservative with pre-money valuations: It's better to be pleasantly surprised than to have investors laugh at unrealistic numbers.\",\n          \"Prepare your defense: If you claim ₹15 crores pre-money, show exactly why - revenue growth, market size, comparable company sales, etc.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't inflate pre-money valuation based on hopes: Just because the health food market is worth ₹1000 crores doesn't mean your ₹1 crore revenue company is worth ₹15 crores.\",\n          \"Don't use unrealistic multiples: Saying you're worth 20x revenue when similar companies sell for 3-5x revenue will make investors walk away.\",\n          \"Don't forget the math check: Always double-check that your ask amount ÷ equity percentage = a realistic pre-money valuation you can defend.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'post-money-valuation',\n    term: 'Post-Money Valuation',\n    category: 'valuation-funding',\n    icon: '💰',\n    businessDefinition: 'The value of a company immediately after receiving external investment, calculated as pre-money valuation plus investment amount.',\n    simpleExplanation: \"What your company is worth after investors add their money - pre-money value plus the fresh investment equals post-money value.\",\n    sharkTankExample: \"With ₹3 crore pre-money and my ₹1 crore investment, your post-money valuation is ₹4 crores, giving me 25% equity.\",\n    sharkName: 'Anupam Mittal',\n    realWorldExample: 'After Paytm\\'s Series A funding of $5 million with $10 million pre-money, the post-money valuation was $15 million.',\n    difficulty: 'intermediate',\n    relatedTerms: ['pre-money-valuation', 'investment-round', 'equity-percentage'],\n    metaTitle: 'Post-Money Valuation - Company Value After Investment',\n    metaDescription: 'Learn post-money valuation calculation, its difference from pre-money, and how it determines investor equity percentage.',\n    caseStudy: {\n      introductionContext: \"Post-money valuation is what your company is worth AFTER the investor adds their money. It's like buying a house: if the house costs ₹50 lakhs and you add ₹10 lakhs for renovations, the house is now worth ₹60 lakhs total - that's the post-money value.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Skippi Ice Pops had a pre-money valuation of around ₹8 crores. When the sharks invested ₹1 crore, the post-money valuation became ₹9 crores (₹8 crore pre-money + ₹1 crore investment = ₹9 crore post-money). So after the deal, Skippi was officially worth ₹9 crores total.\",\n        startupDetails: \"This ₹9 crore post-money valuation meant the sharks owned about 11% of the company (₹1 crore ÷ ₹9 crores = 11%), while the founders kept 89% ownership of their now-more-valuable business.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"The ₹9 crore post-money valuation became Skippi's official 'price tag' that everyone could see. When they talked to retailers, suppliers, or future investors, they could say: 'We're a ₹9-crore company as validated by Shark Tank sharks.' It was like having a certificate of their company's worth.\",\n        founderPerspective: \"The founders loved the ₹9 crore post-money valuation because: 1) It was public validation of their worth, 2) It made hiring easier ('Join a ₹9-crore company!'), 3) It gave them a baseline for future funding ('We were worth ₹9 crores, now we're worth ₹20+ crores'), 4) It impressed retailers and partners.\",\n        sharkPerspective: \"The sharks understood that their ₹1 crore investment wasn't just buying equity - it was setting a public benchmark. If Skippi succeeded, everyone would know it was worth ₹9+ crores because the sharks validated it on national TV.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"The ₹9 crore post-money valuation became Skippi's public 'price tag' that helped them in everything: media coverage ('Shark Tank's ₹9-crore ice cream company'), retailer negotiations, talent hiring, and future funding rounds. It was like having a famous appraisal of their business.\",\n        impactOnFounder: \"Having a ₹9 crore post-money valuation gave the founders incredible credibility and confidence. When they grew to ₹5+ crores in revenue, they could justify even higher valuations like ₹25-50 crores because they had a documented starting point.\",\n        dealOutcome: \"The established post-money valuation became their foundation for growth. Every future deal, partnership, or funding round could reference: 'We started at ₹9 crores post-money and have grown X% since then, so now we're worth Y crores.'\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Use the simple formula: Post-money = Pre-money + Investment. If your company is worth ₹5 crores and investor adds ₹1 crore, post-money = ₹6 crores total.\",\n          \"Document your post-money valuation clearly - it becomes your 'official worth' that everyone will reference in media, partnerships, and future deals.\",\n          \"Use post-money as your growth benchmark: 'We were worth ₹6 crores post-money, grew 300%, so now we're worth ₹18-24 crores' for next round.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't confuse post-money with how much cash you have - post-money is company value, not bank balance. ₹6 crore post-money doesn't mean ₹6 crores in your account.\",\n          \"Don't let post-money create unrealistic expectations - just because you're 'worth' ₹6 crores doesn't mean you can spend like you have ₹6 crores cash.\",\n          \"Don't use post-money valuation without business growth to back it up - if you claim to be worth ₹20 crores later, show the revenue and traction that justifies doubling from ₹6 crores.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'down-round',\n    term: 'Down Round',\n    category: 'valuation-funding',\n    icon: '📉',\n    businessDefinition: 'A funding round where a company raises money at a lower valuation than its previous funding round.',\n    simpleExplanation: \"When your company's value decreases in the next funding round - like your house being worth less than when you last checked.\",\n    sharkTankExample: \"Your last round valued the company at ₹10 crores, but now you're raising at ₹7 crores - that's a down round.\",\n    sharkName: 'Ashneer Grover',\n    realWorldExample: 'During 2022, many unicorns like BYJU\\'S faced down rounds as investor sentiment changed and valuations reset.',\n    difficulty: 'advanced',\n    relatedTerms: ['up-round', 'flat-round', 'anti-dilution'],\n    metaTitle: 'Down Round - When Startup Valuation Decreases in Funding',\n    metaDescription: 'Understand down rounds in startup funding, their causes, impact on existing shareholders, and how to handle them strategically.',\n    caseStudy: {\n      introductionContext: \"A down round is like your house losing value - if you bought it for ₹50 lakhs and now it's worth ₹40 lakhs, that's a down situation. In business, it means your company is worth less than it was in the previous funding round. This can happen when the business struggles or market conditions change.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Let's imagine a hypothetical Shark Tank company that was valued at ₹10 crores on the show but struggled afterward. When they tried to raise more money 2 years later, investors only offered ₹6 crores valuation. That drop from ₹10 crores to ₹6 crores would be a down round - a 40% decrease in company value.\",\n        startupDetails: \"This could happen to any startup that overestimated their growth potential on the show, faced unexpected competition, had execution problems, or got hit by market downturns that affected their entire industry.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Here's how a down round works: Original investors paid for shares when the company was worth ₹10 crores. New investors now say 'We think it's only worth ₹6 crores.' This means everyone's shares are now worth less - like if your neighborhood property values dropped 40%.\",\n        founderPerspective: \"Founders facing down rounds feel terrible because: 1) It's embarrassing after TV success, 2) Their own shares are worth less, 3) Early employees' options lose value, 4) It suggests they didn't meet expectations. But sometimes it's better to accept reality and get funding to survive.\",\n        sharkPerspective: \"Sophisticated investors understand down rounds happen for many reasons: market crashes, unrealistic initial valuations, execution challenges, or industry disruption. Smart money focuses on whether the business can recover, not just the valuation drop.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Companies that handle down rounds well often survive and thrive later. The key is accepting reality, fixing underlying problems, and focusing on building value rather than protecting ego. Some of the best companies went through down rounds before becoming hugely successful.\",\n        impactOnFounder: \"Down rounds teach founders valuable lessons about realistic valuations, proper execution, and market dynamics. While painful, they often lead to more disciplined growth and better long-term outcomes if the business fundamentals are strong.\",\n        dealOutcome: \"Well-managed down rounds provide necessary capital for turnaround while resetting expectations. Companies that communicate transparently and focus on fundamentals can rebuild value and eventually achieve higher valuations than their original peaks.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Don't cling to unrealistic valuations from your peak - accept market reality and focus on building real value through revenue growth and strong fundamentals.\",\n          \"If facing a down round, negotiate protection for employees (stock option repricing) and communicate honestly with your team about the situation and recovery plan.\",\n          \"Use down rounds as opportunities to bring in smart investors who can help fix problems, rather than just seeking the highest valuation from any investor.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't let pride prevent you from taking a down round if you need funding to survive - a lower valuation is better than bankruptcy.\",\n          \"Don't hide down round news from employees or investors - transparency builds trust and helps everyone align on the recovery plan.\",\n          \"Don't assume a down round means permanent failure - many successful companies (including global giants) went through down rounds before achieving massive success.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'up-round',\n    term: 'Up Round',\n    category: 'valuation-funding',\n    icon: '📈',\n    businessDefinition: 'A funding round where a company raises money at a higher valuation than its previous funding round.',\n    simpleExplanation: \"When your company's value increases in the next funding round - good news meaning your business has grown and become more valuable.\",\n    sharkTankExample: \"Great! Your Series A was at ₹5 crore valuation, now you're raising Series B at ₹15 crores - strong up round!\",\n    sharkName: 'Vineeta Singh',\n    realWorldExample: 'Flipkart consistently raised up rounds from its early days until the Walmart acquisition, with each round at higher valuations.',\n    difficulty: 'intermediate',\n    relatedTerms: ['down-round', 'valuation-increase', 'growth-metrics'],\n    metaTitle: 'Up Round - Higher Valuation in Subsequent Funding',\n    metaDescription: 'Learn about up rounds in startup funding, what drives valuation increases, and how they benefit existing shareholders.',\n    caseStudy: {\n      introductionContext: \"An up round is like your house increasing in value - if you bought it for ₹50 lakhs and now it's worth ₹70 lakhs, that's an 'up' situation! In business, it means your company is worth more in the next funding round than it was before. This is every founder's dream because it shows your business is growing successfully.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Proxgy got a Shark Tank deal that valued them at around ₹10 crores (₹1 crore for 10% equity). After the show aired, they grew rapidly and raised their next funding round at ₹25+ crores valuation. That jump from ₹10 crores to ₹25+ crores was a massive up round - their company became 2.5x more valuable!\",\n        startupDetails: \"Proxgy made IoT safety devices for companies. The Shark Tank exposure helped them sign big corporate clients, which dramatically increased their revenue and made the company much more valuable to new investors.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Here's how Proxgy's up round worked: After Shark Tank, they went from small revenue to major corporate contracts. When new investors looked at them, they said: 'This company was worth ₹10 crores with small revenue. Now they have big clients and ₹5+ crores revenue, so they're worth ₹25+ crores.' The business fundamentals justified the higher valuation.\",\n        founderPerspective: \"The founders were thrilled with the up round because: 1) It validated their growth strategy, 2) Their own shares became much more valuable, 3) They could raise more money while giving away less equity, 4) It proved the Shark Tank investment was working, 5) Employees' stock options became more valuable too.\",\n        sharkPerspective: \"The sharks were delighted because their ₹1 crore investment at ₹10 crore valuation was now worth ₹2.5 crores at the ₹25 crore valuation. They made 2.5x returns on paper without doing anything - just by betting on the right founders who executed well.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"The up round created a virtuous cycle: higher valuation attracted better investors, media attention brought more customers, talented employees joined for valuable stock options, and the company could invest more in growth. Success bred more success.\",\n        impactOnFounder: \"Having an up round gave the founders incredible confidence and credibility. They could now hire top talent ('Join a ₹25-crore company!'), negotiate better partnerships, and plan their next round at even higher valuations. The TV exposure had turned into real business value.\",\n        dealOutcome: \"The up round proved that the original Shark Tank validation was correct and that the founders had executed well. It set them up for continued growth and potentially even bigger up rounds in the future, creating wealth for everyone involved.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Focus on real metrics after your first round: revenue growth, customer acquisition, and operational improvements. Up rounds happen when these numbers justify higher valuations.\",\n          \"Use your previous valuation as motivation, not a ceiling: If sharks valued you at ₹10 crores, prove you can be worth ₹20+ crores by hitting ambitious but realistic growth targets.\",\n          \"Document your progress clearly: Create regular updates showing revenue growth, new customers, team expansion, and market traction that justify valuation increases.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't expect up rounds just from TV fame - you need real business growth (revenue, customers, profits) to justify higher valuations.\",\n          \"Don't wait too long between rounds - momentum from TV exposure fades, so capitalize on early success to achieve up rounds while attention is high.\",\n          \"Don't overpromise in your first round - set realistic expectations so you can exceed them and earn up rounds through performance, not hype.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'flat-round',\n    term: 'Flat Round',\n    category: 'valuation-funding',\n    icon: '➡️',\n    businessDefinition: 'A funding round where a company raises money at the same valuation as its previous funding round.',\n    simpleExplanation: \"When your company's value stays the same as the last funding round - neither up nor down, just maintaining the same price.\",\n    sharkTankExample: \"Your last round was at ₹8 crores and you're raising again at ₹8 crores - it's a flat round, maintaining value.\",\n    sharkName: 'Ghazal Alagh',\n    realWorldExample: 'During uncertain market conditions, many companies raise flat rounds to maintain operations without diluting at lower valuations.',\n    difficulty: 'intermediate',\n    relatedTerms: ['up-round', 'down-round', 'bridge-round'],\n    metaTitle: 'Flat Round - Same Valuation in Consecutive Funding Rounds',\n    metaDescription: 'Understand flat rounds in startup funding, when they occur, and their implications for founders and existing investors.',\n    caseStudy: {\n      introductionContext: \"A flat round is like your house staying at the same value - if you bought it for ₹50 lakhs and it's still worth ₹50 lakhs when you want to sell, that's flat. In business, it means your company raises money at the same valuation as the previous round. It's not bad or good - it's maintaining value while getting the cash you need.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Imagine a Shark Tank company that got valued at ₹10 crores on the show. A year later, they need more money for expansion but the market is tough. Instead of taking a lower valuation (down round), they raise ₹2 crores at the same ₹10 crore valuation. That's a flat round - same price, more cash.\",\n        startupDetails: \"This could happen to any growing company that's meeting targets but facing tough market conditions, or companies that want to raise money quickly without lengthy valuation negotiations that might delay their growth plans.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Here's how a flat round works: The company says 'We were worth ₹10 crores before, we're still worth ₹10 crores now, but we need ₹2 crores more for growth.' New investors say 'Fine, the price is fair, let's do the deal quickly.' Everyone avoids the pain of arguing whether the company is worth more or less.\",\n        founderPerspective: \"Founders like flat rounds because: 1) They avoid embarrassing down rounds, 2) They keep employee stock options valuable, 3) They can raise money quickly without months of valuation negotiations, 4) They maintain credibility with existing investors who don't see their investment lose value.\",\n        sharkPerspective: \"Smart investors understand flat rounds make sense sometimes: market timing might be bad for higher valuations, the company might need money quickly for opportunities, or it might be strategic to maintain price stability while building more value before the next big round.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Flat rounds often provide crucial funding without drama. While they don't make exciting headlines like up rounds, they give companies the capital they need to keep growing and position for future up rounds when market conditions improve.\",\n        impactOnFounder: \"Flat rounds teach founders that sometimes 'steady as she goes' is the right strategy. They get the money they need without valuation drama, maintain team morale (options stay valuable), and live to fight another day when they can achieve up rounds.\",\n        dealOutcome: \"Well-executed flat rounds provide necessary capital while maintaining valuation stability, setting the stage for future up rounds when the company has more traction and market conditions improve.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Consider flat rounds when you need money but market conditions are tough - sometimes maintaining valuation is better than fighting for increases in bad markets.\",\n          \"Use flat rounds strategically to buy time: raise money at current valuation, grow the business, then go for an up round when you have better metrics and market timing.\",\n          \"Communicate flat round benefits clearly: 'We maintained our ₹10 crore valuation while raising growth capital' sounds much better than 'We couldn't get a higher valuation.'\"\n        ],\n        mistakesToAvoid: [\n          \"Don't avoid flat rounds due to ego when they're the smartest move - sometimes maintaining value while getting cash is better than risking a down round or no funding at all.\",\n          \"Don't forget to explain to your team why a flat round is good strategy - help them understand it's about timing and market conditions, not company performance.\",\n          \"Don't use flat rounds as an excuse to avoid improving your business - keep growing metrics so your next round can be an up round.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'bridge-round',\n    term: 'Bridge Round',\n    category: 'valuation-funding',\n    icon: '🌉',\n    businessDefinition: 'A short-term financing solution to provide companies with capital until their next major funding round.',\n    simpleExplanation: \"Emergency funding to keep the business running until you can raise proper funding - like borrowing money to pay rent until your salary comes.\",\n    sharkTankExample: \"You need a bridge round of ₹2 crores to survive until your Series A closes in 6 months.\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'Many startups raised bridge rounds during COVID-19 to survive until market conditions improved for larger funding rounds.',\n    difficulty: 'intermediate',\n    relatedTerms: ['runway-extension', 'gap-funding', 'survival-funding'],\n    metaTitle: 'Bridge Round - Short-Term Funding Between Major Rounds',\n    metaDescription: 'Learn about bridge rounds in startup funding, when they\\'re needed, terms, and how they help companies survive funding gaps.',\n    caseStudy: {\n      introductionContext: \"A bridge round is like borrowing money from a friend to pay rent until your paycheck arrives. In business, it's short-term funding to keep your company alive until you can raise a proper, larger funding round. You need cash now, but you don't want to do a full fundraise yet.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Imagine Proxgy after their Shark Tank success. They had great momentum but needed ₹3 crores more to hit major milestones before their big Series A round. Instead of spending 6 months fundraising, they did a quick ₹3 crore bridge round in 4 weeks, then used that money to grow enough for a ₹15 crore Series A later.\",\n        startupDetails: \"Proxgy needed bridge funding to expand their team, build more IoT devices, and sign enterprise clients. This growth would make them much more attractive to big investors for their next round.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Here's how Proxgy's bridge round worked: They said 'Give us ₹3 crores now, we'll use it to grow revenue from ₹2 crores to ₹8 crores in 6 months, then we'll raise a big Series A where you can convert your bridge investment to shares.' Investors got a discount for the early risk.\",\n        founderPerspective: \"The founders loved bridge rounds because: 1) They got money fast (4 weeks vs 6 months), 2) They could focus on growing the business instead of fundraising, 3) They hit their milestones with the bridge money, 4) This made their Series A much easier and at higher valuation.\",\n        sharkPerspective: \"Smart investors liked providing bridge rounds because: 1) They got to invest in a proven company at a discount, 2) They helped the company grow faster, 3) They got first access to the bigger Series A round, 4) Lower risk than early-stage but still good returns.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"The ₹3 crore bridge round worked perfectly. Proxgy used the money to grow from ₹2 crores to ₹8 crores revenue, signed major enterprise clients, and proved their scalability. Six months later, they easily raised a ₹15 crore Series A at 3x higher valuation than their bridge round.\",\n        impactOnFounder: \"Bridge funding let the founders focus on execution instead of fundraising. They hit aggressive growth targets, which made them much more attractive to institutional investors. The short-term bridge enabled long-term success.\",\n        dealOutcome: \"The bridge round investors got great returns when their investment converted to Series A shares at higher valuations, and the company got the breathing room to achieve the milestones needed for successful institutional fundraising.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Use bridge rounds when you're 3-6 months away from a major milestone that will increase your valuation significantly (like hitting ₹1 crore monthly revenue).\",\n          \"Keep bridge rounds small and focused: '₹2 crores for 4 months to hit specific targets' rather than large amounts for vague purposes.\",\n          \"Offer bridge investors conversion discounts (10-20%) to compensate them for early risk and ensure they convert to your next round.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't use bridge rounds to fix fundamental business problems - only use them when you're growing but need cash to accelerate growth.\",\n          \"Don't make bridge rounds too big or long-term - they should be genuine bridges to bigger rounds, not main funding strategies.\",\n          \"Don't do bridge rounds without a clear timeline and milestones - investors need to know exactly how you'll use the money and when the next round will happen.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'valuation-multiple',\n    term: 'Valuation Multiple',\n    category: 'valuation-funding',\n    icon: '🔢',\n    businessDefinition: 'A ratio used to value companies by comparing their valuation to financial metrics like revenue, EBITDA, or users.',\n    simpleExplanation: \"A shortcut to estimate company value - like saying tech companies are worth 10x their revenue, so ₹1 crore revenue = ₹10 crore valuation.\",\n    sharkTankExample: \"SaaS companies typically trade at 8-12x revenue multiples, so your ₹50 lakh ARR could justify ₹4-6 crore valuation.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'E-commerce companies often valued at 2-4x revenue, while SaaS companies command higher multiples of 8-15x revenue.',\n    difficulty: 'advanced',\n    relatedTerms: ['price-to-sales', 'ev-ebitda', 'comparable-analysis'],\n    metaTitle: 'Valuation Multiple - Quick Methods to Value Companies',\n    metaDescription: 'Understand valuation multiples, industry benchmarks, and how investors use them to quickly assess company worth.',\n    caseStudy: {\n      introductionContext: \"Valuation multiples are like shortcuts for pricing - they're simple math formulas that investors use to quickly estimate what companies are worth. Just like saying 'houses in this area cost ₹10,000 per square foot,' investors say 'tech companies are worth 8x their annual revenue.' It's a fast way to check if valuations make sense.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Let's say a SaaS company on Shark Tank asks for ₹1 crore for 10% equity, implying a ₹10 crore valuation. If they make ₹1 crore annual revenue, their multiple is 10x revenue (₹10 crore valuation ÷ ₹1 crore revenue = 10x). The sharks then think: 'Is 10x revenue reasonable for a SaaS company?'\",\n        startupDetails: \"The sharks know that SaaS companies typically sell for 8-15x revenue, food companies for 2-4x revenue, and e-commerce for 1-3x revenue. So they quickly check: does this company's multiple match their industry norms?\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Here's the math the sharks do in their heads: 1) Company wants ₹10 crore valuation, 2) They make ₹1 crore revenue, 3) That's 10x revenue multiple, 4) Is 10x reasonable for this type of business? If it's a high-growth SaaS, yes. If it's a food truck, no way - food businesses usually get 2-3x revenue.\",\n        founderPerspective: \"Smart founders prepare for this by researching their industry: 'We're asking for 6x revenue multiple, which is conservative because similar SaaS companies sold for 8-12x revenue. Here are 3 examples...' This shows they understand market pricing and aren't just making up numbers.\",\n        sharkPerspective: \"Sharks use multiples as a reality check: 'You want a 20x revenue multiple for a low-margin food business? Similar companies sell for 3x revenue. Either explain why you're special, or lower your valuation to realistic levels.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Companies with realistic multiples that match their industry often get deals. Companies asking for tech multiples when they're not tech companies get rejected fast. Sharks appreciate founders who understand market pricing and can justify their multiples with real examples.\",\n        impactOnFounder: \"Learning about multiples helps founders price their companies realistically and build credibility with investors. Instead of guessing, they can say: 'We're worth 5x revenue because that's what similar companies sell for, and here's proof.'\",\n        dealOutcome: \"Well-researched multiples make negotiations smoother because both sides agree on the baseline pricing method. Founders who understand their industry multiples are more likely to get investment.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Research your industry's typical multiples: Find 5-10 similar companies that sold recently and calculate their revenue/profit multiples. Use this as your baseline pricing.\",\n          \"Present your multiple clearly: 'We're asking for 5x revenue (₹10 crore valuation ÷ ₹2 crore revenue) because similar companies sell for 4-7x revenue.'\",\n          \"Justify any premium: If you want higher multiples than average, explain why - faster growth, better margins, unique technology, etc.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't use multiples from different industries: A food company can't justify tech multiples just because 'tech companies get 10x revenue.' Stay in your lane.\",\n          \"Don't make up multiples: Saying 'companies like us get 15x revenue' without proof makes you look unprepared. Always have real examples.\",\n          \"Don't ignore your actual business: High multiples mean nothing if your revenue is tiny or margins are terrible. Fix the fundamentals first, then worry about multiples.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'enterprise-value',\n    term: 'Enterprise Value (EV)',\n    category: 'valuation-funding',\n    icon: '🏢',\n    businessDefinition: 'The total value of a company including equity value plus debt minus cash, representing the cost to acquire the entire business.',\n    simpleExplanation: \"The real cost to buy the entire company - market value plus debt minus cash, like buying a house with a mortgage where you take over payments.\",\n    sharkTankExample: \"Your market cap is ₹100 crores, but with ₹20 crores debt and ₹5 crores cash, your enterprise value is ₹115 crores.\",\n    sharkName: 'Anupam Mittal',\n    realWorldExample: 'When Facebook acquired WhatsApp for $19 billion, this was the enterprise value including all debt and cash adjustments.',\n    difficulty: 'advanced',\n    relatedTerms: ['market-capitalization', 'debt-equity-ratio', 'acquisition-value'],\n    metaTitle: 'Enterprise Value (EV) - Total Company Acquisition Cost',\n    metaDescription: 'Learn enterprise value calculation, how it differs from market cap, and why it\\'s important for M&A and investment analysis.',\n    caseStudy: {\n      introductionContext: \"Think of Enterprise Value like buying a house with a mortgage. If you buy a ₹1 crore house but it has a ₹30 lakh loan and ₹5 lakhs cash in the bank, you're really paying ₹1.25 crores (house price + loan - cash). That's what Enterprise Value means for companies.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Let's look at BluePine Foods, which makes healthy frozen meals. They came on Shark Tank asking for ₹75 lakhs for 15% equity, valuing their company at ₹5 crores. But here's the twist - they had ₹50 lakhs in bank loans for equipment and ₹10 lakhs cash in the bank. So their real Enterprise Value was ₹5.4 crores (₹5 crores + ₹50 lakhs debt - ₹10 lakhs cash).\",\n        startupDetails: \"BluePine had good sales but needed money to expand. The sharks had to understand that buying the company meant taking over both the business AND its debts, while also getting the cash.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"When Vineeta Singh was evaluating BluePine, she said: 'I'm not just buying 15% of a ₹5 crore company. I'm buying into a business that costs ₹5.4 crores to own completely because of the debt.' This helped her understand the real cost of acquiring the entire business.\",\n        founderPerspective: \"The BluePine founders learned that investors don't just look at their company's market value. They also consider how much debt the company owes and how much cash it has, because this affects what they're really buying.\",\n        sharkPerspective: \"Sharks think like buyers of entire companies. They ask: 'If I wanted to own 100% of this business today, how much would I really have to pay?' That's why debt and cash matter in their calculations.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Understanding Enterprise Value helped both sides negotiate better. The sharks realized they were getting a business with some debt but also cash reserves, while the founders understood why their debt situation mattered to investors.\",\n        impactOnFounder: \"Founders learned to present their complete financial picture upfront. They now explain their debt situation and cash position clearly, so investors understand exactly what they're investing in.\",\n        dealOutcome: \"The deal was structured better because everyone understood the real cost. Vineeta invested knowing she was getting a business with manageable debt and decent cash flow, not just buying equity shares.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Always tell investors about your company's debt and cash when discussing valuation - it shows you understand business finances.\",\n          \"Calculate your Enterprise Value before fundraising: Company Value + Debt - Cash = what investors are really buying.\",\n          \"If you have good cash reserves, highlight them - they reduce the real cost for investors.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't hide debt from investors - they'll find out during due diligence and it destroys trust.\",\n          \"Don't only talk about your company's market value - smart investors also want to know about debt and cash.\",\n          \"Don't take on unnecessary debt before fundraising - it increases your Enterprise Value and makes you more expensive to buy.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'equity',\n    term: 'Equity',\n    category: 'valuation-funding',\n    icon: '🥧',\n    businessDefinition: 'Ownership stake in a company represented by shares, giving holders rights to profits and assets proportional to their ownership percentage.',\n    simpleExplanation: \"Your slice of the company pie - the percentage of the business you own, which gives you rights to profits and a say in decisions.\",\n    sharkTankExample: \"I'll give you ₹50 lakhs for 20% equity in your company - that means I own one-fifth of your business.\",\n    sharkName: 'Anupam Mittal',\n    realWorldExample: 'When Flipkart founders gave Sachin and Binny Bansal equity to early employees and investors, those small percentages became worth millions during the Walmart acquisition.',\n    difficulty: 'beginner',\n    relatedTerms: ['stake', 'dilution', 'shares'],\n    metaTitle: 'Equity - Understanding Business Ownership and Shares',\n    metaDescription: 'Learn about equity ownership in startups, how it works, and what it means for founders, employees, and investors.',\n    caseStudy: {\n      introductionContext: \"Equity is like owning slices of a pizza. If you own 30% equity in a company, you own 30% of everything - profits, assets, and decision-making power. The more equity you have, the bigger your slice of the business pie.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Let's look at BoAt, the headphone company. When founders Aman Gupta and Sameer Mehta started, they owned 100% equity. When they appeared on Shark Tank, they offered 10% equity for ₹1 crore, meaning they valued their company at ₹10 crores. By giving 10% equity, they were saying 'Take 1/10th ownership of our entire business.'\",\n        startupDetails: \"BoAt was already selling trendy headphones successfully but needed money and expertise to compete with bigger brands like Sony and JBL. The equity was their way to bring in smart money and strategic partners.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"When BoAt offered 10% equity, they weren't just giving away money - they were giving the shark 10% of all future profits, 10% say in major decisions, and 10% of whatever the company would be worth if they ever sold it. It's like making someone a permanent business partner.\",\n        founderPerspective: \"The founders thought: 'We're giving up 10% control, but this ₹1 crore plus the shark's expertise could make our remaining 90% worth much more than our current 100%.' They traded some ownership for resources to grow bigger.\",\n        sharkPerspective: \"The shark thought: 'For ₹1 crore, I get permanent ownership in a growing headphone brand. If BoAt becomes worth ₹100 crores someday, my 10% equity will be worth ₹10 crores - that's a 10x return.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"BoAt's equity deal worked perfectly. The shark's money and guidance helped them expand rapidly. Today BoAt is worth over ₹500 crores, so that original 10% equity stake is now worth ₹50+ crores - the shark made 50x returns!\",\n        impactOnFounder: \"The founders learned that giving good equity to the right investors can make everyone richer. Their 90% of a ₹500 crore company (₹450 crores) is way more valuable than 100% of a ₹10 crore company.\",\n        dealOutcome: \"Everyone won big: the shark got massive returns on their equity investment, while founders built a much more valuable business with strategic support. Smart equity sharing created wealth for all parties.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Remember equity is permanent - once you give 20% to someone, they own 20% of your company forever (unless you buy it back).\",\n          \"Think about future value - if your company could be worth ₹100 crores someday, is giving 15% equity (₹15 crores future value) worth the ₹2 crores you're getting today?\",\n          \"Choose equity partners carefully - they're not just investors, they're permanent co-owners who'll have a say in your business decisions.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't give away equity cheaply - many founders regret giving 25% equity for small amounts when their company later becomes very valuable.\",\n          \"Don't ignore that equity comes with voting rights - large equity holders can influence or even control major business decisions.\",\n          \"Don't forget equity compounds - if you give away 50% equity across multiple rounds, you could end up owning less than 50% of the company you started.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'stake',\n    term: 'Stake',\n    category: 'valuation-funding',\n    icon: '🎯',\n    businessDefinition: 'A financial interest or ownership position in a company, typically measured as a percentage of total ownership.',\n    simpleExplanation: \"How much of the company you own - like having a stake in a restaurant where you own 25% and get 25% of the profits.\",\n    sharkTankExample: \"After this investment, I'll have a 15% stake in your company, making me a significant stakeholder in your success.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'Ratan Tata holds stakes in over 30 startups including Ola, Paytm, and Urban Company, giving him ownership positions in these companies.',\n    difficulty: 'beginner',\n    relatedTerms: ['equity', 'ownership', 'shares'],\n    metaTitle: 'Stake - Understanding Ownership Position in Companies',\n    metaDescription: 'Learn about ownership stakes in businesses, how they work, and what they mean for investors and founders.',\n    caseStudy: {\n      introductionContext: \"A stake is like owning a piece of property with friends. If you and 3 friends buy a ₹20 lakh house together equally, each person has a 25% stake. You each own 25% of the house value, get 25% of rental income, and have 25% say in decisions like selling or renovating.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Sugar Cosmetics is a perfect example. When Vineeta Singh appeared on Shark Tank as an entrepreneur (before becoming a shark), she was seeking investors who would take a stake in her beauty brand. Eventually, multiple investors including Fireside Ventures took stakes in Sugar Cosmetics, each owning a percentage of the growing company.\",\n        startupDetails: \"Sugar Cosmetics needed funding to compete with international beauty brands. Each investor who took a stake became a partial owner, sharing in both the risks and rewards of the beauty business.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"When Fireside Ventures took a 15% stake in Sugar Cosmetics, they weren't just lending money - they became 15% owners. This meant they got 15% of any profits, 15% say in major decisions, and 15% of whatever the company would be worth when sold. It's like becoming business partners.\",\n        founderPerspective: \"Vineeta thought: 'I'm giving these investors a permanent stake in my company, not just repaying a loan. But their expertise and money will help Sugar grow so much bigger that my remaining stake will be worth more than 100% of the smaller company.'\",\n        sharkPerspective: \"The investors thought: 'By taking a stake in Sugar Cosmetics, we're betting on Vineeta's vision. If she builds this into a ₹1000 crore beauty brand, our stake will be worth hundreds of crores - much more than just earning interest on a loan.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Sugar Cosmetics grew rapidly with stakeholder support and became one of India's top beauty brands. The investors' stakes became incredibly valuable as the company's worth increased from ₹50 crores to over ₹1000 crores - everyone's stakes grew in value.\",\n        impactOnFounder: \"Having respected stakeholders helped Sugar gain credibility, access better suppliers, enter new markets, and eventually become a market leader. The stakeholders' networks and expertise were as valuable as their money.\",\n        dealOutcome: \"Everyone won: stakeholders got massive returns as their stakes appreciated in value, while Vineeta built a much more valuable company than she could have alone. Good stakeholders add more value than they take.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Choose stakeholders carefully - they're permanent partners, not temporary investors. Look for people whose expertise and networks can help your business grow.\",\n          \"Remember that larger stakes mean more influence - if someone has a 30% stake, they have significant say in your business decisions.\",\n          \"Good stakeholders bring more than money - they provide mentorship, connections, and credibility that pure loans can't offer.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't give stakes to passive investors who only provide money - you want partners who actively help grow the business.\",\n          \"Don't underestimate how much decision-making power you're sharing - large stakeholders can block or force major business changes.\",\n          \"Don't choose stakeholders who don't understand or believe in your industry - they might push for the wrong strategies.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'dilution',\n    term: 'Dilution',\n    category: 'valuation-funding',\n    icon: '💧',\n    businessDefinition: 'The reduction in existing shareholders\\' ownership percentage when new shares are issued to new investors.',\n    simpleExplanation: \"When your slice of the company pie gets smaller because the pie gets bigger - you still own the same number of shares, but they represent a smaller percentage.\",\n    sharkTankExample: \"Right now you own 100%, but after my investment, your ownership will be diluted to 80% while I own 20%.\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'Facebook co-founder Eduardo Saverin\\'s stake was diluted from 34% to 0.03% through multiple funding rounds and disputes.',\n    difficulty: 'intermediate',\n    relatedTerms: ['equity', 'funding-round', 'share-dilution'],\n    metaTitle: 'Dilution - How Ownership Percentage Decreases in Funding',\n    metaDescription: 'Understand equity dilution in startup funding, how it affects founders and early investors, and strategies to minimize impact.',\n    caseStudy: {\n      introductionContext: \"Dilution is like making a cake bigger but not increasing your slice. Imagine you own a ₹10 crore company 100%. When you take ₹2 crores investment for 20% equity, your ownership gets diluted from 100% to 80%, but the company is now worth ₹12 crores, so your 80% is worth more than your original 100%.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Let's look at Mamaearth founders Varun and Ghazal Alagh. They started with 100% ownership. When they first raised funding, they gave 15% equity to investors, diluting their ownership to 85%. Then in Series A, they gave another 20%, diluting them further to 68%. In Series B, another 15% dilution brought them to 58% ownership.\",\n        startupDetails: \"Mamaearth needed money for marketing, inventory, and team building. Each funding round meant the founders owned a smaller percentage, but each round also helped grow the company's total value dramatically.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Here's the Mamaearth dilution math: Round 1 - 100% to 85% (₹5 crores valuation). Round 2 - 85% to 68% (₹50 crores valuation). Round 3 - 68% to 58% (₹500 crores valuation). Their ownership percentage kept shrinking, but the value kept growing massively.\",\n        founderPerspective: \"The Alaghfounders thought: 'Yes, we're going from 100% to 58% ownership, but 58% of a ₹500 crore company (₹290 crores) is way better than 100% of a ₹5 crore company. The dilution is worth it for the growth.'\",\n        sharkPerspective: \"Each investor calculated: 'I'm diluting the founders, but I'm also giving them money and expertise to grow the business much bigger. If the company grows 10x, everyone wins despite the dilution.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Mamaearth grew from a ₹5 crore startup to a ₹5000+ crore public company. Even though the founders were diluted from 100% to about 35% ownership through all the rounds, their 35% stake became worth ₹1750+ crores - 350x more valuable than their original 100%!\",\n        impactOnFounder: \"The founders learned that smart dilution can make you much richer. They chose investors who brought marketing expertise, distribution networks, and growth capital that multiplied the company's value faster than their ownership was diluted.\",\n        dealOutcome: \"Everyone won big: early investors got massive returns, later investors got good returns, and founders became billionaires despite being heavily diluted. The key was growing the total pie much faster than giving away slices.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Calculate the real value, not just the percentage: 50% of a ₹100 crore company is worth more than 100% of a ₹20 crore company.\",\n          \"Accept dilution when investors add more value than they take: Smart investors bring expertise, networks, and credibility that accelerate growth beyond the dilution cost.\",\n          \"Track your dilution across multiple rounds: If you're at 80% after Round 1, you might be at 50% after Round 2 and 30% after Round 3. Plan accordingly.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't give away equity without getting proportional value: If you dilute 30% but only get ₹1 crore and no expertise, you might be better off taking a loan.\",\n          \"Don't get diluted below motivation levels: If you own less than 15-20%, you might lose control and motivation to work hard for the company.\",\n          \"Don't ignore compound dilution: Small dilution in each round adds up. 10% dilution per round for 5 rounds means you're left with only 59% ownership.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'cap-table',\n    term: 'Cap Table',\n    category: 'valuation-funding',\n    icon: '📊',\n    businessDefinition: 'A detailed breakdown showing who owns what percentage of a company, including founders, employees, and investors.',\n    simpleExplanation: \"A spreadsheet that shows who owns how much of the company - like a class roster showing each student's share of a group project.\",\n    sharkTankExample: \"Show me your cap table - I want to see how ownership is distributed between founders, employees, and any existing investors.\",\n    sharkName: 'Vineeta Singh',\n    realWorldExample: 'WhatsApp\\'s cap table before the Facebook acquisition showed Brian Acton and Jan Koum owned most shares, with Sequoia Capital holding a significant stake.',\n    difficulty: 'intermediate',\n    relatedTerms: ['equity', 'ownership-structure', 'shareholder-list'],\n    metaTitle: 'Cap Table - Company Ownership Structure and Distribution',\n    metaDescription: 'Learn about capitalization tables, how to create and manage them, and why they\\'re crucial for startup funding.',\n    caseStudy: {\n      introductionContext: \"A cap table is like a detailed list of everyone who owns pieces of your company. Think of it as a record book showing who owns what percentage - founders, employees, investors, everyone. It's like a property deed that shows all the owners of a building and how much each person owns.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Let's look at Lenskart before Peyush Bansal became a shark. Their cap table showed: Founders (Peyush + team) owned 60%, employees held 8% through ESOPs, early angel investors had 15%, and VCs owned 17%. When new investors came in, they could see exactly who owned what and how much space was left for new investment.\",\n        startupDetails: \"Lenskart needed multiple funding rounds to grow across India. Each time they raised money, their cap table had to be updated to show the new ownership structure after each investment round.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Before any funding round, Lenskart's lawyers would create a detailed cap table showing current ownership. When a new investor wanted 20% equity, they could see exactly how this would affect everyone: founders would go from 60% to 48%, employees from 8% to 6.4%, and so on. Everyone could see the math clearly.\",\n        founderPerspective: \"Peyush always kept the cap table updated because it helped him make quick decisions. When investors offered deals, he could immediately calculate: 'If I give 20% to this investor, I'll still own 48%. That's enough to stay motivated and in control.'\",\n        sharkPerspective: \"New investors loved clean cap tables because they could see: 1) Who else owns the company, 2) Whether founders still had majority control, 3) How much of the company was already promised to employees, 4) Whether there were any complicated ownership structures that could cause problems later.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Lenskart's well-organized cap table made fundraising much easier. Investors could quickly understand the ownership structure, make offers, and close deals faster. The clear documentation prevented disputes and legal issues as the company grew.\",\n        impactOnFounder: \"Having a clean cap table saved Peyush months of legal work during funding rounds. Investors trusted the company more because they could see transparent, organized ownership records. It also helped him plan future rounds and employee stock options more strategically.\",\n        dealOutcome: \"Clean cap table management helped Lenskart raise over ₹2000 crores across multiple rounds smoothly. Each round closed faster because the ownership structure was clear and well-documented, building investor confidence.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Update your cap table after every equity transaction - new investor, employee stock options, founder vesting - so it's always current.\",\n          \"Use simple spreadsheets or cap table software to track: Name, Ownership %, Number of shares, Type of shares (common vs preferred).\",\n          \"Share your cap table with co-founders regularly so everyone knows the current ownership structure and can plan accordingly.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't let your cap table get messy or outdated - investors will think you're disorganized and may not invest.\",\n          \"Don't hide your cap table from co-founders or key employees - transparency builds trust and prevents disputes.\",\n          \"Don't make your cap table too complicated with multiple share classes unless absolutely necessary - simple is better for early-stage startups.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'ask',\n    term: 'Ask',\n    category: 'valuation-funding',\n    icon: '🙋',\n    businessDefinition: 'The specific amount of money and equity percentage that entrepreneurs request from investors during fundraising.',\n    simpleExplanation: \"What you're asking for from investors - the amount of money you want and how much ownership you're willing to give up for it.\",\n    sharkTankExample: \"My ask is ₹1 crore for 10% equity in my company - that's what I need to scale and grow the business.\",\n    sharkName: 'Ashneer Grover',\n    realWorldExample: 'Most Shark Tank India entrepreneurs make their ask in the first 30 seconds: amount needed, equity offered, and company valuation.',\n    difficulty: 'beginner',\n    relatedTerms: ['funding-request', 'investment-proposal', 'valuation'],\n    metaTitle: 'Ask - How to Request Investment from Investors',\n    metaDescription: 'Learn how to structure your funding ask, determine the right amount and equity, and present effectively to investors.',\n    caseStudy: {\n      introductionContext: \"Your ask is like going to a shop and saying 'I want to buy this shirt for ₹500.' It's your opening offer that starts the negotiation. In startups, your ask tells investors exactly how much money you need and how much of your company you're willing to sell for that money.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Let's look at Skippi Ice Pops founders Ravi and Shradha. They walked into the tank and said: 'We are asking for ₹45 lakhs for 5% equity in Skippi Ice Pops.' This one sentence told the sharks: 1) They need ₹45 lakhs, 2) They're willing to sell 5% ownership, 3) They value their company at ₹9 crores (₹45 lakhs ÷ 5%).\",\n        startupDetails: \"Skippi was making healthy ice pops and needed money to buy equipment, hire people, and expand to more cities. They calculated they needed exactly ₹45 lakhs for their growth plan.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"The moment Skippi made their ask, the sharks started doing math: 'They want ₹45 lakhs for 5%, so they think they're worth ₹9 crores. Let me check - they're making ₹50 lakhs revenue annually, so that's 18x revenue multiple. Is a ice pop company really worth 18x revenue?' The ask immediately set the negotiation framework.\",\n        founderPerspective: \"The founders thought carefully about their ask: 'We calculated we need ₹45 lakhs exactly for our expansion plan. We don't want to give more than 5% equity at this stage. So our ask is ₹45 lakhs for 5%. If sharks think we're worth less, they'll counter-offer and we can negotiate.'\",\n        sharkPerspective: \"The sharks evaluated the ask by thinking: 'Is ₹45 lakhs the right amount for their growth plan? Is 5% equity enough for the risk we're taking? Is ₹9 crores valuation justified by their revenue and growth potential? Their ask seems reasonable, but let's negotiate for better terms.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Skippi's well-prepared ask worked perfectly. Multiple sharks got interested because the numbers made sense - ₹45 lakhs for clear growth plans, 5% equity that wasn't too greedy, and ₹9 crores valuation that was justified by their revenue growth. The clear ask started a bidding war between sharks.\",\n        impactOnFounder: \"Having a specific, well-researched ask made the founders look professional and prepared. They didn't seem desperate or uncertain. The sharks took them seriously because they had clearly thought through their funding needs and valuation.\",\n        dealOutcome: \"The strong ask led to multiple shark offers. Instead of the original ₹45 lakhs for 5%, they got better terms with more money and valuable strategic guidance. A good ask creates a competitive investment environment.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Calculate exactly how much money you need for specific goals: 'We need ₹50 lakhs for inventory (₹20L), marketing (₹15L), hiring (₹10L), and equipment (₹5L).' Be specific, not vague.\",\n          \"Research what similar companies are worth: If similar ice cream brands sell for 10x revenue and you make ₹1 crore annually, asking for ₹10 crore valuation makes sense.\",\n          \"Practice your ask until it's smooth: 'We're seeking ₹X for Y% equity to achieve Z goals.' Make it sound confident, not uncertain.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't ask for a random amount - if you say 'We need ₹75 lakhs' but can't explain exactly what you'll spend it on, investors will think you don't understand your business.\",\n          \"Don't value your company too high compared to similar businesses - asking for 50x revenue when similar companies get 5x makes you look unrealistic.\",\n          \"Don't change your ask during the pitch - if you asked for ₹50 lakhs for 10% but then say 'Actually, ₹30 lakhs is fine,' you look desperate and unprepared.\"\n        ]\n      }\n    }\n  },\n\n  // Pitch & Strategy (8 terms)\n  {\n    id: 'elevator-pitch',\n    term: 'Elevator Pitch',\n    category: 'pitch-strategy',\n    icon: '🛗',\n    businessDefinition: 'A brief, compelling summary of a business idea or concept that can be delivered in the time it takes to ride an elevator.',\n    simpleExplanation: \"Explaining your business idea in 30-60 seconds - short enough to tell someone during a brief elevator ride but convincing enough to get their interest.\",\n    sharkTankExample: \"You have 2 minutes to pitch - give me your elevator pitch. What does your company do and why should I invest?\",\n    sharkName: 'Anupam Mittal',\n    realWorldExample: 'Airbnb\\'s elevator pitch: \"We let people rent out their spare rooms to travelers, making travel affordable and helping hosts earn money.\"',\n    difficulty: 'beginner',\n    relatedTerms: ['value-proposition', 'pitch-deck', 'business-summary'],\n    metaTitle: 'Elevator Pitch - Perfect Your 30-Second Business Summary',\n    metaDescription: 'Learn how to create a compelling elevator pitch for your startup, with examples and tips for impressing investors quickly.',\n    caseStudy: {\n      introductionContext: \"An elevator pitch is like introducing yourself at a party - you have 30 seconds to make someone interested enough to keep talking. For businesses, it's your chance to explain what you do, why it matters, and why someone should invest, all before they lose attention.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Look at Annie, the founders of Thinkerbell Labs who made Braille learning devices. They walked in and said: 'Every year, 12 million blind children in India drop out of school because they can't learn Braille easily. We created Annie - a device that teaches Braille through audio and touch in just 2 hours instead of 6 months. We're seeking ₹1 crore for 10% to help 1 million blind children learn.'\",\n        startupDetails: \"In just 30 seconds, they told the sharks exactly what the problem was (blind kids dropping out), what their solution did (learns Braille in 2 hours), and what they needed (₹1 crore for 10%). The sharks were hooked immediately.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"The founders followed a perfect elevator pitch formula: Big Problem + Simple Solution + Impressive Results + Clear Ask. They didn't talk about technology or features first - they talked about blind children dropping out of school, which every shark could understand and feel emotional about.\",\n        founderPerspective: \"The founders thought: 'We only have 30 seconds to grab attention before sharks start checking their phones. Let's lead with the most emotional, important thing - kids dropping out of school. Once they care about that, they'll want to hear our solution.'\",\n        sharkPerspective: \"The sharks thought: 'Wait, 12 million blind kids drop out? That's a huge problem I never thought about. And their device teaches Braille in 2 hours instead of 6 months? That sounds incredible. I want to know more about this business.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Annie's perfect elevator pitch got all 5 sharks competing to invest. The 30-second opener was so powerful that sharks started asking detailed questions and making offers before the founders even finished their full presentation. The emotional hook worked perfectly.\",\n        impactOnFounder: \"The strong elevator pitch meant the founders spent the entire pitch answering questions and negotiating offers instead of trying to convince sharks to pay attention. They controlled the conversation from the first 30 seconds.\",\n        dealOutcome: \"Multiple sharks made offers, and the founders got ₹1 crore for 10% equity plus ongoing mentorship. The perfect elevator pitch created a bidding war among investors.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Follow the Annie formula: 'X people suffer from Y problem. We solve it with Z solution that gives ABC results. We need ₹D for E% to help F more people.' Practice until you can say it smoothly in 30 seconds.\",\n          \"Start with emotion, not features: Talk about the human impact first - 'kids dropping out of school' hits harder than 'Braille learning device with audio feedback.'\",\n          \"End with specific numbers: Don't say 'seeking investment' - say 'seeking ₹50 lakhs for 15% equity.' Specific asks sound more professional and prepared.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't lead with your solution - lead with the problem that makes people go 'wow, that's terrible, how do we fix it?'\",\n          \"Don't use technical words like 'tactile feedback system' when you can say 'device that teaches through touch and sound.'\",\n          \"Don't make your pitch longer than 30 seconds - if you can't grab attention in half a minute, you won't get the chance to explain the details.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'pitch-deck',\n    term: 'Pitch Deck',\n    category: 'pitch-strategy',\n    icon: '📽️',\n    businessDefinition: 'A presentation used to provide investors with a quick overview of your business plan during fundraising.',\n    simpleExplanation: \"A slide presentation that tells your business story - covering problem, solution, market, team, and financials to convince investors to fund you.\",\n    sharkTankExample: \"Your pitch deck should cover the problem you're solving, your solution, market size, competition, and financial projections.\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'Airbnb\\'s original pitch deck from 2009 is famous for its simplicity and clear storytelling, helping them raise their first funding.',\n    difficulty: 'intermediate',\n    relatedTerms: ['investor-presentation', 'business-plan', 'funding-proposal'],\n    metaTitle: 'Pitch Deck Guide - Create Winning Investor Presentations',\n    metaDescription: 'Learn how to create an effective pitch deck for investors, with slide-by-slide breakdown and successful examples.',\n    caseStudy: {\n      introductionContext: \"A pitch deck is like a movie trailer for your business - it tells the whole story in 10-12 slides. It shows the problem you're solving, your solution, how much money you're making, and how big this could become. It's your business story in pictures and numbers.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Look at Get-A-Whey founders who pitched protein ice cream. They came perfectly prepared with a pitch deck structure even though they were on TV. Slide 1: 'Indians consume 70% less protein than needed' (problem). Slide 2: 'Protein ice cream that tastes amazing' (solution). Slide 3: '₹2 crores revenue in 18 months' (traction). Slide 4: 'Each tub costs ₹40, sells for ₹120, 65% margin' (unit economics). Slide 5: '₹500 crore ice cream market in India' (market size). Slide 6: 'Seeking ₹75 lakhs for 15%' (ask).\",\n        startupDetails: \"They basically presented a perfect pitch deck verbally - starting with the problem, showing their solution, proving it worked with sales numbers, showing how profitable each sale was, explaining how big the market is, and ending with exactly what they wanted from sharks.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"The founders structured their entire Shark Tank pitch like a pitch deck. Instead of rambling, they methodically covered each 'slide': problem → solution → sales proof → profit margins → market opportunity → investment ask. Each section answered one key investor question.\",\n        founderPerspective: \"The founders thought: 'Sharks want to know: Is this a real problem? Does our solution work? Are we making money? Can this be huge? We'll answer each question in order like slides in a presentation, so they can follow our logic easily.'\",\n        sharkPerspective: \"The sharks thought: 'This is easy to follow - they've shown us the problem exists, their solution works (₹2 crores revenue proves it), margins are healthy (65%), market is big (₹500 crores). Everything makes sense. I can see how this could be a great investment.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"The structured pitch deck approach made it super easy for sharks to understand and evaluate the business. No confusion, no missing pieces - just a clear story from problem to ask. Multiple sharks made offers because they could see the complete picture clearly.\",\n        impactOnFounder: \"Having a pitch deck structure meant the founders never got flustered or forgot important points. They covered everything investors need to know in logical order, making them look professional and prepared.\",\n        dealOutcome: \"The clear, organized presentation led to multiple offers and a successful deal at ₹75 lakhs for 15% equity. The structured approach impressed sharks with the founders' preparation and business thinking.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Follow the Get-A-Whey sequence: Problem (why this matters) → Solution (what you built) → Traction (proof it works) → Unit Economics (how you make money per customer) → Market Size (how big this can become) → Ask (what you need). Practice until you can present this flow smoothly.\",\n          \"Always include real numbers: Don't say 'growing fast' - say '₹50 lakhs revenue last year, ₹2 crores this year.' Numbers prove your story is real, not just hopes.\",\n          \"Prepare backup slides for detailed questions: When sharks ask 'What's your customer acquisition cost?' or 'How do you plan to scale?' have those answers ready with supporting data.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't put too much information on each slide - one big idea per slide. If you can't explain a slide in 30 seconds, it's too complicated.\",\n          \"Don't jump around between topics - follow the logical flow so investors can build understanding step by step.\",\n          \"Don't present without proof points - every claim needs a number, graph, or example to back it up. 'Trust me' doesn't work with investors.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'value-proposition',\n    term: 'Value Proposition',\n    category: 'pitch-strategy',\n    icon: '💎',\n    businessDefinition: 'A clear statement that explains how your product solves customer problems, delivers specific benefits, and why it\\'s better than alternatives.',\n    simpleExplanation: \"Why customers should choose you over competitors - the unique benefit or value you provide that others don't offer.\",\n    sharkTankExample: \"What's your value proposition? Why would customers pick your product over the 50 other options in the market?\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'Uber\\'s value proposition: \"Get a ride anywhere, anytime with a tap\" - convenient, fast, and reliable transportation.',\n    difficulty: 'beginner',\n    relatedTerms: ['unique-selling-point', 'competitive-advantage', 'customer-benefit'],\n    metaTitle: 'Value Proposition - Why Customers Choose Your Product',\n    metaDescription: 'Create a compelling value proposition for your startup, understand what makes customers buy, and communicate your unique benefits.',\n    caseStudy: {\n      introductionContext: \"A value proposition is the simple answer to 'Why should I choose you instead of the 100 other options?' It's the one clear benefit that makes customers say 'Yes, I need this!' instead of walking away to your competitor.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Look at Skippi Ice Pops founders. They could have said 'We make ice cream.' Instead, they said: 'Remember the kulfi and ice golas from your childhood? We bring back that nostalgia with natural, healthy ice pops - no artificial colors, no preservatives, just pure childhood memories you can give to your kids safely.' That's a powerful value proposition.\",\n        startupDetails: \"Skippi didn't just sell ice pops. They sold 'safe nostalgia' - the emotional memory of childhood treats combined with the peace of mind that comes from natural ingredients. Parents could relive their childhood while feeling good about what they're giving their children.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"The founders combined three benefits into one clear value proposition: 1) Nostalgia ('Remember childhood ice treats?'), 2) Health ('Natural ingredients, no chemicals'), 3) Family bonding ('Share safe treats with your kids'). This was much stronger than just saying 'healthy ice cream.'\",\n        founderPerspective: \"The founders thought: 'Everyone makes ice cream. But we're the only ones who help parents share safe childhood memories with their kids. That emotion + safety combination is something no competitor offers. Parents will pay premium for that feeling.'\",\n        sharkPerspective: \"Sharks thought: 'This isn't just another ice cream company. They're selling childhood memories + parental peace of mind. That's emotional and rational appeal combined. Parents will choose this over cheaper alternatives because it makes them feel like good parents.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"The clear value proposition created an emotional connection with sharks that went beyond just business numbers. All sharks could relate to childhood memories and wanting to give children healthy treats. This led to multiple offers and an all-sharks deal worth crores.\",\n        impactOnFounder: \"Having a clear value proposition meant customers immediately understood why they should buy Skippi instead of Amul or Vadilal. Marketing became easier because they had a clear message that differentiated them from competitors.\",\n        dealOutcome: \"The compelling value proposition helped Skippi get not just funding but also nationwide distribution partnerships and massive media attention. Clear differentiation led to clear success.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Create the Skippi formula: 'We help [target customer] [emotional benefit] + [rational benefit] that [competitors] don't offer.' Example: 'We help busy parents relive childhood memories + give their kids healthy treats that mass-market brands don't offer.'\",\n          \"Test your value proposition with 10 customers: If they can't repeat back why they'd choose you over competitors in one sentence, it's not clear enough. Keep simplifying until a 12-year-old could understand it.\",\n          \"Combine emotion + logic: Skippi combined nostalgia (emotion) with health (logic). Customers buy with emotion and justify with logic, so you need both.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't list features instead of benefits - 'natural ingredients' is a feature, 'safe for your kids' is a benefit that makes parents feel good about their choice.\",\n          \"Don't be vague like 'better quality' - be specific like 'no artificial colors that cause hyperactivity in children.' Specific benefits are more believable.\",\n          \"Don't ignore the emotional side - customers don't buy ice cream just for nutrition, they buy it to make their kids happy and feel like good parents.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'competitive-advantage',\n    term: 'Competitive Advantage',\n    category: 'pitch-strategy',\n    icon: '🏆',\n    businessDefinition: 'A unique strength or attribute that allows a company to outperform its competitors and maintain market position.',\n    simpleExplanation: \"What makes you special and hard to copy - like having the secret recipe for Coca-Cola that nobody else can replicate.\",\n    sharkTankExample: \"What's your competitive advantage? Anyone can copy your idea - what makes your business defensible?\",\n    sharkName: 'Vineeta Singh',\n    realWorldExample: 'Amazon\\'s competitive advantage includes massive scale, logistics network, and data insights that are extremely difficult to replicate.',\n    difficulty: 'intermediate',\n    relatedTerms: ['moat', 'differentiation', 'barrier-to-entry'],\n    metaTitle: 'Competitive Advantage - Build Unbeatable Business Strengths',\n    metaDescription: 'Understand competitive advantage, how to identify and build yours, and why it\\'s crucial for long-term business success.',\n    caseStudy: {\n      introductionContext: \"Competitive advantage is like having a secret superpower in business - something you can do that competitors can't easily copy or match. It's not just being better, it's being better in a way that's hard for others to replicate.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Look at Sugar Cosmetics founder Vineeta Singh (now a shark herself!). When she started, she had several competitive advantages: 1) She understood Indian skin tones better than international brands, 2) She built direct relationships with Indian women through social media when others were only in stores, 3) She created products specifically for Indian climate and preferences. This wasn't just 'better makeup' - it was advantages that Maybelline and L'Oreal couldn't easily copy.\",\n        startupDetails: \"Sugar Cosmetics had three key advantages: deep market knowledge (Indian skin tones), superior distribution strategy (direct-to-consumer when others were retail-only), and climate-specific formulation (makeup that works in Indian heat and humidity).\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Vineeta didn't just say 'we make better makeup.' She showed specific advantages: 'We have 40 shades for Indian skin tones while international brands have 12. We sell direct-to-consumer with 48-hour delivery while they rely on distributors. Our lipsticks don't melt in Mumbai heat while theirs do.' Each advantage was hard to copy.\",\n        founderPerspective: \"Vineeta thought: 'International brands don't understand Indian customers like I do. I'll use that knowledge advantage, plus build direct relationships with customers, plus create products that actually work in our climate. By the time they figure this out, I'll have built a loyal customer base.'\",\n        sharkPerspective: \"Investors thought: 'Vineeta has built real competitive moats. International brands can't easily replicate her deep market knowledge, changing their entire distribution strategy would take years, and reformulating products for Indian climate requires huge investment. She's defensible.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Sugar Cosmetics' competitive advantages helped them compete against brands with 100x more money. While L'Oreal and Maybelline struggled to understand Indian customers, Sugar became the #1 Indian cosmetics brand. The advantages created a protective barrier that allowed them to grow without being crushed by big competitors.\",\n        impactOnFounder: \"Strong competitive advantages meant Vineeta could charge premium prices, build customer loyalty, and attract investors who saw a defensible business. She eventually became so successful that she became a shark herself, investing in other companies.\",\n        dealOutcome: \"The competitive advantages made Sugar Cosmetics attractive to investors and eventually led to major funding rounds. Today it's valued at over ₹1000 crores, proving that competitive advantages create real value.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Find the Sugar formula: What do you understand about your customers that big competitors don't? What relationships do you have that they can't easily build? What can you do that would take them years to copy?\",\n          \"Build three types of advantages: Knowledge (you understand the customer better), Access (you can reach customers they can't), or Capability (you can do something they can't). Sugar had all three.\",\n          \"Test your advantages: Ask yourself 'If Google or Amazon wanted to copy this, how long would it take them?' If the answer is 'one month,' it's not a real competitive advantage.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't confuse being first with having an advantage - being the first food delivery app doesn't stop others from starting their own. Real advantages are hard to copy.\",\n          \"Don't claim 'better customer service' as your advantage - anyone can hire customer service people. Focus on advantages that require time, money, or special knowledge to replicate.\",\n          \"Don't build advantages that customers don't care about - having 1000 features means nothing if customers only use 5. Focus on advantages that customers actually value and are willing to pay for.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'moat',\n    term: 'Economic Moat',\n    category: 'pitch-strategy',\n    icon: '🏰',\n    businessDefinition: 'A sustainable competitive advantage that protects a company from competitors, like a moat protecting a castle.',\n    simpleExplanation: \"Strong defenses around your business that keep competitors out - like a castle moat, but for companies to protect market share and profits.\",\n    sharkTankExample: \"Do you have a moat? What prevents competitors from easily copying your business and taking your customers?\",\n    sharkName: 'Ashneer Grover',\n    realWorldExample: 'Google\\'s search algorithm and data advantage create a strong moat - competitors can\\'t easily replicate decades of search data.',\n    difficulty: 'advanced',\n    relatedTerms: ['competitive-advantage', 'network-effect', 'switching-cost'],\n    metaTitle: 'Economic Moat - Protect Your Business from Competition',\n    metaDescription: 'Learn about economic moats, different types of sustainable competitive advantages, and how to build protective barriers around your business.',\n    caseStudy: {\n      introductionContext: \"An economic moat is like a fortress wall around your business castle - it's what protects you from competitors trying to steal your customers and profits. The bigger and stronger your moat, the safer your business is from attack.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Think about Lenskart founder Peyush Bansal (now a shark). When he started, he built multiple economic moats: 1) He created India's largest eyewear manufacturing setup (cost advantage), 2) He built an exclusive supply chain with Italian frame makers (supplier moat), 3) He developed proprietary 3D try-on technology (tech moat), 4) He created a network of 1000+ stores when competitors had 10-20 (scale moat). Each moat made it harder for competitors to copy his success.\",\n        startupDetails: \"Lenskart didn't just sell glasses - they built an entire ecosystem of manufacturing, technology, supply chain, and retail that competitors couldn't easily replicate. Each piece of the business protected the other pieces.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Peyush built four types of moats at once: Manufacturing moats (own factories = lower costs), Technology moats (3D try-on = better customer experience), Supply moats (exclusive Italian partnerships = unique products), and Scale moats (1000+ stores = convenience for customers). Each moat reinforced the others.\",\n        founderPerspective: \"Peyush thought: 'If I just sell glasses online, anyone can copy me. But if I control manufacturing, have exclusive suppliers, own the best technology, and have stores everywhere, competitors need to build all four advantages to compete. That will take them 5-10 years and billions of rupees.'\",\n        sharkPerspective: \"Investors thought: 'Lenskart has multiple moats protecting their business. New competitors can't just copy one thing - they'd need to build manufacturing, technology, exclusive suppliers AND 1000 stores. That's almost impossible. This business is very defensible.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Lenskart's economic moats allowed them to dominate the Indian eyewear market despite international giants like Luxottica trying to enter. The moats protected their market share and profits, allowing them to grow to a ₹24,000 crore valuation while competitors struggled.\",\n        impactOnFounder: \"Strong economic moats meant Peyush could charge premium prices, maintain high profit margins, and attract investors who paid high valuations because they knew the business was protected from competition.\",\n        dealOutcome: \"The multiple economic moats made Lenskart one of India's most valuable startups and turned Peyush into a successful investor himself. The moats created lasting competitive protection and massive wealth.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Build the Lenskart formula: Don't rely on one moat. Create 3-4 different types of protection - cost advantages, exclusive suppliers, proprietary technology, and scale benefits. Multiple moats are much stronger than one.\",\n          \"Document your moats with proof: If you claim patents, show patent numbers. If you claim exclusive suppliers, show contracts. If you claim cost advantages, show your cost structure vs competitors. Moats need evidence.\",\n          \"Invest in maintaining your moats: Lenskart spends crores on R&D, supplier relationships, and technology updates. Moats aren't permanent - you must continuously strengthen them or competitors will find ways around them.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't confuse temporary advantages with real moats - being first to market isn't a moat if others can easily follow. Real moats require significant time, money, or special knowledge to replicate.\",\n          \"Don't claim network effects as a moat unless you actually have them - just having many users doesn't create network effects. Each additional user must make the service more valuable for existing users.\",\n          \"Don't ignore moat maintenance - many startups build moats but then stop investing in them. Competitors will eventually find ways around weak or outdated moats.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'total-addressable-market',\n    term: 'Total Addressable Market (TAM)',\n    category: 'pitch-strategy',\n    icon: '🌍',\n    businessDefinition: 'The total revenue opportunity available if a product or service achieved 100% market share in its target market.',\n    simpleExplanation: \"The total size of the market pie - how much money everyone in your target market spends on solutions like yours annually.\",\n    sharkTankExample: \"Your TAM is ₹1000 crores, but realistically what percentage can you capture? Even 1% would be ₹10 crores revenue.\",\n    sharkName: 'Ghazal Alagh',\n    realWorldExample: 'The TAM for food delivery in India is estimated at $15 billion, which attracted companies like Zomato and Swiggy.',\n    difficulty: 'intermediate',\n    relatedTerms: ['serviceable-available-market', 'market-sizing', 'market-opportunity'],\n    metaTitle: 'Total Addressable Market (TAM) - Calculate Your Market Size',\n    metaDescription: 'Learn how to calculate TAM, estimate market opportunity for investors, and understand the difference between TAM, SAM, and SOM.',\n    caseStudy: {\n      introductionContext: \"TAM is like measuring how big the pie is before deciding if it's worth opening a bakery. It's the total money that everyone in your target market spends on solutions like yours every year. If the pie is tiny, even capturing the whole thing won't make you rich.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Look at Mamaearth founders when they pitched their baby care products. They said: 'The Indian baby care market is ₹5,000 crores annually (TAM). The organic/natural segment is ₹500 crores (SAM - Serviceable Addressable Market). Through online channels, we can realistically reach ₹50 crores of that (SOM - Serviceable Obtainable Market). Even if we capture just 10% of our SOM, that's ₹5 crores revenue.' This clear TAM breakdown impressed the sharks.\",\n        startupDetails: \"Mamaearth didn't just say 'baby care is big.' They showed the total market size (₹5,000 crores), which part they could serve (₹500 crores natural products), and what they could realistically capture (₹50 crores through their channels). This showed they understood their market opportunity.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Mamaearth used TAM to prove the market was big enough to support a billion-dollar company: 'If total baby care is ₹5,000 crores and growing 15% annually, we can build a ₹1,000+ crore business by capturing just 20% of the natural segment.' The big TAM justified their growth plans and high valuation ask.\",\n        founderPerspective: \"The founders thought: 'Sharks need to see this isn't a small niche market. Baby care is ₹5,000 crores! Even if natural products are only 10% of that today, trends show parents want safer products. We can ride this wave to build something massive.'\",\n        sharkPerspective: \"Sharks thought: 'The baby care market is indeed ₹5,000 crores and growing. Natural/organic is a fast-growing segment within that. If Mamaearth can capture even 1% of the total TAM, that's ₹50 crores revenue. The market size supports their ambitious plans.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"The compelling TAM analysis helped Mamaearth raise multiple funding rounds and eventually go public with a ₹8,000+ crore valuation. Proving the market was large enough to support a big company gave investors confidence to invest large amounts.\",\n        impactOnFounder: \"Clear TAM presentation meant Mamaearth could raise larger funding rounds at higher valuations because investors saw the potential for massive scale. The big addressable market justified building an ambitious company.\",\n        dealOutcome: \"Well-researched TAM contributed to Mamaearth becoming one of India's most successful D2C brands and going public. Investors bought into the vision because the market opportunity was clearly large enough.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Use the Mamaearth formula: TAM (total market) → SAM (segment you serve) → SOM (what you can realistically get). Example: 'Food delivery is ₹50,000 crores (TAM), healthy food delivery is ₹5,000 crores (SAM), we can capture ₹500 crores through our channels (SOM).'\",\n          \"Show your math with credible sources: Don't say 'market research shows...' Say 'According to Euromonitor, Indians spend ₹5,000 crores on baby care products annually, growing 15% per year.' Specific sources make your TAM believable.\",\n          \"Connect TAM to your business model: If your TAM is ₹1,000 crores but you charge ₹100 per customer, explain how you'll reach 1 crore customers. Make the path from market size to your revenue clear.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't use crazy big TAM numbers to impress - saying 'the food market is ₹10 lakh crores' doesn't help if you're selling protein bars. Focus on your specific addressable segment.\",\n          \"Don't confuse TAM with SOM - TAM is the total market, SOM is what you can realistically capture with your specific business model and resources. Be honest about your SOM.\",\n          \"Don't ignore competition in your TAM - if 10 companies are already fighting for the same ₹1,000 crore market, explain why there's still room for you and how you'll compete.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'go-to-market-strategy',\n    term: 'Go-to-Market Strategy (GTM)',\n    category: 'pitch-strategy',\n    icon: '🚀',\n    businessDefinition: 'A comprehensive plan outlining how a company will reach and serve customers and achieve competitive advantage.',\n    simpleExplanation: \"Your master plan for launching and selling your product - how you'll find customers, reach them, convince them to buy, and deliver value.\",\n    sharkTankExample: \"What's your go-to-market strategy? How will you acquire customers and what channels will you use to reach them?\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'Jio\\'s GTM strategy included free services for months, massive advertising, and retail presence to quickly capture market share.',\n    difficulty: 'intermediate',\n    relatedTerms: ['customer-acquisition', 'marketing-channels', 'sales-strategy'],\n    metaTitle: 'Go-to-Market Strategy - Launch and Scale Your Product',\n    metaDescription: 'Develop an effective go-to-market strategy for your startup, covering customer acquisition, pricing, and distribution channels.',\n    caseStudy: {\n      introductionContext: \"Go-to-Market Strategy is your battle plan for turning your great product into actual sales and customers. It's like planning how to launch a new restaurant - you need to decide on location, menu pricing, advertising, delivery options, and how to get your first 100 customers through the door.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Look at Mamaearth's go-to-market strategy. They didn't just make baby products and hope people would buy them. They had a detailed plan: 1) Start with Amazon and Flipkart online (low cost to test), 2) Build social media following with parenting content (free customer acquisition), 3) Expand to modern retail stores like Big Bazaar (wider reach), 4) Launch their own website (higher margins), 5) Enter pharmacies and baby stores (trust building). Each step was planned with specific targets and timelines.\",\n        startupDetails: \"Mamaearth's GTM strategy was brilliant because they started where customers were already shopping (Amazon), built trust through content, then gradually expanded to higher-margin channels. They didn't try to do everything at once.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Mamaearth showed sharks their step-by-step customer acquisition plan: 'Month 1-6: Amazon FBA, target ₹10 lakhs revenue. Month 7-12: Add Flipkart and Myntra, target ₹50 lakhs. Year 2: Enter 500 retail stores, target ₹5 crores. Year 3: Launch own website and pharmacy channel.' Each step had clear cost and revenue targets.\",\n        founderPerspective: \"The founders thought: 'We can't afford TV ads like Johnson & Johnson, but we can start with online marketplaces where customers are already searching for baby products. Once we prove demand, we'll expand to stores. This gives us predictable growth and manageable costs.'\",\n        sharkPerspective: \"Sharks thought: 'This GTM makes sense. They're starting where customers already are, proving demand cheaply, then expanding systematically. The step-by-step approach reduces risk and each stage funds the next. This is a smart way to compete against big brands with limited money.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Mamaearth's methodical GTM strategy allowed them to grow from ₹1 crore to ₹500+ crores revenue in 5 years. Starting with online marketplaces proved demand, content marketing built brand trust, and systematic expansion to retail gave them nationwide presence. The planned approach impressed investors and led to successful IPO.\",\n        impactOnFounder: \"The clear GTM strategy meant the founders could focus execution and allocate resources efficiently. Instead of spreading money across 10 different channels, they mastered one channel at a time, which reduced waste and improved results.\",\n        dealOutcome: \"The systematic GTM strategy helped Mamaearth raise multiple funding rounds and eventually go public. Investors saw a replicable, scalable approach to customer acquisition that didn't rely on luck or hoping customers would find them.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Use the Mamaearth playbook: Start with 1-2 channels where your customers already are, prove it works, then expand systematically. Don't try to be everywhere at once - master one channel before adding the next.\",\n          \"Calculate your Customer Acquisition Cost (CAC) for each channel: 'Amazon ads cost ₹200 per customer, social media content costs ₹50 per customer, retail placement costs ₹400 per customer.' Know your numbers so you can focus on the most efficient channels first.\",\n          \"Create a 12-month timeline with specific targets: 'Q1: Launch on Amazon, target 1000 customers. Q2: Add Flipkart, target 5000 total customers. Q3: Enter 50 stores, target 10000 customers.' Specific goals help you track what's working.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't launch everywhere at once - trying to be on Amazon, Flipkart, retail stores, and your own website simultaneously will spread your resources too thin and make it hard to succeed anywhere.\",\n          \"Don't assume channels will work without testing - just because Amazon worked doesn't mean Facebook ads will. Test small, measure results, then scale what works.\",\n          \"Don't ignore your customer acquisition cost - if it costs you ₹500 to acquire a customer who only buys ₹300 worth of products, your GTM strategy will kill your business, not grow it.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'business-model-canvas',\n    term: 'Business Model Canvas',\n    category: 'pitch-strategy',\n    icon: '🎨',\n    businessDefinition: 'A strategic management tool used to develop new business models and document existing ones through nine key building blocks.',\n    simpleExplanation: \"A one-page template that maps out your entire business - covering customers, what you offer, how you make money, and key partnerships.\",\n    sharkTankExample: \"Have you mapped out your business model canvas? It helps visualize how all parts of your business work together.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'Many startups use the Business Model Canvas to refine their strategy before pitching to investors or launching products.',\n    difficulty: 'intermediate',\n    relatedTerms: ['lean-canvas', 'business-plan', 'strategic-planning'],\n    metaTitle: 'Business Model Canvas - Map Your Entire Business Strategy',\n    metaDescription: 'Learn how to create a business model canvas for your startup, with examples and step-by-step guide for each building block.',\n    caseStudy: {\n      introductionContext: \"A Business Model Canvas is like a one-page blueprint of your entire business - it shows how all the pieces fit together like a puzzle. Instead of a 50-page business plan that nobody reads, it's one page that shows exactly how you create value, make money, and serve customers.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Look at how Zomato's business model evolved, which founder Deepinder Goyal explained clearly. Initially: Customer Segments (food lovers), Value Proposition (restaurant discovery), Channels (website/app), Customer Relationships (reviews/ratings), Revenue Streams (restaurant advertising), Key Resources (database/technology), Key Activities (content creation), Key Partnerships (restaurants), Cost Structure (technology/marketing). But they pivoted to food delivery, which changed almost every block on their canvas!\",\n        startupDetails: \"Zomato started as a restaurant review site but realized they could make more money by delivering food. This required changing their entire business model canvas - different revenue streams (delivery commission), new key activities (logistics), different partnerships (delivery partners), and higher costs (delivery fleet).\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"When Zomato pivoted, they had to think through how each change affected the entire business model: Adding delivery meant they needed delivery partners (new partnerships), delivery tracking technology (new key activities), higher customer acquisition costs (changed cost structure), but also higher revenue per customer (better revenue streams). Every box on the canvas connected to others.\",\n        founderPerspective: \"Deepinder thought: 'Our restaurant discovery business model has low revenue per customer. If we deliver food, we can charge commission and delivery fees. But that means we need delivery partners, tracking technology, and customer service. Let me map out how this changes our entire business model before we commit.'\",\n        sharkPerspective: \"Investors thought: 'Zomato's pivot from discovery to delivery makes sense when you look at their business model canvas. The change improves revenue streams and customer lifetime value, even though it increases complexity and costs. All the pieces still fit together logically.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Using the Business Model Canvas helped Zomato successfully pivot from a ₹10 crore revenue business to a ₹50,000+ crore public company. The canvas showed them how to change their business systematically rather than making random changes that might not work together.\",\n        impactOnFounder: \"The canvas forced Zomato's team to think through how each business decision affected everything else. This systematic thinking helped them avoid costly mistakes and build a coherent business model that investors could understand and support.\",\n        dealOutcome: \"Clear business model thinking helped Zomato raise multiple funding rounds and go public successfully. Investors could see how all pieces of the business fit together and supported the company's growth.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Create the 9-box Zomato canvas: Customer Segments (who you serve), Value Proposition (why they choose you), Channels (how you reach them), Customer Relationships (how you interact), Revenue Streams (how you make money), Key Resources (what you need), Key Activities (what you do), Key Partnerships (who helps you), Cost Structure (what you spend). Fill each box with specific details.\",\n          \"Test connections between boxes: If you change one box, how does it affect others? When Zomato added delivery, it changed 7 out of 9 boxes. Make sure your changes create a coherent business model.\",\n          \"Use the canvas to explain your business: Instead of a long presentation, show investors your one-page canvas and walk through each box. This makes complex businesses easy to understand in 5 minutes.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't fill boxes with vague statements like 'digital marketing' or 'young professionals' - be specific like 'Facebook ads targeting 25-35 year old working mothers in Delhi who order food online at least twice per week.'\",\n          \"Don't ignore connections between boxes - if your customer acquisition cost is ₹500 per customer but your average revenue per customer is ₹200, your revenue streams and cost structure boxes don't work together.\",\n          \"Don't create a canvas and forget to update it - as your business evolves, update the canvas so it always reflects your current business model, not your original plan.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'deal',\n    term: 'Deal',\n    category: 'pitch-strategy',\n    icon: '🤝',\n    businessDefinition: 'A specific agreement or arrangement between parties, typically involving terms for investment, partnership, or business transaction.',\n    simpleExplanation: \"An agreement between you and an investor - like when a shark says 'I'll give you ₹50 lakhs for 20% of your company' - that's a deal.\",\n    sharkTankExample: \"I'm making you a deal - ₹1 crore for 15% equity. Take it or leave it, this is my final offer.\",\n    sharkName: 'Ashneer Grover',\n    realWorldExample: 'When Ratan Tata invested ₹95 crores in Ola for a minority stake, that was a strategic deal that provided both capital and credibility.',\n    difficulty: 'beginner',\n    relatedTerms: ['offer', 'negotiation', 'equity', 'investment'],\n    metaTitle: 'Deal in Business - Understanding Investment Agreements & Terms',\n    metaDescription: 'Learn what constitutes a business deal, how investment deals work, and key components of successful agreements between entrepreneurs and investors.',\n    caseStudy: {\n      introductionContext: \"A deal is like getting married to your investor - it's not just about the money, it's about the entire relationship. You're agreeing on how much money, what percentage of your company, who makes decisions, and how you'll work together to grow the business.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Look at the founders of Booz Scooters, IIT-Delhi graduates who got a ₹40 lakhs deal for 40% equity from multiple sharks. But the deal wasn't just money - it included Aman Gupta bringing consumer electronics expertise, Vineeta Singh providing retail insights, and Anupam Mittal offering online marketplace connections. The deal structure gave them funding, expertise, networks, and credibility all at once.\",\n        startupDetails: \"Booz Scooters' deal was brilliant because they got more than money. They got 3 sharks with different expertise areas who could help them with manufacturing, marketing, and distribution - things a single investor couldn't provide.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"The Booz Scooters deal showed multiple components: ₹40 lakhs cash (funding), 40% equity (ownership), board seat for lead shark (governance), quarterly reviews (oversight), and specific expertise from each shark (value-add). Each element was negotiated and agreed upon.\",\n        founderPerspective: \"The founders thought: 'We need money, but we also need help. Getting ₹40 lakhs from one shark would be good, but getting expertise from three different sharks who understand manufacturing, retail, and online sales is even better. This deal gives us everything we need to succeed.'\",\n        sharkPerspective: \"The sharks thought: 'Electric scooters are a big market, but these guys need help beyond money. If we combine our expertise - manufacturing, marketing, and distribution - we can help them succeed faster and make more money for everyone. Sharing the deal reduces our individual risk too.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Booz Scooters' comprehensive deal helped them launch production faster, get into retail stores, and build an online presence simultaneously. The multiple shark expertise accelerated their growth and reduced mistakes that solo founders typically make.\",\n        impactOnFounder: \"The deal structure meant the founders could focus on product development while sharks handled industry connections, retail partnerships, and marketing strategy. This divided expertise helped them scale much faster.\",\n        dealOutcome: \"The multi-shark deal created a win-win situation where founders got comprehensive support and sharks shared both risk and expertise, leading to faster business growth and better returns for everyone.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Use the Booz formula: Don't just take money, take expertise. Ask each potential investor 'Besides money, what specific help can you provide?' Look for investors who complement each other's skills.\",\n          \"Structure deals with clear milestones: Set up quarterly reviews, performance targets, and defined roles for each investor. This keeps everyone accountable and engaged in your success.\",\n          \"Negotiate terms that protect your vision: Make sure the deal gives you enough control to execute your vision while getting the expertise you need to succeed.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't accept deals just for the money - if an investor can't provide expertise beyond capital, consider if they're the right partner for your business.\",\n          \"Don't give away too much equity to too many people - having 10 small investors is usually worse than having 2-3 strategic ones who can really help you.\",\n          \"Don't rush into deals without checking references - ask other founders about their experience working with potential investors before signing anything.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'offer',\n    term: 'Offer',\n    category: 'pitch-strategy',\n    icon: '💼',\n    businessDefinition: 'A proposal made by an investor to provide capital in exchange for equity or other considerations in a startup.',\n    simpleExplanation: \"When a shark or investor proposes to give you money for a percentage of your company - like bidding at an auction but for your business.\",\n    sharkTankExample: \"I'm making you an offer - ₹75 lakhs for 25% equity plus 2% royalty until I recover my investment.\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'Softbank made an offer to invest $2.5 billion in Flipkart, which was eventually accepted after negotiations and due diligence.',\n    difficulty: 'beginner',\n    relatedTerms: ['deal', 'counter-offer', 'negotiation', 'valuation'],\n    metaTitle: 'Investment Offer - How Startup Funding Proposals Work',\n    metaDescription: 'Understand investment offers, how to evaluate funding proposals, and what founders should consider before accepting investor offers.',\n    caseStudy: {\n      introductionContext: \"An offer is like someone proposing to buy your car - they tell you the price, what they want in return, and any special conditions. For startups, an offer is when an investor says 'I'll give you this much money for this percentage of your company, plus these extra terms.'\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Remember Jugaadu Kamlesh, the incredible innovator from Shark Tank India season 1? He got multiple offers: Aman offered ₹10 lakhs for 40%, Peyush offered ₹12 lakhs for 50%, and Namita offered ₹8 lakhs for 30% plus mentorship. Each offer had different money, equity, and terms. Kamlesh had to evaluate not just the rupees, but the complete package.\",\n        startupDetails: \"Kamlesh's situation was perfect for understanding offers - he had multiple sharks competing, each making different proposals. This gave him the power to compare and choose the best overall package, not just the highest amount.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Kamlesh analyzed each offer: Aman's ₹10L for 40% = ₹25L valuation, Peyush's ₹12L for 50% = ₹24L valuation, Namita's ₹8L for 30% = ₹26.7L valuation plus mentorship. He had to weigh money vs equity vs extra benefits.\",\n        founderPerspective: \"Kamlesh thought: 'Peyush offers the most money but wants 50% of my company. Namita offers less money but values my company highest and will teach me business. Aman is in the middle. I need to think about long-term value, not just immediate cash.'\",\n        sharkPerspective: \"Each shark thought: 'Kamlesh is talented, but other sharks are making offers too. I need to make my offer attractive not just with money, but with what unique value I can add that others can't provide.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Kamlesh chose Namita's offer because even though it was less money, it valued his company highest and included valuable business mentorship. The competitive offers meant he could choose based on total value, not just cash amount.\",\n        impactOnFounder: \"Having multiple offers gave Kamlesh the confidence to choose the best overall package rather than just taking the first offer. He got both funding and education, which helped him grow faster.\",\n        dealOutcome: \"The competitive offer environment led to a strategic partnership that provided both capital and expertise, setting Kamlesh up for long-term success beyond just the initial funding.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Use the Kamlesh method: Create competition between investors by getting multiple offers. This gives you power to choose the best total package, not just the highest amount.\",\n          \"Calculate the real value: ₹8 lakhs for 30% (₹26.7L valuation) + mentorship might be better than ₹12 lakhs for 50% (₹24L valuation) with no guidance. Look at the complete package.\",\n          \"Choose for long-term success: Pick the investor who will help you build a ₹100 crore company, not just the one offering the most money today.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't just take the highest money offer - if they want 70% of your company for ₹20 lakhs, you're selling too cheap.\",\n          \"Don't ignore what investors bring beyond money - mentorship, networks, and expertise can be worth more than extra cash.\",\n          \"Don't take too long to decide - offers expire, and investors might move on to other opportunities if you delay too much.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'counter-offer',\n    term: 'Counter-offer',\n    category: 'pitch-strategy',\n    icon: '↩️',\n    businessDefinition: 'A response to an initial offer that modifies the terms, typically seeking better conditions for the entrepreneur.',\n    simpleExplanation: \"When you don't like the shark's first offer, you suggest different terms - like saying 'Instead of 25%, how about 15% for the same money?'\",\n    sharkTankExample: \"Your offer is too dilutive. I counter-offer with ₹1 crore for 12% instead of 20%, given our strong traction and growth potential.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'When Facebook initially offered $1 billion for Instagram, Instagram counter-offered and eventually sold for $1 billion in cash and stock.',\n    difficulty: 'intermediate',\n    relatedTerms: ['offer', 'negotiation', 'valuation', 'equity-dilution'],\n    metaTitle: 'Counter-offer in Startups - Negotiating Better Investment Terms',\n    metaDescription: 'Learn how to make effective counter-offers in startup funding, negotiation strategies, and when to push back on investor terms.',\n    caseStudy: {\n      introductionContext: \"A counter-offer is like negotiating the price when buying a car - the seller says ₹10 lakhs, you say ₹8 lakhs, and you meet somewhere in the middle. In business, it's when you don't like an investor's first offer and suggest better terms.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Remember The Whole Truth Foods founders? When sharks initially offered ₹1 crore for 15% equity, the founders counter-offered with ₹1 crore for 10% equity, pointing to their 300% year-on-year growth, strong brand recall, and expanding retail presence. They negotiated confidently because they had solid numbers to back their counter-offer.\",\n        startupDetails: \"The Whole Truth Foods had strong business metrics - growing revenue, expanding distribution, and loyal customers - which gave them negotiating power to make reasonable counter-offers instead of just accepting whatever sharks offered.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Founders used their strong revenue growth and market traction as leverage to counter-offer for less equity dilution while maintaining the investment amount.\",\n        founderPerspective: \"Strong business metrics provided confidence to negotiate and seek better terms rather than accepting the initial offer.\",\n        sharkPerspective: \"Sharks respected the founders' negotiation approach as it was backed by solid business fundamentals and clear reasoning.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Well-reasoned counter-offers led to a mutually beneficial deal that preserved more founder equity while still providing sharks with attractive returns.\",\n        impactOnFounder: \"Effective counter-offering helped founders maintain greater control while securing the capital and expertise they needed.\",\n        dealOutcome: \"Strategic negotiation resulted in improved terms that created long-term value for both parties.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Use The Whole Truth method: Counter-offer with evidence. Don't just say 'I want less equity' - say 'With 300% growth and expanding retail presence, 10% equity is more appropriate than 15%.' Show why you deserve better terms.\",\n          \"Prepare your counter-offer before the meeting: Have 2-3 alternative scenarios ready. If they offer X, you'll counter with Y. If they offer A, you'll counter with B. Don't think on the spot.\",\n          \"Make it win-win: Show how your counter-offer benefits the investor too. 'At 10% instead of 15%, you still get great returns while I keep more equity to attract other key partners we need.'\"\n        ],\n        mistakesToAvoid: [\n          \"Don't counter-offer without proof - if you can't show why you deserve better terms (revenue growth, market traction, competitive advantages), your counter-offer looks unreasonable.\",\n          \"Don't be greedy in negotiations - counter-offering ₹50 lakhs for 5% when they offered ₹50 lakhs for 20% makes you look unrealistic and could end the deal.\",\n          \"Don't counter-offer every single term - if you argue about equity percentage, valuation, board seats, and timeline all at once, you'll annoy investors. Pick the most important issues.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'mentorship',\n    term: 'Mentorship',\n    category: 'pitch-strategy',\n    icon: '👨‍🏫',\n    businessDefinition: 'Guidance and support provided by experienced business leaders to help entrepreneurs navigate challenges and accelerate growth.',\n    simpleExplanation: \"Having experienced business people guide you and share their knowledge - like having a wise teacher help you avoid mistakes and make better decisions.\",\n    sharkTankExample: \"Money is important, but my mentorship and network will be more valuable. I've built companies before and can help you scale faster.\",\n    sharkName: 'Vineeta Singh',\n    realWorldExample: 'Ratan Tata\\'s mentorship of Ola founders went beyond investment, providing strategic guidance that helped them compete with global players like Uber.',\n    difficulty: 'beginner',\n    relatedTerms: ['angel-investor', 'advisory-board', 'strategic-guidance', 'network-effect'],\n    metaTitle: 'Mentorship in Startups - Value Beyond Investment Capital',\n    metaDescription: 'Understand the importance of mentorship in startups, how to find good mentors, and maximizing value from investor guidance.',\n    caseStudy: {\n      introductionContext: \"Mentorship is like having a wise older sibling who's already built successful businesses. They've made mistakes, learned lessons, and can help you avoid the same problems. It's having someone experienced guide your decisions and open doors that would take you years to find alone.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Look at Licious founders and how they used mentorship brilliantly. Building a meat delivery business meant solving cold-chain logistics, food safety regulations, customer trust issues, and supply chain management - problems they'd never faced before. Their shark mentors had decades of retail and operations experience. Instead of spending 2-3 years learning through costly mistakes, they got guidance from experts who'd already solved similar problems.\",\n        startupDetails: \"Licious used shark mentorship to navigate one of India's most complex business models - fresh meat delivery. The mentors provided industry connections, operational expertise, and strategic guidance that helped them scale from a local startup to a pan-India operation safely and efficiently.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Sharks provided industry-specific guidance on cold-chain management, regulatory compliance, and customer acquisition strategies that were crucial for the meat delivery business.\",\n        founderPerspective: \"Founders valued the operational expertise and industry connections that helped them solve complex logistical challenges.\",\n        sharkPerspective: \"Sharks leveraged their retail and operations experience to provide actionable guidance beyond financial investment.\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Strategic mentorship helped navigate regulatory challenges and operational complexities, enabling successful expansion to multiple cities with maintained quality standards.\",\n        impactOnFounder: \"Access to experienced guidance accelerated problem-solving and helped avoid costly operational mistakes in a complex business model.\",\n        dealOutcome: \"Mentorship value proved as important as capital investment in building a sustainable and scalable business operation.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Choose mentors like Licious did: Look for people who've solved your exact problems before. If you're building a food delivery business, get mentors with food, logistics, and regulatory experience - not just 'successful businesspeople' in general.\",\n          \"Set up regular check-ins: Schedule monthly calls with specific agendas. Don't just call when you're in trouble - update them on progress, share wins, and ask targeted questions like 'How did you handle supplier quality issues when scaling?'\",\n          \"Come prepared with specific questions: Don't ask 'How do I grow my business?' Ask 'We're getting 15% order returns due to quality issues. In your experience, what's the best way to improve supplier quality control?' Specific questions get actionable advice.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't treat mentors like employees - they're giving you free advice from their valuable time. Come prepared, be respectful of their schedule, and don't expect them to do your work for you.\",\n          \"Don't ignore mentor advice without trying it - if an experienced mentor suggests something and you disagree, at least test their suggestion on a small scale before dismissing it. They might see something you don't.\",\n          \"Don't only contact mentors when you need help - share good news too. Mentors invest emotionally in your success and want to celebrate wins, not just solve problems. This keeps the relationship positive.\"\n        ]\n      }\n    }\n  },\n\n  // Product & Tech (8 terms)\n  {\n    id: 'minimum-viable-product',\n    term: 'Minimum Viable Product (MVP)',\n    category: 'product-operations',\n    icon: '🔧',\n    businessDefinition: 'A basic version of a product with enough features to satisfy early customers and provide feedback for future development.',\n    simpleExplanation: \"The simplest version of your product that still solves the main problem - like making a basic bicycle before adding gears and fancy features.\",\n    sharkTankExample: \"Do you have an MVP? Show me the simplest version that proves customers want your solution.\",\n    sharkName: 'Anupam Mittal',\n    realWorldExample: 'Dropbox\\'s MVP was just a simple video showing file syncing - it validated demand before building the complex product.',\n    difficulty: 'intermediate',\n    relatedTerms: ['product-development', 'customer-validation', 'lean-startup'],\n    metaTitle: 'MVP (Minimum Viable Product) - Build, Test, Learn Quickly',\n    metaDescription: 'Learn how to create an MVP for your startup, validate assumptions quickly, and iterate based on customer feedback.',\n    caseStudy: {\n      introductionContext: \"An MVP is like building a simple bicycle before adding fancy gears - you create the most basic version that still solves the main problem and gets real customer feedback. It's about testing your idea quickly and cheaply before investing huge amounts in a perfect product.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"QURE.ai came on Shark Tank India with their medical AI technology. Instead of spending years building a complete hospital system, they started with a simple MVP - an AI that could analyze chest X-rays for tuberculosis. They tested this basic version with a few hospitals, got real doctors to use it, and proved it could actually detect TB better than many doctors could.\",\n        startupDetails: \"QURE.ai's founders knew building medical AI was complex and expensive. Rather than create a full hospital management system, they focused on one specific problem - TB detection from X-rays. They built a basic version, tested it with real doctors in real clinics, and used the results to prove their concept worked before expanding to other diseases.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"The QURE.ai team showed sharks their MVP journey: 'We started with just TB detection in chest X-rays. We tested it with 100 doctors, achieved 95% accuracy, and got 5 hospitals to pay for it. This proved our AI could work in real medical settings. Now we're expanding to detect lung cancer and brain strokes using the same approach.' Their MVP gave them proof, customers, and revenue.\",\n        founderPerspective: \"QURE.ai founders thought: 'Medical AI is complicated and hospitals are slow to adopt new technology. Instead of building everything at once and hoping it works, let's solve one specific problem really well. If doctors trust our TB detection, they'll trust us with more complex diseases later.'\",\n        sharkPerspective: \"Sharks loved QURE.ai's MVP approach: 'You didn't just build technology in isolation. You got real doctors using it, real hospitals paying for it, and real patients benefiting. This proves your AI actually works in the field, not just in your lab. That's exactly how MVPs should work.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"QURE.ai's MVP strategy worked brilliantly. By starting with TB detection, they proved their AI technology worked with real doctors in real hospitals. This gave them credibility to expand to lung cancer detection, brain stroke analysis, and other diseases. The MVP became the foundation for a multi-million dollar medical AI company.\",\n        impactOnFounder: \"The MVP approach saved QURE.ai years of development time and millions in costs. Instead of guessing what doctors needed, they learned from real users. Each successful MVP gave them confidence and customer proof to tackle the next medical challenge.\",\n        dealOutcome: \"The strong MVP track record convinced sharks that QURE.ai could execute complex medical projects. The proven MVP-to-scale approach led to significant investment and partnerships with major hospitals across India.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Use the QURE.ai MVP formula: Pick one specific problem, build the simplest solution that works, test with real users, get paying customers, then expand. Don't try to solve everything at once.\",\n          \"Get actual customers using and paying for your MVP before building more features. QURE.ai had hospitals paying for TB detection before they built cancer detection - that's proof your MVP works.\",\n          \"Measure everything: accuracy rates, user adoption, customer satisfaction. Have specific numbers like 'our MVP achieved 95% accuracy with 100 doctors' rather than vague claims.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't build an MVP in isolation - QURE.ai tested with real doctors in real hospitals, not just in their lab. Your MVP needs real user feedback to be valuable.\",\n          \"Don't add features to your MVP until you've mastered the core function - QURE.ai perfected TB detection before tackling cancer. Master one thing completely before expanding.\",\n          \"Don't mistake a demo for an MVP - an MVP needs real users and real usage data. A working prototype that no one uses isn't validating anything.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'user-interface',\n    term: 'User Interface (UI)',\n    category: 'product-operations',\n    icon: '🖥️',\n    businessDefinition: 'The visual elements and interactive components of a product that users directly engage with.',\n    simpleExplanation: \"What users see and interact with - the buttons, colors, layout, and design of your app or website that users click and navigate.\",\n    sharkTankExample: \"Your UI looks confusing. Customers should understand how to use your app within 10 seconds of opening it.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'Instagram\\'s simple UI with just a camera button and feed made photo sharing intuitive for millions of users.',\n    difficulty: 'beginner',\n    relatedTerms: ['user-experience', 'design-thinking', 'usability'],\n    metaTitle: 'User Interface (UI) - Design Intuitive Product Interactions',\n    metaDescription: 'Understand UI design principles, best practices for creating user-friendly interfaces, and how good UI impacts business success.',\n    caseStudy: {\n      introductionContext: \"UI is what users see and touch - the buttons, colors, layout, and visual design of your product. Think of it like the dashboard of a car. A good UI makes everything easy to find and use, while a bad UI confuses people and makes them leave your app or website.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"The Whole Truth Foods appeared on Shark Tank India with their protein bars and health snacks. Their success came partly from brilliant UI design - their packaging and website looked clean, trustworthy, and premium. Their product UI used clear ingredient lists, simple nutritional facts, and honest branding that made health-conscious customers trust the product immediately. Their website UI was equally smart - clean white backgrounds, easy-to-read nutrition labels, simple 'Add to Cart' buttons, and honest ingredient stories that made purchasing feel confident and informed.\",\n        startupDetails: \"The Whole Truth realized that health food customers were tired of confusing labels and misleading marketing. Their UI design reflected this - transparent packaging that showed the actual product, clear ingredient lists with no hidden terms, and a website that explained everything honestly. Every visual element was designed to build trust and make customers feel informed about their health choices.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"The Whole Truth founders showed the sharks how their UI design built trust: 'Look at our packaging - no fancy marketing claims, just clear nutrition facts that customers can understand immediately. Our website has the same philosophy - big clear ingredient photos, honest descriptions, no confusing health jargon. The UI makes customers feel confident they know exactly what they're buying.' This transparent UI approach helped them build loyal customers who trusted the brand.\",\n        founderPerspective: \"The Whole Truth founders thought: 'Health-conscious Indians want to know exactly what they're eating, but most food packaging is confusing and misleading. Our UI design - from product labels to website layout - should make customers feel informed and confident. If the UI hides information or looks deceptive, they'll choose more transparent brands.'\",\n        sharkPerspective: \"Sharks were impressed by The Whole Truth's UI strategy: 'Your packaging doesn't just look good, it builds trust through transparency. Your website UI makes buying feel safe because customers understand exactly what they're getting. In the health food market, honest UI design is your competitive advantage against brands that hide behind fancy marketing.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"The Whole Truth's focus on transparent UI design paid off significantly. Their clear, honest packaging and website design helped them build strong customer loyalty in the competitive health food market. Customers appreciated how easy it was to understand the products, and the trustworthy UI converted health-conscious visitors into repeat buyers.\",\n        impactOnFounder: \"UI design became The Whole Truth's way of differentiating from misleading health food marketing. Their commitment to clear, transparent design built a premium brand that customers trusted with their health decisions.\",\n        dealOutcome: \"The Whole Truth's UI-focused transparency attracted investment and helped them build a successful health food business by winning customer trust through honest design.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Use The Whole Truth's transparency approach: Make every piece of information clear and easy to understand. If customers have to guess what your product does or contains, your UI needs improvement.\",\n          \"Design for trust like The Whole Truth: Their UI built credibility through honest labeling and clear information. If your product affects people's health, money, or important decisions, prioritize trustworthy UI design over flashy visuals.\",\n          \"Test UI with real customers: The Whole Truth regularly tested their packaging and website with actual health-conscious consumers to ensure the information was clear and the design felt trustworthy.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't hide important information to make UI look cleaner - The Whole Truth succeeded by showing more information clearly, not by hiding complexity behind fancy design.\",\n          \"Don't copy trendy UI without understanding your customers - The Whole Truth's clean, medical-style design worked for health-conscious buyers but might not work for other markets.\",\n          \"Don't ignore packaging UI if you have physical products - The Whole Truth's success came from making both their website and product packaging equally clear and trustworthy.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'user-experience',\n    term: 'User Experience (UX)',\n    category: 'product-operations',\n    icon: '😊',\n    businessDefinition: 'The overall experience and satisfaction a user has while interacting with a product or service.',\n    simpleExplanation: \"How users feel when using your product - whether it's frustrating, delightful, confusing, or smooth from start to finish.\",\n    sharkTankExample: \"Great UX means customers love using your product so much they tell their friends about it - that's organic growth.\",\n    sharkName: 'Vineeta Singh',\n    realWorldExample: 'Netflix\\'s UX focuses on helping users find content quickly with personalized recommendations and seamless streaming.',\n    difficulty: 'beginner',\n    relatedTerms: ['user-interface', 'customer-satisfaction', 'product-usability'],\n    metaTitle: 'User Experience (UX) - Create Products Users Love',\n    metaDescription: 'Learn UX principles, how great user experience drives business growth, and methods to improve customer satisfaction.',\n    caseStudy: {\n      introductionContext: \"UX is how your entire product feels to customers - not just how it looks, but how easy, enjoyable, and satisfying it is to use from start to finish. Think of it like going to a restaurant - good UX is when everything flows smoothly from entering to paying the bill, leaving you happy and wanting to return.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Lenskart revolutionized eyewear shopping in India by focusing obsessively on user experience. Before Lenskart, buying glasses was painful - you had to visit multiple shops, limited selection, high prices, and no home trial. Lenskart's founder Peyush Bansal (now a Shark Tank judge) created an end-to-end experience that made buying glasses actually enjoyable. Customers could browse thousands of frames online, use virtual try-on technology, get free home trials of 5 frames, and receive doorstep delivery with easy returns.\",\n        startupDetails: \"Lenskart understood that people hate buying glasses because it's stressful - you can't tell how frames will look, prescriptions are confusing, and prices are unclear. They redesigned the entire experience: simple website navigation, virtual try-on using phone camera, home trial service, transparent pricing, and hassle-free returns. Every step was designed to reduce anxiety and increase confidence in the purchase decision.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Peyush showed how UX thinking transformed their business: 'We mapped every customer touchpoint - website browsing, virtual try-on, frame selection, home trial booking, prescription upload, payment, delivery, and returns. At each step, we asked: What makes customers worried or frustrated? Then we fixed those pain points. The result: customers who were afraid to buy glasses online became our biggest advocates.' This comprehensive UX approach helped Lenskart become India's largest eyewear retailer.\",\n        founderPerspective: \"Peyush thought: 'Buying glasses is scary for people - they worry about how they'll look, whether the prescription is right, and what happens if they don't like them. Great UX means removing all these fears through technology and service design. If customers feel confident and happy at every step, they'll choose us over traditional stores.'\",\n        sharkPerspective: \"Sharks (including Peyush himself now) recognize that Lenskart's UX innovation created a new category: 'You didn't just sell glasses online - you solved the fundamental problem of how people feel about buying eyewear. That's UX thinking. You made a stressful experience delightful, which is why customers love you and competitors struggle to catch up.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Lenskart's UX-first approach transformed them from a struggling startup to a billion-dollar company. By making every interaction pleasant and stress-free, they gained customer loyalty that traditional eyewear stores couldn't match. Their Net Promoter Score became industry-leading because customers genuinely enjoyed the experience of buying glasses through Lenskart.\",\n        impactOnFounder: \"The UX focus taught Peyush that successful companies don't just solve problems - they make solving problems feel good. This philosophy now guides his investment decisions as a shark, where he looks for founders who understand customer emotions and experience design.\",\n        dealOutcome: \"Lenskart's UX-driven success made it one of India's most valuable startups and proved that superior user experience can disrupt traditional industries. The company's UX innovations continue to drive growth and customer acquisition.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Use Lenskart's UX mapping method: List every step customers take with your product, identify the emotional pain points at each step, then design solutions that make people feel confident and happy instead of worried or frustrated.\",\n          \"Test your UX with real customers regularly: Lenskart constantly observes how people use their website and app. Watch real customers use your product and note where they hesitate, get confused, or feel frustrated - those are UX improvement opportunities.\",\n          \"Focus on the scariest part of your customer's journey: For Lenskart, it was 'Will these glasses look good on me?' They solved this with virtual try-on and home trials. What's the biggest fear or frustration in your customer's experience?\"\n        ],\n        mistakesToAvoid: [\n          \"Don't assume you know what customers want - Lenskart spent thousands of hours watching people shop for glasses to understand their real concerns, not just what they said they wanted.\",\n          \"Don't fix just the interface without fixing the experience - good UX goes beyond pretty websites to include service, delivery, returns, and customer support. Every interaction matters.\",\n          \"Don't ignore emotional aspects of your product - people buy glasses to look good and feel confident. If your product has emotional significance, your UX must address those feelings, not just functional needs.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'software-as-a-service',\n    term: 'Software as a Service (SaaS)',\n    category: 'product-operations',\n    icon: '☁️',\n    businessDefinition: 'A software distribution model where applications are hosted by a provider and made available to customers over the internet.',\n    simpleExplanation: \"Software you use through the internet instead of installing on your computer - like using Gmail instead of downloading email software.\",\n    sharkTankExample: \"SaaS businesses are attractive because of recurring revenue - customers pay monthly/yearly instead of one-time purchases.\",\n    sharkName: 'Namita Thapar',\n    realWorldExample: 'Zoho, Salesforce, and Slack are SaaS companies offering business tools through web browsers with subscription models.',\n    difficulty: 'intermediate',\n    relatedTerms: ['subscription-model', 'cloud-computing', 'recurring-revenue'],\n    metaTitle: 'SaaS (Software as a Service) - Cloud-Based Business Model',\n    metaDescription: 'Understand SaaS business model, benefits over traditional software, and why investors love recurring revenue models.',\n    caseStudy: {\n      introductionContext: \"SaaS is like Netflix for software - instead of buying software once and installing it on your computer, you pay a monthly or yearly subscription to use it online. This creates predictable recurring revenue for companies and always gives customers the latest version without big upfront costs.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Byju's revolutionized education in India by building a SaaS-like subscription model for learning. Instead of selling expensive textbooks or one-time courses, they created an app where students pay monthly or yearly subscriptions to access video lessons, practice tests, and personalized learning. Parents could start with a free trial, then subscribe for ₹1000-5000 per month depending on the grade and subjects. This SaaS approach made quality education affordable and accessible to millions of Indian families.\",\n        startupDetails: \"Byju's understood that traditional education was expensive and inflexible - parents paid huge fees upfront for coaching classes with no guarantee of results. The SaaS model solved this: families could try the service free, pay monthly based on usage, get regular content updates, and cancel anytime. Students got personalized learning experiences that traditional classrooms couldn't provide, while parents got transparency into their child's progress through detailed dashboards and reports.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Byju's SaaS model created multiple advantages: 'We have 115 million students using our platform, with 8.5 million paid subscribers paying an average of ₹2,500 per year. Our customer acquisition cost is ₹1,200, but lifetime value is ₹15,000 because families typically subscribe for 3-4 years. The SaaS model means we get predictable revenue every month, can continuously improve our content, and help more students learn better.' This recurring revenue made Byju's extremely valuable to investors.\",\n        founderPerspective: \"Byju Raveendran thought: 'Education is not a one-time purchase - learning is an ongoing process. The SaaS model matches how people actually learn - continuously over time. Parents are happy to pay monthly if they see their children improving, and we can keep making our content better based on real student data and feedback.'\",\n        sharkPerspective: \"Sharks love SaaS businesses like Byju's: 'This isn't just selling courses - you've created recurring revenue streams with high customer lifetime value. Each student who subscribes generates predictable income for years. The SaaS model also gives you data to improve your product continuously, which traditional education companies can't match.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Byju's SaaS approach transformed them into one of the world's most valuable edtech companies, reaching a peak valuation of $22 billion. The predictable subscription revenue allowed them to invest heavily in content creation, technology development, and global expansion. The SaaS metrics impressed investors worldwide who could see clear paths to sustainable growth.\",\n        impactOnFounder: \"The SaaS model taught Byju's team that customer success drives business success - if students improve their grades, parents happily renew subscriptions. This focus on learning outcomes, enabled by the SaaS model's continuous relationship with customers, became their core competitive advantage.\",\n        dealOutcome: \"Byju's SaaS-driven growth attracted billions in investment from global investors who recognized that recurring revenue models create more valuable companies than traditional one-time sale businesses.\"\n      },\n      actionableTakeaways: {\n        practicalLessons: [\n          \"Use Byju's SaaS metrics framework: Track Monthly Recurring Revenue (MRR), Customer Acquisition Cost (CAC), Customer Lifetime Value (LTV), and churn rate. Byju's could show investors that each ₹1,200 spent on acquiring customers returned ₹15,000 over their lifetime.\",\n          \"Start with free trials like Byju's: Let customers experience value before asking for payment. Byju's free trial converted at high rates because students and parents could see the learning benefits immediately.\",\n          \"Focus on retention through continuous value: Byju's kept improving their content and adding new features to keep students engaged. SaaS success comes from making customers successful, not just acquiring them.\"\n        ],\n        mistakesToAvoid: [\n          \"Don't launch SaaS without clear value metrics - Byju's could prove their students improved test scores by 30% on average. If you can't measure customer success, your retention will be terrible.\",\n          \"Don't ignore customer support in SaaS - unlike one-time purchases, SaaS customers can cancel anytime. Byju's invested heavily in customer success teams to ensure students stayed engaged and parents saw value.\",\n          \"Don't underprice your SaaS to get customers - Byju's charged premium prices because their results justified the cost. Cheap SaaS often signals low value and attracts customers who churn quickly.\"\n        ]\n      }\n    }\n  },\n  {\n    id: 'application-programming-interface',\n    term: 'Application Programming Interface (API)',\n    category: 'product-operations',\n    icon: '🔗',\n    businessDefinition: 'A set of rules and protocols that allows different software applications to communicate and share data with each other.',\n    simpleExplanation: \"Like a waiter in a restaurant - APIs take requests from one app, get the required information from another app, and deliver the response back.\",\n    sharkTankExample: \"Your app integrates with payment gateways through APIs - that's how you can accept payments from multiple providers.\",\n    sharkName: 'Peyush Bansal',\n    realWorldExample: 'When you use Google Pay on Zomato, APIs connect the two apps so you can pay without leaving the food delivery app.',\n    difficulty: 'advanced',\n    relatedTerms: ['integration', 'tech-stack', 'third-party-services'],\n    metaTitle: 'API (Application Programming Interface) - Connect Apps and Services',\n    metaDescription: 'Learn about APIs, how they enable app integrations, and why they\\'re crucial for modern software development and business.',\n    caseStudy: {\n      introductionContext: \"An API is like a waiter in a restaurant - it takes orders from one app, gets the information from the kitchen (another app), and brings back exactly what was requested. APIs let different software talk to each other and share information seamlessly.\",\n      sharkTankPitchReference: {\n        pitchDescription: \"Paytm revolutionized digital payments in India by building powerful APIs that let other businesses integrate payments into their apps. When you pay for Zomato food delivery, book Ola rides, or shop on other apps, you're using Paytm's payment APIs. Instead of every company building their own payment system, they simply connect to Paytm's APIs with a few lines of code. This API strategy helped Paytm become the backbone of India's digital economy - thousands of businesses depend on their APIs for collecting payments from customers.\",\n        startupDetails: \"Paytm realized that building payment infrastructure is complex and expensive for most businesses. Instead of only focusing on their own payment app, they created APIs that let any developer integrate Paytm payments into their website or app within hours. These APIs handle the complex parts like security, bank connections, and regulatory compliance, while businesses just need to add a few lines of code to start accepting digital payments.\"\n      },\n      applicationAnalysis: {\n        howTermWasApplied: \"Paytm's API strategy created a massive network effect: 'We have over 1 million merchants using our payment APIs. Every time someone pays on Zomato, BookMyShow, or thousands of other apps, they're using Paytm APIs. Our APIs process 1.5 billion transactions monthly, earning us fees on each transaction. The more businesses use our APIs, the more customers see Paytm everywhere, which strengthens our brand and drives more API adoption.' This API-first approach made Paytm indispensable to India's digital ecosystem.\",\n        founderPerspective: \"Paytm founder Vijay Shekhar Sharma thought: 'We could just be another payment app, or we could become the payment infrastructure that powers thousands of other businesses. APIs let us scale without building every feature ourselves. When businesses integrate our APIs, we become their payment partner, not their competitor.'\",\n        sharkPerspective: \"Sharks love API-driven businesses like Paytm: 'You're not just serving customers directly - you're powering other businesses to serve their customers. This creates multiple revenue streams and makes you harder to replace. When thousands of businesses depend on your APIs, you become infrastructure, not just another app.'\"\n      },\n      outcomeInsights: {\n        whatHappened: \"Paytm's API strategy transformed them from a simple payment app to India's digital payments infrastructure. Their APIs became so essential that removing Paytm would break thousands of other businesses. This API dependency created incredible business value - Paytm went public with a valuation of over ₹1 lakh crore, largely because their APIs made them indispensable to India's digital economy.\",\n        impactOnFounder: \"The API approach taught Paytm that enabling other businesses to succeed often creates more value than competing with them. By making their core technology available through APIs, they created an ecosystem where everyone benefits - merchants get easy payments, customers get seamless experiences, and Paytm gets transaction fees from everywhere.\",\n        d","size_bytes":360000},"client/src/data/quizData.ts":{"content":"import { QuizQuestion } from '../types';\n\nexport const quizQuestions: QuizQuestion[] = [\n  {\n    id: 'q1',\n    question: 'An entrepreneur asks for ₹50 lakhs for 10% of their company. What is their company valuation?',\n    options: ['₹50 lakhs', '₹5 crores', '₹5 lakhs', '₹50 crores'],\n    correctAnswer: 1,\n    explanation: 'If 10% = ₹50 lakhs, then 100% = ₹50 lakhs × 10 = ₹5 crores',\n    hint: 'If 10% = ₹50 lakhs, then 100% = ?',\n    relatedTerm: 'valuation'\n  },\n  {\n    id: 'q2',\n    question: 'What does CAC stand for in business terms?',\n    options: ['Customer Acquisition Cost', 'Company Asset Capital', 'Customer Annual Contract', 'Cash Account Capital'],\n    correctAnswer: 0,\n    explanation: 'CAC stands for Customer Acquisition Cost - the total cost to acquire a new customer.',\n    hint: 'Think about what it costs to get new customers.',\n    relatedTerm: 'customer-acquisition-cost'\n  },\n  {\n    id: 'q3',\n    question: 'Which of these is the best example of a scalable business model?',\n    options: ['Personal coaching', 'Software as a Service (SaaS)', 'Custom tailoring', 'Home cleaning service'],\n    correctAnswer: 1,\n    explanation: 'SaaS can serve millions of users with minimal additional costs per user, making it highly scalable.',\n    hint: 'Think about which business can serve more customers without proportionally increasing costs.',\n    relatedTerm: 'scalability'\n  },\n  {\n    id: 'q4',\n    question: 'If your burn rate is ₹5 lakhs per month and you have ₹20 lakhs in the bank, how long will your money last?',\n    options: ['2 months', '4 months', '6 months', '8 months'],\n    correctAnswer: 1,\n    explanation: '₹20 lakhs ÷ ₹5 lakhs per month = 4 months runway',\n    hint: 'Divide total money by monthly spending.',\n    relatedTerm: 'burn-rate'\n  },\n  {\n    id: 'q5',\n    question: 'What is equity in simple terms?',\n    options: ['The money you owe', 'Your monthly profit', 'Ownership share in a company', 'Total revenue'],\n    correctAnswer: 2,\n    explanation: 'Equity represents ownership percentage in a company - like owning a slice of a pizza.',\n    hint: 'Think about ownership and having a \"piece\" of something.',\n    relatedTerm: 'equity'\n  },\n  {\n    id: 'q6',\n    question: 'Zomato spent ₹200 to acquire a customer who orders ₹300 worth of food monthly. If 60% of customers continue ordering monthly, what is the 6-month CLV?',\n    options: ['₹1,080', '₹1,800', '₹900', '₹1,200'],\n    correctAnswer: 0,\n    explanation: 'Month 1: ₹300, Month 2: ₹300×0.6=₹180, continuing this pattern for 6 months = ₹1,080',\n    hint: 'Calculate cumulative revenue considering 60% retention each month.',\n    relatedTerm: 'customer-lifetime-value'\n  },\n  {\n    id: 'q7',\n    question: 'In Shark Tank India, what does \"pre-money valuation\" mean?',\n    options: ['Valuation before any investment', 'Valuation after investment', 'Money needed pre-launch', 'Revenue before costs'],\n    correctAnswer: 0,\n    explanation: 'Pre-money valuation is what the company is worth before receiving new investment.',\n    hint: 'Think about \"before\" the money comes in.',\n    relatedTerm: 'pre-money-valuation'\n  },\n  {\n    id: 'q8',\n    question: 'Flipkart started as an online bookstore but expanded to everything. This strategy is called:',\n    options: ['Vertical Integration', 'Horizontal Expansion', 'Market Penetration', 'Product Differentiation'],\n    correctAnswer: 1,\n    explanation: 'Horizontal expansion means adding new products/services to serve the same customer base.',\n    hint: 'They expanded across different product categories.',\n    relatedTerm: 'horizontal-expansion'\n  },\n  {\n    id: 'q9',\n    question: 'What is the main difference between revenue and profit?',\n    options: ['Revenue is monthly, profit is yearly', 'Revenue is total income, profit is what remains after costs', 'Revenue includes taxes, profit doesn\\'t', 'They are the same thing'],\n    correctAnswer: 1,\n    explanation: 'Revenue is total money coming in, profit is what\\'s left after subtracting all expenses.',\n    hint: 'One is before expenses, one is after.',\n    relatedTerm: 'revenue-vs-profit'\n  },\n  {\n    id: 'q10',\n    question: 'A startup has a 40% gross margin. If they sell ₹100 worth of products, how much profit do they make?',\n    options: ['₹40', '₹60', '₹100', '₹140'],\n    correctAnswer: 0,\n    explanation: 'Gross margin of 40% means 40% of revenue remains after direct costs: ₹100 × 0.40 = ₹40',\n    hint: 'Gross margin percentage × Revenue = Gross profit',\n    relatedTerm: 'gross-margin'\n  },\n  {\n    id: 'q11',\n    question: 'Paytm\\'s strategy during demonetization was to capture market share by offering cashbacks. This is an example of:',\n    options: ['Premium Pricing', 'Penetration Pricing', 'Skimming Strategy', 'Cost Leadership'],\n    correctAnswer: 1,\n    explanation: 'Penetration pricing means setting low prices (or offering incentives) to quickly gain market share.',\n    hint: 'They wanted to \"penetrate\" the market quickly.',\n    relatedTerm: 'penetration-pricing'\n  },\n  {\n    id: 'q12',\n    question: 'What does \"bootstrapped\" mean for a startup?',\n    options: ['Using only founder\\'s money', 'Getting government funding', 'Taking bank loans', 'Going public early'],\n    correctAnswer: 0,\n    explanation: 'Bootstrapped means self-funded using personal savings and revenue, without external investors.',\n    hint: 'Like pulling yourself up by your own bootstraps.',\n    relatedTerm: 'bootstrapped'\n  },\n  {\n    id: 'q13',\n    question: 'If a SaaS company has 1000 users paying ₹500/month and loses 5% users monthly, what is their monthly churn rate?',\n    options: ['5%', '10%', '50%', '500%'],\n    correctAnswer: 0,\n    explanation: 'Churn rate is the percentage of customers who stop using the service: 5% in this case.',\n    hint: 'The question directly states the percentage lost.',\n    relatedTerm: 'churn-rate'\n  },\n  {\n    id: 'q14',\n    question: 'Reliance Jio offered free data and calls for months. What was their likely main goal?',\n    options: ['Immediate profit', 'Market share capture', 'Cost reduction', 'Brand awareness'],\n    correctAnswer: 1,\n    explanation: 'Jio used penetration pricing to quickly capture massive market share from established players.',\n    hint: 'They weren\\'t making money initially, so what were they gaining?',\n    relatedTerm: 'market-share'\n  },\n  {\n    id: 'q15',\n    question: 'What is a \"unicorn\" in startup terminology?',\n    options: ['A mythical business idea', 'A startup valued at $1 billion+', 'A company with one founder', 'A perfect product'],\n    correctAnswer: 1,\n    explanation: 'A unicorn is a privately-held startup company valued at over $1 billion.',\n    hint: 'Think about rarity and high value.',\n    relatedTerm: 'unicorn'\n  },\n  {\n    id: 'q16',\n    question: 'Amazon India operates at thin margins but focuses on volume. This strategy is called:',\n    options: ['Premium Strategy', 'Niche Strategy', 'Volume Strategy', 'Differentiation Strategy'],\n    correctAnswer: 2,\n    explanation: 'Volume strategy focuses on selling large quantities at low margins rather than high margins on few sales.',\n    hint: 'High volume, low margin per unit.',\n    relatedTerm: 'volume-strategy'\n  },\n  {\n    id: 'q17',\n    question: 'What does \"pivot\" mean in startup language?',\n    options: ['Rotate the office furniture', 'Change business model/direction', 'Hire new employees', 'Increase marketing spend'],\n    correctAnswer: 1,\n    explanation: 'Pivoting means changing your business model, target market, or product direction based on learnings.',\n    hint: 'Like changing direction while keeping some momentum.',\n    relatedTerm: 'pivot'\n  },\n  {\n    id: 'q18',\n    question: 'A company spends ₹10 lakhs on marketing and acquires 500 customers. What is their CAC?',\n    options: ['₹2,000', '₹500', '₹20,000', '₹50,000'],\n    correctAnswer: 0,\n    explanation: 'CAC = Total acquisition cost ÷ Number of customers = ₹10,00,000 ÷ 500 = ₹2,000',\n    hint: 'Divide total marketing spend by customers acquired.',\n    relatedTerm: 'customer-acquisition-cost'\n  },\n  {\n    id: 'q19',\n    question: 'Swiggy charges restaurants a commission and customers a delivery fee. This is which type of business model?',\n    options: ['B2B only', 'B2C only', 'Marketplace/Platform', 'Subscription'],\n    correctAnswer: 2,\n    explanation: 'Marketplace models earn by facilitating transactions between multiple parties (restaurants and customers).',\n    hint: 'They connect two sides and take a cut.',\n    relatedTerm: 'marketplace-model'\n  },\n  {\n    id: 'q20',\n    question: 'What is \"product-market fit\"?',\n    options: ['When your product fits in the market', 'When customers love and regularly use your product', 'When you have no competitors', 'When you make profit'],\n    correctAnswer: 1,\n    explanation: 'Product-market fit means customers find your product so valuable they regularly use it and recommend it.',\n    hint: 'It\\'s about customer love and retention.',\n    relatedTerm: 'product-market-fit'\n  },\n  {\n    id: 'q21',\n    question: 'Tesla initially targeted luxury car buyers before mass market. This approach is called:',\n    options: ['Market Skimming', 'Market Penetration', 'Market Development', 'Market Diversification'],\n    correctAnswer: 0,\n    explanation: 'Market skimming starts with high prices for early adopters, then gradually lowers prices.',\n    hint: 'Start at the top and work your way down.',\n    relatedTerm: 'market-skimming'\n  },\n  {\n    id: 'q22',\n    question: 'In Indian context, what does \"jugaad innovation\" typically mean?',\n    options: ['Expensive R&D', 'Frugal and creative solutions', 'Copying competitors', 'Government grants'],\n    correctAnswer: 1,\n    explanation: 'Jugaad innovation means creating clever, low-cost solutions with limited resources.',\n    hint: 'Making the most with the least.',\n    relatedTerm: 'frugal-innovation'\n  },\n  {\n    id: 'q23',\n    question: 'If a business has ₹50 lakh revenue and ₹30 lakh costs, what is the profit margin?',\n    options: ['40%', '60%', '30%', '20%'],\n    correctAnswer: 0,\n    explanation: 'Profit = ₹50L - ₹30L = ₹20L. Profit margin = (₹20L ÷ ₹50L) × 100 = 40%',\n    hint: 'Profit divided by revenue, multiplied by 100.',\n    relatedTerm: 'profit-margin'\n  },\n  {\n    id: 'q24',\n    question: 'What is the primary advantage of recurring revenue over one-time sales?',\n    options: ['Higher immediate profits', 'Predictable cash flow', 'Less customer service', 'Lower costs'],\n    correctAnswer: 1,\n    explanation: 'Recurring revenue provides predictable, steady cash flow that enables better planning and valuation.',\n    hint: 'Think about consistency and predictability.',\n    relatedTerm: 'recurring-revenue'\n  },\n  {\n    id: 'q25',\n    question: 'Zomato went from food discovery to food delivery to groceries. This growth strategy is:',\n    options: ['Market Penetration', 'Product Development', 'Market Development', 'Diversification'],\n    correctAnswer: 1,\n    explanation: 'Product development means creating new products/services for existing customers.',\n    hint: 'Same customers, new products/services.',\n    relatedTerm: 'product-development'\n  },\n  {\n    id: 'q26',\n    question: 'What does \"freemium\" model mean?',\n    options: ['Everything is free', 'Free basic version, paid premium features', 'Premium only', 'Free for students only'],\n    correctAnswer: 1,\n    explanation: 'Freemium offers basic features free to attract users, then charges for premium features.',\n    hint: 'Combination of \"free\" and \"premium\".',\n    relatedTerm: 'freemium'\n  },\n  {\n    id: 'q27',\n    question: 'A startup raises ₹5 crores for 20% equity. What is the post-money valuation?',\n    options: ['₹5 crores', '₹20 crores', '₹25 crores', '₹30 crores'],\n    correctAnswer: 2,\n    explanation: 'Post-money = Pre-money + Investment. If 20% = ₹5Cr, then 100% = ₹25Cr (post-money).',\n    hint: 'Add the investment to the pre-money valuation.',\n    relatedTerm: 'post-money-valuation'\n  },\n  {\n    id: 'q28',\n    question: 'Why do sharks often ask about \"unit economics\"?',\n    options: ['To confuse entrepreneurs', 'To check if each sale is profitable', 'To discuss accounting', 'To talk about units sold'],\n    correctAnswer: 1,\n    explanation: 'Unit economics shows if you make or lose money on each individual sale/customer.',\n    hint: 'Profit or loss per individual unit/customer.',\n    relatedTerm: 'unit-economics'\n  },\n  {\n    id: 'q29',\n    question: 'Ola initially focused only on taxi aggregation, then added Ola Money, Ola Foods. This is:',\n    options: ['Horizontal Integration', 'Vertical Integration', 'Backward Integration', 'Market Penetration'],\n    correctAnswer: 0,\n    explanation: 'Horizontal integration means expanding into related but different business areas.',\n    hint: 'Expanding sideways into related services.',\n    relatedTerm: 'horizontal-integration'\n  },\n  {\n    id: 'q30',\n    question: 'What is the main purpose of a \"minimum viable product\" (MVP)?',\n    options: ['To make maximum profit', 'To test core assumptions with minimal effort', 'To compete with established players', 'To raise funding'],\n    correctAnswer: 1,\n    explanation: 'MVP tests your core business hypothesis with minimum resources before full development.',\n    hint: 'Test your idea quickly and cheaply.',\n    relatedTerm: 'mvp'\n  },\n  {\n    id: 'q31',\n    question: 'Byju\\'s offers free content initially, then converts users to paid subscriptions. What is this strategy?',\n    options: ['Bait and Switch', 'Lead Generation', 'Freemium', 'Loss Leader'],\n    correctAnswer: 2,\n    explanation: 'Freemium provides free value upfront to demonstrate quality, then offers premium features.',\n    hint: 'Free to try, pay for more features.',\n    relatedTerm: 'freemium'\n  },\n  {\n    id: 'q32',\n    question: 'What does \"B2B2C\" business model mean?',\n    options: ['Business to Business to Customer', 'Back to Back to Customer', 'Business twice Business Customer', 'Buy to Build to Customer'],\n    correctAnswer: 0,\n    explanation: 'B2B2C sells to businesses who then sell to consumers - like a supplier selling through retailers.',\n    hint: 'Business → Business → Customer chain.',\n    relatedTerm: 'b2b2c'\n  },\n  {\n    id: 'q33',\n    question: 'If a company\\'s TAM is ₹1000 crores and they realistically can capture 2%, what is their revenue potential?',\n    options: ['₹20 crores', '₹200 crores', '₹2 crores', '₹50 crores'],\n    correctAnswer: 0,\n    explanation: 'TAM × Market share = ₹1000 crores × 2% = ₹20 crores',\n    hint: '2% of ₹1000 crores',\n    relatedTerm: 'total-addressable-market'\n  },\n  {\n    id: 'q34',\n    question: 'Razorpay charges a percentage of each transaction processed. This is which revenue model?',\n    options: ['Subscription', 'Commission/Transaction fee', 'Advertising', 'Licensing'],\n    correctAnswer: 1,\n    explanation: 'Transaction fee model earns a percentage or fixed amount per transaction processed.',\n    hint: 'They earn from each payment processed.',\n    relatedTerm: 'transaction-fee-model'\n  },\n  {\n    id: 'q35',\n    question: 'What is \"churn rate\" in subscription businesses?',\n    options: ['Rate of new customer acquisition', 'Rate of customers leaving/canceling', 'Rate of revenue growth', 'Rate of profit increase'],\n    correctAnswer: 1,\n    explanation: 'Churn rate measures the percentage of customers who stop using your service in a given period.',\n    hint: 'How many customers are leaving?',\n    relatedTerm: 'churn-rate'\n  },\n  {\n    id: 'q36',\n    question: 'PhonePe started within Flipkart, then became independent. This is an example of:',\n    options: ['Acquisition', 'Merger', 'Spin-off', 'Joint Venture'],\n    correctAnswer: 2,\n    explanation: 'A spin-off is when a company creates an independent company from an existing division.',\n    hint: 'Breaking off from the parent company.',\n    relatedTerm: 'spin-off'\n  },\n  {\n    id: 'q37',\n    question: 'Why is \"network effect\" powerful for platforms like Facebook or WhatsApp?',\n    options: ['More users = higher costs', 'More users = more valuable for each user', 'More users = more complexity', 'More users = more competition'],\n    correctAnswer: 1,\n    explanation: 'Network effects make the product more valuable as more people use it (more friends to connect with).',\n    hint: 'The value increases with more users.',\n    relatedTerm: 'network-effect'\n  },\n  {\n    id: 'q38',\n    question: 'A startup is \"cash flow positive\" when:',\n    options: ['They have investors', 'Money coming in > Money going out', 'They have bank loans', 'Revenue > ₹1 crore'],\n    correctAnswer: 1,\n    explanation: 'Cash flow positive means more money flows into the business than flows out each period.',\n    hint: 'More money in than out.',\n    relatedTerm: 'cash-flow-positive'\n  },\n  {\n    id: 'q39',\n    question: 'Nykaa started online, then opened physical stores. This omnichannel approach helps with:',\n    options: ['Reducing costs', 'Better customer experience', 'Avoiding competition', 'Faster delivery only'],\n    correctAnswer: 1,\n    explanation: 'Omnichannel provides customers multiple ways to interact with the brand for better experience.',\n    hint: 'Multiple channels for better customer experience.',\n    relatedTerm: 'omnichannel'\n  },\n  {\n    id: 'q40',\n    question: 'What does \"bootstrapped to profitability\" mean?',\n    options: ['Used external funding to grow', 'Achieved profitability without external funding', 'Took bank loans', 'Went public'],\n    correctAnswer: 1,\n    explanation: 'Bootstrapped to profitability means reaching profitability using only internal funds, no external investors.',\n    hint: 'Self-funded path to making money.',\n    relatedTerm: 'bootstrapped'\n  },\n  {\n    id: 'q41',\n    question: 'Zerodha disrupted traditional brokers by offering zero brokerage. What type of innovation is this?',\n    options: ['Product Innovation', 'Process Innovation', 'Business Model Innovation', 'Technology Innovation'],\n    correctAnswer: 2,\n    explanation: 'Business model innovation changes how value is created, delivered, or monetized.',\n    hint: 'They changed how brokers make money.',\n    relatedTerm: 'business-model-innovation'\n  },\n  {\n    id: 'q42',\n    question: 'In the context of Shark Tank, what does \"skin in the game\" mean?',\n    options: ['Physical appearance matters', 'Founder has personal investment/risk', 'Wearing expensive clothes', 'Having tattoos'],\n    correctAnswer: 1,\n    explanation: 'Skin in the game means the founder has significant personal investment (money, time, career) at risk.',\n    hint: 'Personal stake and risk in the outcome.',\n    relatedTerm: 'skin-in-the-game'\n  },\n  {\n    id: 'q43',\n    question: 'What is \"runway\" in startup terminology?',\n    options: ['Airport location', 'How long money will last at current burn rate', 'Revenue growth rate', 'Product development time'],\n    correctAnswer: 1,\n    explanation: 'Runway is how many months/years the company can operate with current cash at current spending rate.',\n    hint: 'How long can you fly before landing?',\n    relatedTerm: 'runway'\n  },\n  {\n    id: 'q44',\n    question: 'Bharti Airtel partnered with Netflix for bundled offerings. This strategy is called:',\n    options: ['Acquisition', 'Partnership/Alliance', 'Merger', 'Licensing'],\n    correctAnswer: 1,\n    explanation: 'Strategic partnerships combine complementary strengths without ownership changes.',\n    hint: 'Working together while remaining separate companies.',\n    relatedTerm: 'strategic-partnership'\n  },\n  {\n    id: 'q45',\n    question: 'What is the key difference between angel investors and venture capitalists?',\n    options: ['Angels invest more money', 'VCs are individuals, angels are firms', 'Angels are individuals, VCs are firms with pooled money', 'No difference'],\n    correctAnswer: 2,\n    explanation: 'Angel investors are wealthy individuals; VCs are firms that manage pooled money from institutions.',\n    hint: 'Individual wealth vs. pooled institutional money.',\n    relatedTerm: 'angel-vs-vc'\n  }\n];\n","size_bytes":20169},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/hooks/useQuiz.ts":{"content":"import { useState, useCallback, useMemo } from 'react';\nimport { QuizState, QuizQuestion } from '../types';\n\ninterface BatchQuizState extends QuizState {\n  currentBatch: number;\n  batchScore: number;\n  totalBatches: number;\n  showBatchResults: boolean;\n  usedQuestionIds: string[];\n  totalQuestionsAnswered: number;\n  totalCorrectAnswers: number;\n}\n\nconst QUESTIONS_PER_BATCH = 5;\n\nconst shuffleArray = <T,>(array: T[]): T[] => {\n  const shuffled = [...array];\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return shuffled;\n};\n\nexport const useQuiz = (allQuestions: QuizQuestion[]) => {\n  const [quizState, setQuizState] = useState<BatchQuizState>({\n    currentQuestion: 0,\n    score: 0,\n    answers: [],\n    isComplete: false,\n    showResults: false,\n    currentBatch: 1,\n    batchScore: 0,\n    totalBatches: Math.ceil(allQuestions.length / QUESTIONS_PER_BATCH),\n    showBatchResults: false,\n    usedQuestionIds: [],\n    totalQuestionsAnswered: 0,\n    totalCorrectAnswers: 0\n  });\n\n  const [selectedAnswer, setSelectedAnswer] = useState<number | null>(null);\n  const [showExplanation, setShowExplanation] = useState(false);\n\n  // Get current batch questions (5 random questions not yet used)\n  const currentBatchQuestions = useMemo(() => {\n    const usedIds = quizState.usedQuestionIds || [];\n    const availableQuestions = allQuestions.filter(q => !usedIds.includes(q.id));\n    const shuffledAvailable = shuffleArray(availableQuestions);\n    return shuffledAvailable.slice(0, QUESTIONS_PER_BATCH);\n  }, [allQuestions, quizState.usedQuestionIds]);\n\n  const currentQuestion = currentBatchQuestions[quizState.currentQuestion];\n\n  const selectAnswer = useCallback((answerIndex: number) => {\n    setSelectedAnswer(answerIndex);\n    setShowExplanation(true);\n  }, []);\n\n  const nextQuestion = useCallback(() => {\n    if (selectedAnswer === null || !currentQuestion) return;\n\n    const isCorrect = selectedAnswer === currentQuestion.correctAnswer;\n    const newBatchScore = isCorrect ? quizState.batchScore + 1 : quizState.batchScore;\n    const newTotalCorrect = isCorrect ? quizState.totalCorrectAnswers + 1 : quizState.totalCorrectAnswers;\n    const newAnswers = [...quizState.answers, selectedAnswer];\n    \n    // Check if this is the last question in the current batch\n    if (quizState.currentQuestion < QUESTIONS_PER_BATCH - 1) {\n      // Move to next question in batch\n      setQuizState(prev => ({\n        ...prev,\n        currentQuestion: prev.currentQuestion + 1,\n        batchScore: newBatchScore,\n        totalCorrectAnswers: newTotalCorrect,\n        totalQuestionsAnswered: prev.totalQuestionsAnswered + 1,\n        answers: newAnswers\n      }));\n      setSelectedAnswer(null);\n      setShowExplanation(false);\n    } else {\n      // End of batch - show batch results\n      const newUsedIds = [...quizState.usedQuestionIds, ...currentBatchQuestions.map(q => q.id)];\n      const totalAnswered = quizState.totalQuestionsAnswered + 1;\n      \n      setQuizState(prev => ({\n        ...prev,\n        batchScore: newBatchScore,\n        totalCorrectAnswers: newTotalCorrect,\n        totalQuestionsAnswered: totalAnswered,\n        answers: newAnswers,\n        showBatchResults: true,\n        usedQuestionIds: newUsedIds\n      }));\n    }\n  }, [selectedAnswer, currentQuestion, quizState, currentBatchQuestions]);\n\n  const startNextBatch = useCallback(() => {\n    // Check if there are enough questions for another batch\n    const usedIds = quizState.usedQuestionIds || [];\n    const remainingQuestions = allQuestions.length - usedIds.length;\n    \n    if (remainingQuestions < QUESTIONS_PER_BATCH) {\n      // End quiz if not enough questions remaining\n      setQuizState(prev => ({\n        ...prev,\n        isComplete: true,\n        showResults: true,\n        showBatchResults: false\n      }));\n    } else {\n      // Start next batch\n      setQuizState(prev => ({\n        ...prev,\n        currentQuestion: 0,\n        currentBatch: prev.currentBatch + 1,\n        batchScore: 0,\n        showBatchResults: false,\n        answers: []\n      }));\n      setSelectedAnswer(null);\n      setShowExplanation(false);\n    }\n  }, [allQuestions.length, quizState.usedQuestionIds]);\n\n  const resetQuiz = useCallback(() => {\n    setQuizState({\n      currentQuestion: 0,\n      score: 0,\n      answers: [],\n      isComplete: false,\n      showResults: false,\n      currentBatch: 1,\n      batchScore: 0,\n      totalBatches: Math.ceil(allQuestions.length / QUESTIONS_PER_BATCH),\n      showBatchResults: false,\n      usedQuestionIds: [],\n      totalQuestionsAnswered: 0,\n      totalCorrectAnswers: 0\n    });\n    setSelectedAnswer(null);\n    setShowExplanation(false);\n  }, [allQuestions.length]);\n\n  const progressPercentage = ((quizState.currentQuestion + 1) / QUESTIONS_PER_BATCH) * 100;\n  const usedIds = quizState.usedQuestionIds || [];\n  const remainingQuestions = allQuestions.length - usedIds.length;\n  const canStartNextBatch = remainingQuestions >= QUESTIONS_PER_BATCH;\n\n  return {\n    quizState,\n    currentQuestion,\n    selectedAnswer,\n    showExplanation,\n    progressPercentage,\n    selectAnswer,\n    nextQuestion,\n    startNextBatch,\n    resetQuiz,\n    currentBatchQuestions,\n    remainingQuestions,\n    canStartNextBatch,\n    questionsPerBatch: QUESTIONS_PER_BATCH\n  };\n};\n","size_bytes":5382},"client/src/hooks/useSearch.ts":{"content":"import { useState, useMemo } from 'react';\nimport { BusinessTerm } from '../types';\n\nexport const useSearch = (terms: BusinessTerm[]) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [categoryFilter, setCategoryFilter] = useState<string>('all');\n\n  const filteredTerms = useMemo(() => {\n    let filtered = terms;\n\n    // Apply search filter\n    if (searchQuery.trim()) {\n      const query = searchQuery.toLowerCase();\n      filtered = filtered.filter(term =>\n        term.term.toLowerCase().includes(query) ||\n        term.simpleExplanation.toLowerCase().includes(query) ||\n        term.businessDefinition.toLowerCase().includes(query)\n      );\n    }\n\n    // Apply category filter\n    if (categoryFilter !== 'all') {\n      filtered = filtered.filter(term => term.category === categoryFilter);\n    }\n\n    return filtered;\n  }, [terms, searchQuery, categoryFilter]);\n\n  return {\n    searchQuery,\n    setSearchQuery,\n    categoryFilter,\n    setCategoryFilter,\n    filteredTerms\n  };\n};\n","size_bytes":1001},"client/src/hooks/useSocialShare.ts":{"content":"import { useToast } from './use-toast';\n\nexport interface ShareData {\n  contentType: 'term' | 'quiz_result' | 'achievement';\n  contentId: string;\n  platform: 'twitter' | 'linkedin' | 'facebook' | 'whatsapp' | 'copy';\n  shareData?: any;\n}\n\nexport function useSocialShare() {\n  const { toast } = useToast();\n\n  const generateShareText = (shareData: ShareData): string => {\n    switch (shareData.contentType) {\n      case 'term':\n        const termData = shareData.shareData;\n        return `🦈 Just learned about \"${termData.term}\" on Shark Tank Lingo! \\n\\n\"${termData.simpleExplanation}\"\\n\\nCheck it out: ${window.location.origin}`;\n      \n      case 'quiz_result':\n        const quizData = shareData.shareData;\n        return `🎯 Just scored ${quizData.score}/${quizData.total} on the Shark Tank Business Quiz! \\n\\nTest your entrepreneurial knowledge: ${window.location.origin}`;\n      \n      case 'achievement':\n        const achievementData = shareData.shareData;\n        return `🏆 Achievement Unlocked: ${achievementData.title}! \\n\\n${achievementData.description}\\n\\nJoin me on Shark Tank Lingo: ${window.location.origin}`;\n      \n      default:\n        return `Check out Shark Tank Lingo - Learn business terms the fun way! ${window.location.origin}`;\n    }\n  };\n\n  const generateShareUrl = (shareData: ShareData, platform: string): string => {\n    const text = encodeURIComponent(generateShareText(shareData));\n    const url = encodeURIComponent(window.location.origin);\n    \n    switch (platform) {\n      case 'twitter':\n        return `https://twitter.com/intent/tweet?text=${text}`;\n      \n      case 'linkedin':\n        return `https://www.linkedin.com/sharing/share-offsite/?url=${url}&summary=${text}`;\n      \n      case 'facebook':\n        return `https://www.facebook.com/sharer/sharer.php?u=${url}&quote=${text}`;\n      \n      case 'whatsapp':\n        return `https://api.whatsapp.com/send?text=${text}`;\n      \n      default:\n        return '';\n    }\n  };\n\n  const shareContent = async (shareData: ShareData) => {\n    if (shareData.platform === 'copy') {\n      // Copy to clipboard\n      const text = generateShareText(shareData);\n      try {\n        await navigator.clipboard.writeText(text);\n        toast({\n          title: \"Copied to clipboard!\",\n          description: \"Share text has been copied to your clipboard.\",\n        });\n      } catch (error) {\n        toast({\n          title: \"Copy failed\",\n          description: \"Could not copy to clipboard. Please try again.\",\n          variant: \"destructive\",\n        });\n      }\n    } else {\n      // Open share URL\n      const shareUrl = generateShareUrl(shareData, shareData.platform);\n      if (shareUrl) {\n        window.open(shareUrl, '_blank', 'width=600,height=400');\n        toast({\n          title: \"Shared successfully!\",\n          description: \"Thank you for sharing your progress.\",\n        });\n      }\n    }\n  };\n\n  return {\n    shareContent,\n    generateShareText,\n    isSharing: false,\n  };\n}","size_bytes":2984},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/Home.tsx":{"content":"import { useState, useEffect } from 'react';\nimport Navigation from '@/components/Navigation';\nimport Hero from '@/components/Hero';\nimport GlossarySection from '@/components/GlossarySection';\nimport ThemeCollections from '@/components/ThemeCollections';\nimport QuizSection from '@/components/QuizSection';\nimport BlogSection from '@/components/BlogSection';\nimport Newsletter from '@/components/Newsletter';\nimport Footer from '@/components/Footer';\nimport businessWallImage from '@assets/ChatGPT Image Aug 30, 2025, 06_23_35 PM_1756558427695.png';\n\nexport default function Home() {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Handle section scrolling when navigating from other pages\n  useEffect(() => {\n    const targetSection = sessionStorage.getItem('scrollToSection');\n    if (targetSection) {\n      // Small delay to ensure the page has rendered\n      setTimeout(() => {\n        const element = document.getElementById(targetSection);\n        element?.scrollIntoView({ behavior: 'smooth' });\n        sessionStorage.removeItem('scrollToSection');\n      }, 100);\n    }\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      <Hero searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\n      {/* Business Terms Wall Illustration */}\n      <section className=\"bg-gradient-to-b from-gray-50 to-white py-16 pt-[50px] pb-[50px]\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-8\">\n            <h2 className=\"text-3xl md:text-4xl font-serif font-bold text-shark-navy mb-4\">\n              Breaking Down the <span className=\"text-[#face00]\">Business Wall</span>\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Every entrepreneur faces a wall of complex business terms. We're here to help you decode them, one term at a time.\n            </p>\n          </div>\n          \n          <div className=\"flex justify-center mb-8\">\n            <img \n              src={businessWallImage} \n              alt=\"Person looking at a wall filled with business term placards including EBITDA, Valuation, Equity, and other startup terminology\" \n              className=\"w-full max-w-5xl h-auto rounded-xl shadow-2xl object-cover\"\n              data-testid=\"business-wall-illustration\"\n            />\n          </div>\n          \n          <div className=\"text-center\">\n        \n            <p className=\"text-gray-600 font-medium\">\n              Join thousands of learners who've already decoded the language of business\n            </p>\n          </div>\n        </div>\n      </section>\n      {/* Featured Quote Section */}\n      <section className=\"bg-white py-16 pt-[0px] pb-[0px]\">\n        <div className=\"max-w-4xl mx-auto text-center px-4 sm:px-6 lg:px-8\">\n          <blockquote className=\"text-2xl md:text-3xl font-serif italic text-shark-navy mb-4\">\"Business mein clarity hi sabse badi currency hai!\"</blockquote>\n          <cite className=\"text-shark-blue font-semibold text-[16px]\">-Vineeta Singh, CEO & Co-founder, Sugar Cosmetics</cite>\n        </div>\n      </section>\n      <GlossarySection />\n      <ThemeCollections />\n      <QuizSection />\n      <BlogSection />\n      <Newsletter />\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":3285},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/types/index.ts":{"content":"export interface CaseStudy {\n  introductionContext: string;\n  sharkTankPitchReference: {\n    pitchDescription: string;\n    startupDetails: string;\n  };\n  applicationAnalysis: {\n    howTermWasApplied: string;\n    founderPerspective: string;\n    sharkPerspective: string;\n  };\n  outcomeInsights: {\n    whatHappened: string;\n    impactOnFounder: string;\n    dealOutcome: string;\n  };\n  actionableTakeaways: {\n    practicalLessons: string[];\n    mistakesToAvoid: string[];\n  };\n}\n\nexport interface BusinessTerm {\n  id: string;\n  term: string;\n  category: 'investor-vc-lingo' | 'startup-metrics' | 'deal-structures' | 'valuation-funding' | \n           'pitch-strategy' | 'product-operations' | 'roles-titles' | 'legal-compliance' | \n           'marketing-growth' | 'market-business-models' | 'financial-metrics' | 'business-accounting';\n  icon: string;\n  businessDefinition: string;\n  simpleExplanation: string;\n  sharkTankExample: string;\n  sharkName: string;\n  realWorldExample: string;\n  difficulty: 'beginner' | 'intermediate' | 'advanced';\n  relatedTerms?: string[];\n  metaTitle?: string;\n  metaDescription?: string;\n  caseStudy?: CaseStudy;\n}\n\nexport interface QuizQuestion {\n  id: string;\n  question: string;\n  options: string[];\n  correctAnswer: number;\n  explanation: string;\n  hint: string;\n  relatedTerm?: string;\n}\n\nexport interface QuizState {\n  currentQuestion: number;\n  score: number;\n  answers: number[];\n  isComplete: boolean;\n  showResults: boolean;\n}\n\nexport interface BlogPost {\n  id: string;\n  title: string;\n  excerpt: string;\n  date: string;\n  category: string;\n  image: string;\n  slug: string;\n}\n\nexport interface ThemeCollection {\n  id: string;\n  title: string;\n  description: string;\n  emoji: string;\n  termCount: number;\n  duration: string;\n  color: string;\n  terms: string[];\n}\n","size_bytes":1802},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/TermDetail.tsx":{"content":"import { useParams, Link } from 'wouter';\nimport { businessTerms, businessCategories } from '@/data/businessTerms';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { ArrowLeft, TrendingUp, PieChart, DollarSign, Users, Rocket, BookOpen, Target, Lightbulb, Home } from 'lucide-react';\nimport React from 'react';\nimport Navigation from '@/components/Navigation';\nimport Footer from '@/components/Footer';\nimport { renderFormattedText } from '@/utils/formatting';\n\nconst categoryIcons = {\n  'investor-vc-lingo': TrendingUp,\n  'startup-metrics': PieChart,\n  'deal-structures': DollarSign,\n  'valuation-funding': TrendingUp,\n  'pitch-strategy': Target,\n  'product-tech': Rocket,\n  'roles-titles': Users,\n  'legal-compliance': BookOpen,\n  'marketing-growth': Users,\n  'testing-feedback': Target,\n  'market-business-models': PieChart,\n  'financial-accounting': DollarSign,\n  'startup-culture': Rocket,\n  'operations-supply': Rocket,\n  'product-development': Rocket,\n  'customer-growth': Users,\n  'funding-investment': TrendingUp\n};\n\n\nexport default function TermDetail() {\n  const params = useParams();\n  const termId = params.id;\n  \n  const term = businessTerms.find(t => t.id === termId);\n\n  if (!term) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Navigation />\n        <div className=\"container mx-auto px-4 py-16 text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\">Term Not Found</h1>\n          <p className=\"text-gray-600 mb-8\">The business term you're looking for doesn't exist.</p>\n          <Link href=\"/\">\n            <Button>Return Home</Button>\n          </Link>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n\n  const IconComponent = categoryIcons[term.category] || DollarSign;\n  const category = businessCategories[term.category];\n  const gradientClass = category?.color || 'from-gray-400 to-gray-600';\n\n  // Generate structured data for SEO\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"DefinedTerm\",\n    \"name\": term.term,\n    \"description\": term.businessDefinition,\n    \"inDefinedTermSet\": {\n      \"@type\": \"DefinedTermSet\",\n      \"name\": category?.name || \"Business Terms\",\n      \"description\": category?.description || \"Business terminology for entrepreneurs\"\n    },\n    \"url\": `${window.location.origin}/term/${term.id}`,\n    \"about\": {\n      \"@type\": \"Thing\",\n      \"name\": \"Business and Entrepreneurship\"\n    },\n    \"example\": term.realWorldExample,\n    \"additionalType\": \"https://schema.org/BusinessFunction\"\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Structured Data for SEO */}\n      <script\n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{ __html: JSON.stringify(structuredData) }}\n      />\n      <Navigation />\n      \n      <main className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"mb-6\">\n          <div className=\"flex gap-2\">\n            <Link href=\"/\">\n              <Button variant=\"ghost\" className=\"mb-4\">\n                <Home className=\"mr-2 h-4 w-4\" />\n                Home\n              </Button>\n            </Link>\n            <Link href=\"/glossary\">\n              <Button variant=\"ghost\" className=\"mb-4\">\n                <BookOpen className=\"mr-2 h-4 w-4\" />\n                All Categories\n              </Button>\n            </Link>\n            {category && (\n              <Link href={`/glossary/${category.slug}`}>\n                <Button variant=\"ghost\" className=\"mb-4\" data-testid=\"back-to-category\">\n                  <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                  {category.name}\n                </Button>\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {/* Main Term Header */}\n        <article className=\"mb-8\">\n          <Card className=\"bg-white shadow-xl border-0 overflow-hidden\">\n            <CardContent className=\"p-8\">\n            <div className=\"flex items-start justify-between mb-6\">\n              <div className={`bg-gradient-to-br ${gradientClass} rounded-2xl p-6 shadow-lg`}>\n                <IconComponent size={40} className=\"text-white\" />\n              </div>\n              <div className=\"flex gap-2\">\n                {category && (\n                  <Link href={`/glossary/${category.slug}`}>\n                    <Badge className={`bg-gradient-to-r ${gradientClass} text-white px-4 py-2 hover:opacity-90 cursor-pointer`}>\n                      {category.name}\n                    </Badge>\n                  </Link>\n                )}\n                <Badge variant=\"outline\" className=\"px-4 py-2 capitalize\">\n                  {term.difficulty}\n                </Badge>\n              </div>\n            </div>\n            \n            <h1 className=\"text-4xl font-serif font-bold text-shark-navy mb-4\">{term.term}</h1>\n            \n            <p className=\"text-lg text-gray-600\">Master this essential business concept</p>\n            </CardContent>\n          </Card>\n        </article>\n\n        {/* Definitions */}\n        <section className=\"grid gap-6 mb-8\" aria-labelledby=\"definitions-heading\">\n          <h2 id=\"definitions-heading\" className=\"sr-only\">Definitions</h2>\n          <Card className=\"bg-white shadow-lg\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2 text-shark-navy\">\n                <BookOpen className=\"h-5 w-5\" />\n                Business Definition\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-gray-700 text-base leading-relaxed\">{term.businessDefinition}</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-gradient-to-br from-blue-50 to-cyan-50 border-blue-200 shadow-lg\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2 text-shark-navy\">\n                <Lightbulb className=\"h-5 w-5 text-blue-600\" />\n                In Simple Terms\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {renderFormattedText(term.simpleExplanation)}\n            </CardContent>\n          </Card>\n        </section>\n\n        {/* Shark Tank Example */}\n        <section aria-labelledby=\"shark-tank-example\">\n          <Card className=\"bg-gradient-to-br from-yellow-50 to-orange-50 border-l-4 border-shark-gold shadow-lg mb-6\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-shark-navy\">\n              🦈 <span>Shark Tank Example</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <blockquote className=\"text-gray-800 text-base italic leading-relaxed mb-4\">\n              \"{term.sharkTankExample}\"\n            </blockquote>\n            <p className=\"text-shark-blue font-semibold\">- {term.sharkName}</p>\n          </CardContent>\n        </Card>\n        </section>\n\n        {/* Real World Example */}\n        <section aria-labelledby=\"real-world-example\">\n          <Card className=\"bg-gradient-to-br from-green-50 to-emerald-50 border-l-4 border-green-500 shadow-lg mb-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-shark-navy\">\n              🌍 <span>Real World Application</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {renderFormattedText(term.realWorldExample)}\n          </CardContent>\n        </Card>\n        </section>\n\n        {/* Case Study Section */}\n        <Card className=\"bg-white shadow-xl border-0 mb-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-shark-navy\">\n              <Target className=\"h-5 w-5\" />\n              Case Study: {term.term} in Shark Tank India\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-6\">\n              {/* Introduction to Context */}\n              <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 p-6 rounded-lg border-l-4 border-blue-500\">\n                <h4 className=\"font-semibold text-shark-navy mb-3 text-lg\">Introduction to Context</h4>\n                <p className=\"text-gray-700 text-base leading-relaxed\">\n                  {term.caseStudy?.introductionContext || getCaseStudyScenario(term)}\n                </p>\n              </div>\n\n              {/* Real Shark Tank Pitch Reference */}\n              <div className=\"bg-gradient-to-r from-yellow-50 to-orange-50 p-6 rounded-lg border-l-4 border-yellow-500\">\n                <h4 className=\"font-semibold text-shark-navy mb-3 text-lg flex items-center\">\n                  🦈 Real Shark Tank Pitch Reference\n                </h4>\n                <div className=\"space-y-3\">\n                  <p className=\"text-gray-700 text-base leading-relaxed\">\n                    <strong>Pitch:</strong> {term.caseStudy?.sharkTankPitchReference?.pitchDescription || \"During a memorable pitch on Shark Tank India, entrepreneurs demonstrated this term's critical importance in business negotiations.\"}\n                  </p>\n                  <p className=\"text-gray-700 text-base leading-relaxed\">\n                    <strong>Startup Details:</strong> {term.caseStudy?.sharkTankPitchReference?.startupDetails || \"The startup's situation perfectly illustrated how understanding this term can make or break investment discussions.\"}\n                  </p>\n                </div>\n              </div>\n\n              {/* How the Term Was Applied */}\n              <div className=\"bg-gradient-to-r from-purple-50 to-pink-50 p-6 rounded-lg border-l-4 border-purple-500\">\n                <h4 className=\"font-semibold text-shark-navy mb-3 text-lg\">How the Term Was Applied</h4>\n                <div className=\"space-y-4\">\n                  <p className=\"text-gray-700 text-base leading-relaxed\">\n                    {term.caseStudy?.applicationAnalysis?.howTermWasApplied || \"The term played a crucial role in shaping the negotiation dynamics and investment decision-making process.\"}\n                  </p>\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <h5 className=\"font-medium text-green-700 mb-2\">👥 Founder's Perspective</h5>\n                      <p className=\"text-gray-600 text-base\">\n                        {term.caseStudy?.applicationAnalysis?.founderPerspective || \"The founders utilized this concept to strengthen their position and demonstrate business acumen.\"}\n                      </p>\n                    </div>\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <h5 className=\"font-medium text-blue-700 mb-2\">🦈 Shark's Perspective</h5>\n                      <p className=\"text-gray-600 text-base\">\n                        {term.caseStudy?.applicationAnalysis?.sharkPerspective || \"The sharks evaluated this aspect carefully as part of their investment decision criteria.\"}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Outcome & Insights */}\n              <div className=\"bg-gradient-to-r from-green-50 to-emerald-50 p-6 rounded-lg border-l-4 border-green-500\">\n                <h4 className=\"font-semibold text-shark-navy mb-3 text-lg\">Outcome & Insights</h4>\n                <div className=\"space-y-3\">\n                  <p className=\"text-gray-700 text-base leading-relaxed\">\n                    <strong>What Happened:</strong> {term.caseStudy?.outcomeInsights?.whatHappened || \"The discussion around this term significantly influenced the final negotiation outcome.\"}\n                  </p>\n                  <p className=\"text-gray-700 text-base leading-relaxed\">\n                    <strong>Impact on Founder:</strong> {term.caseStudy?.outcomeInsights?.impactOnFounder || \"This term either strengthened or weakened the founder's negotiating position.\"}\n                  </p>\n                  <p className=\"text-gray-700 text-base leading-relaxed\">\n                    <strong>Deal Outcome:</strong> {term.caseStudy?.outcomeInsights?.dealOutcome || \"The final deal structure reflected the importance of understanding this business concept.\"}\n                  </p>\n                </div>\n              </div>\n\n              {/* Actionable Takeaways */}\n              <div className=\"bg-gradient-to-r from-orange-50 to-red-50 p-6 rounded-lg border-l-4 border-orange-500\">\n                <h4 className=\"font-semibold text-shark-navy mb-3 text-lg\">📝 Actionable Takeaways</h4>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <h5 className=\"font-medium text-green-700 mb-3\">✅ Practical Lessons</h5>\n                    <ul className=\"list-disc list-inside text-gray-700 space-y-2\">\n                      {(term.caseStudy?.actionableTakeaways?.practicalLessons || getPracticalTips(term)).map((lesson, index) => (\n                        <li key={index} className=\"text-base leading-relaxed\">{lesson}</li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div>\n                    <h5 className=\"font-medium text-red-700 mb-3\">❌ Mistakes to Avoid</h5>\n                    <ul className=\"list-disc list-inside text-gray-700 space-y-2\">\n                      {(term.caseStudy?.actionableTakeaways?.mistakesToAvoid || [\n                        `Don't overlook the importance of ${term.term.toLowerCase()} in business discussions`,\n                        \"Avoid making decisions without fully understanding the implications\",\n                        \"Don't negotiate without proper preparation and research\"\n                      ]).map((mistake, index) => (\n                        <li key={index} className=\"text-base leading-relaxed\">{mistake}</li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Related Terms */}\n        <section aria-labelledby=\"related-terms\">\n          <Card className=\"bg-white shadow-lg mb-8\">\n          <CardHeader>\n            <CardTitle className=\"text-shark-navy\">Related Terms You Should Know</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {getRelatedTerms(term).map((relatedTerm) => (\n                <Link key={relatedTerm.id} href={`/term/${relatedTerm.id}`} replace>\n                  <div className=\"p-4 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors cursor-pointer\">\n                    <h4 className=\"font-semibold text-shark-navy\">{relatedTerm.term}</h4>\n                    <p className=\"text-base text-gray-600 mt-1\">{relatedTerm.simpleExplanation.substring(0, 80)}...</p>\n                  </div>\n                </Link>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n        </section>\n\n        <div className=\"text-center\">\n          <Link href=\"/glossary\">\n            <Button className=\"bg-shark-blue hover:bg-shark-teal text-white px-8 py-3\" data-testid=\"explore-more-terms\">\n              Explore More Terms\n            </Button>\n          </Link>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n\n// Helper functions for case studies\nfunction getCaseStudyScenario(term: { id: string; term: string }): string {\n  const scenarios: { [key: string]: string } = {\n    'valuation': \"A food delivery startup is seeking ₹2 crores for 10% equity. The sharks need to determine if the company is actually worth ₹20 crores. They look at monthly revenue (₹50 lakhs), growth rate (25% month-over-month), and market size to make their decision.\",\n    'equity': \"Two friends start a tech company. Friend A invests ₹10 lakhs and works full-time, while Friend B invests ₹5 lakhs and works part-time. They need to decide how to split equity fairly between them.\",\n    'revenue-model': \"A subscription box company is struggling with customer retention. They're considering switching from a monthly subscription model to a pay-per-order model to reduce churn.\",\n    'customer-acquisition-cost': \"An e-commerce fashion brand spends ₹15 lakhs on digital marketing monthly and acquires 3,000 new customers. Their CAC is ₹500, but their average order value is only ₹800.\",\n    'scalability': \"A home food delivery service operates successfully in one city with 50 orders per day. Now they want to expand to 10 cities and handle 5,000 orders daily.\",\n    'burn-rate': \"A fintech startup raised ₹5 crores six months ago. They're spending ₹80 lakhs monthly on salaries, office rent, and marketing with only ₹2 crores left in the bank.\"\n  };\n  return scenarios[term.id] || `A practical scenario involving ${term.term} that demonstrates its real-world application in business decision-making.`;\n}\n\nfunction getCaseStudyInsights(term: { id: string; term: string }): string[] {\n  const insights: { [key: string]: string[] } = {\n    'valuation': [\n      \"Revenue multiples vary by industry - tech companies often trade at 10-20x revenue\",\n      \"Growth rate is more important than current revenue for valuation\",\n      \"Market size and total addressable market significantly impact valuation\"\n    ],\n    'equity': [\n      \"Equity splits should reflect both financial and non-financial contributions\",\n      \"Vesting schedules protect the company if founders leave early\",\n      \"Future funding rounds will dilute existing equity percentages\"\n    ],\n    'revenue-model': [\n      \"Subscription models provide predictable recurring revenue\",\n      \"Different models work better for different customer segments\",\n      \"Hybrid models can maximize revenue from various user types\"\n    ]\n  };\n  return insights[term.id] || [\n    `Understanding ${term.term} is crucial for business success`,\n    \"Real-world application requires careful consideration of context\",\n    \"Regular monitoring and adjustment of strategies is important\"\n  ];\n}\n\nfunction getPracticalTips(term: { id: string; term: string }): string[] {\n  const tips: { [key: string]: string[] } = {\n    'valuation': [\n      \"Research comparable companies in your industry for benchmarking\",\n      \"Focus on growth metrics, not just revenue numbers\",\n      \"Be prepared to justify your valuation with concrete data\"\n    ],\n    'equity': [\n      \"Document all equity agreements clearly from the beginning\",\n      \"Consider using equity management software to track ownership\",\n      \"Plan for future funding rounds and potential dilution\"\n    ],\n    'revenue-model': [\n      \"Test different pricing models with small customer segments first\",\n      \"Monitor customer lifetime value across different models\",\n      \"Be ready to pivot your model based on market feedback\"\n    ]\n  };\n  return tips[term.id] || [\n    `Apply ${term.term} principles gradually in your business`,\n    \"Start with small experiments before full implementation\",\n    \"Seek advice from experienced entrepreneurs or mentors\"\n  ];\n}\n\nfunction getRelatedTerms(term: { id: string; category: string; relatedTerms?: string[] }): typeof businessTerms {\n  // First try to get terms from relatedTerms array if specified\n  if (term.relatedTerms && term.relatedTerms.length > 0) {\n    const related = businessTerms.filter(t => term.relatedTerms!.includes(t.id));\n    if (related.length > 0) {\n      return related.slice(0, 4);\n    }\n  }\n  \n  // Fallback to terms from the same category, excluding the current term\n  return businessTerms\n    .filter(t => t.category === term.category && t.id !== term.id)\n    .slice(0, 4);\n}","size_bytes":19721},"client/src/data/detailedBlogPosts.ts":{"content":"export interface DetailedBlogPost {\n  id: string;\n  title: string;\n  excerpt: string;\n  date: string;\n  category: string;\n  image: string;\n  categoryColor: string;\n  content: string;\n  author: string;\n  readTime: string;\n  tags: string[];\n}\n\nexport const detailedBlogPosts: DetailedBlogPost[] = [\n  {\n    id: \"shark-tank-terms\",\n    title: \"Top 5 Terms Every Shark Tank Pitcher Should Know\",\n    excerpt:\n      \"Analysis of the most commonly used business terms in successful Shark Tank India pitches and their impact on deal outcomes.\",\n    date: \"Jan 15, 2024\",\n    category: \"Analysis\",\n    image:\n      \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    categoryColor: \"bg-shark-blue/10 text-shark-blue\",\n    author: \"Shark Tank Lingo Team\",\n    readTime: \"8 min read\",\n    tags: [\"Shark Tank\", \"Pitching\", \"Terminology\", \"Success\"],\n    content: `After analyzing over 300 successful pitches from Shark Tank India across 3 seasons, we have identified the 5 most crucial business terms that can make or break your pitch. Understanding these terms is not just about vocabulary—it's about demonstrating business acumen that sharks respect and investors worldwide recognize.\n\n**1. Valuation: The Foundation of Every Deal**\n\nThis is literally the first question every shark asks. Your valuation justification can determine if you get a deal or get demolished. In the Indian context, valuation discussions are particularly nuanced due to our diverse market conditions.\n\n**Real-World Example: The Jugaad Patches Success Story**\nWhen Jugaad Patches pitched in Season 2, they asked for ₹75 lakhs for 15% equity, valuing their company at ₹5 crores. The sharks initially balked, but when founder Sanchit Garg showed:\n- Monthly revenue of ₹8 lakhs with 40% month-over-month growth\n- Patent-pending technology with global licensing potential  \n- Contracts with 3 major Indian automotive companies (Mahindra, Tata Motors, Bajaj Auto)\n- Export orders from 12 countries worth ₹2.5 crores\n\nThe sharks realized the valuation was justified. Vineeta Singh invested ₹75 lakhs for 15% equity, validating their original ask.\n\n**Global Comparison**: While Silicon Valley startups might get 10-15x revenue multiples, Indian B2B companies typically see 3-5x revenue multiples, making Jugaad Patches' 7.5x multiple impressive for the Indian market.\n\n**2. Customer Acquisition Cost (CAC): The Make-or-Break Metric**\n\nIf your CAC is higher than your customer lifetime value (CLV), you're burning money with every sale. This is especially critical in price-sensitive markets like India.\n\n**Indian Context Examples**:\n- **Zomato's Early Days**: Their CAC was ₹180 per customer in 2015, but their average order value was only ₹250. They survived because of high repeat rates (65% monthly) and gradually improved unit economics.\n- **Paytm's Strategy**: Spent ₹500+ per customer during demonetization but achieved a CLV of ₹1,200 through cross-selling financial services.\n- **Flipkart's Learning**: Discovered that customers acquired through TV ads (₹120 CAC) had 2x higher retention than those from social media ads (₹45 CAC).\n\n**3. Unit Economics: The Truth Behind Revenue**\n\nYou can have ₹1 crore revenue and still be losing money on every sale. Sharks have become extremely focused on unit economics post-pandemic, especially after seeing many high-revenue startups collapse.\n\n**4. Total Addressable Market (TAM): Your Growth Potential**\n\nSharks invest in businesses that can scale massively. A small TAM means limited growth potential, but India's large population can make even niche markets significant.\n\n**5. Monthly Recurring Revenue (MRR): The SaaS Gold Standard**\n\nRecurring revenue is valued 5-10x higher than one-time sales revenue because it's predictable and creates compounding growth. Understanding these terms with Indian context can make your pitch stand out globally.`,\n  },\n  {\n    id: \"cac-case-study\",\n    title: \"How Understanding CAC Changed This Startup's Fortune\",\n    excerpt:\n      \"A deep dive into how one entrepreneur's improved understanding of Customer Acquisition Cost led to a successful deal.\",\n    date: \"Jan 12, 2024\",\n    category: \"Case Study\",\n    image:\n      \"https://images.unsplash.com/photo-1552664730-d307ca884978?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    categoryColor: \"bg-green-100 text-green-600\",\n    author: \"Business Strategy Team\",\n    readTime: \"12 min read\",\n    tags: [\"CAC\", \"Case Study\", \"Customer Acquisition\", \"Success Story\"],\n    content: `Understanding Customer Acquisition Cost (CAC) can literally transform your business from a cash-burning liability into an investment-worthy success story. This is the remarkable journey of how one entrepreneur turned complete Shark Tank rejection into a ₹2 crore funding victory through CAC mastery.\n\n**The Original Disaster: When Numbers Lie**\n\nMeet Priya Sharma, founder of EcoClean, a sustainable home cleaning products startup from Pune. When she first entered the Shark Tank, her pitch seemed solid on paper:\n\n- Monthly revenue of ₹8 lakhs\n- Customer base of 3,000 active users\n- 35% month-over-month growth rate\n- Ask: ₹50 lakhs for 15% equity\n\nBut when Aman Gupta asked the critical question—\"Customer acquisition cost kya hai?\"—everything unraveled.\n\n**\"₹300-400 per customer,\" Priya confidently replied.**\n\nWith an average first-order value of ₹250, every shark immediately saw the fatal flaw. Within 5 minutes, all sharks were out.\n\n**Real-World Example: The Brutal CAC Reality Check**\n\nAfter the crushing rejection, Priya hired a business consultant who revealed the shocking truth. Her \"₹300-400 CAC\" was dangerously incomplete:\n\n**Complete CAC Breakdown:**\n- Paid advertising: ₹180\n- Content creation and design: ₹45\n- Sales team commission and time: ₹85\n- Product sampling program: ₹95\n- Technology and analytics tools: ₹25\n- Failed campaign costs (allocated): ₹70\n- Returns, refunds, and customer service: ₹40\n\n**True CAC: ₹540 per customer**\n\nWith a first-order value of ₹250, EcoClean was **losing ₹290 on every new customer**. No wonder the sharks ran.\n\n**The 6-Month Transformation Strategy**\n\nArmed with brutal honesty, Priya systematically optimized every aspect of her customer acquisition:\n\n**1. Channel Performance Analysis**\n\nShe discovered her best-performing channels:\n- WhatsApp referral program: ₹45 CAC with 75% repeat purchase rate\n- Local community events: ₹85 CAC with 60% repeat rate\n- Apartment society partnerships: ₹120 CAC with 55% repeat rate\n\n**2. Customer Lifetime Value Optimization**\n\nBy improving product packaging and introducing subscription models, she increased:\n- Average order value from ₹250 to ₹420\n- Customer lifetime value from ₹400 to ₹1,650\n- Repeat purchase rate from 25% to 65%\n\n**The Triumphant Return: Numbers That Sharks Love**\n\nSix months later, Priya returned to Shark Tank with completely transformed metrics:\n\n- **Blended CAC**: ₹125 (78% improvement)\n- **Average order value**: ₹420 (68% increase)\n- **Customer lifetime value**: ₹1,650 (312% improvement)\n- **CAC payback period**: 1.2 months\n- **Monthly revenue**: ₹18 lakhs (125% growth)\n\n**Result**: Vineeta Singh invested ₹75 lakhs for 12% equity—50% more money for 3% less equity than her original ask.\n\n**Global Comparison: Indian vs. Silicon Valley CAC**\n\nWhile Silicon Valley D2C companies often accept CAC payback periods of 6-12 months, Indian market dynamics demand faster returns due to lower customer lifetime values and cash flow constraints. Priya's 1.2-month payback period is exceptional for the Indian market.\n\n**Key Takeaways for Entrepreneurs**\n\n**1.** Calculate **true CAC** including all hidden costs—advertising, content, sales time, samples, failed campaigns, and customer service.\n\n**2.** Focus on **high-performing channels** with natural network effects rather than paid advertising.\n\n**3.** Optimize **customer lifetime value** through product packaging, subscriptions, and retention strategies.\n\n**4.** Achieve **CAC payback periods under 3 months** for sustainable Indian market growth.\n\n**5.** Track **unit economics religiously**—profitable unit economics are non-negotiable for shark investments.`,\n  },\n  {\n    id: \"shark-language\",\n    title: \"Decoding Shark Language: What They Really Mean\",\n    excerpt:\n      \"Understanding the subtle meanings behind common phrases used by Shark Tank India judges during negotiations.\",\n    date: \"Jan 10, 2024\",\n    category: \"Guide\",\n    image:\n      \"https://images.unsplash.com/photo-1551288049-bebda4e38f71?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    categoryColor: \"bg-purple-100 text-purple-600\",\n    author: \"Negotiation Expert Team\",\n    readTime: \"10 min read\",\n    tags: [\"Shark Tank\", \"Negotiation\", \"Communication\", \"Business Language\"],\n    content: `After analyzing over 100 episodes of Shark Tank India and 500+ pitch interactions, we've decoded the secret language that sharks use during negotiations. Like seasoned poker players, they rarely say exactly what they mean. Understanding this coded communication can be the difference between securing life-changing funding and walking away empty-handed.\n\n**1. Namita Thapar: The Strategic Communicator**\n\nAs Executive Director of Emcure Pharmaceuticals, Namita brings pharmaceutical industry expertise and strategic thinking to every deal evaluation.\n\n**What She Says**: \"This is interesting, but...\"\n**What She Really Means**: She has identified potential but needs concrete data and market validation before committing. This is your cue to provide specific metrics and proof points.\n\n**What She Says**: \"I like your passion, but where are the numbers?\"\n**What She Really Means**: Passion alone won't secure funding—demonstrate business acumen through solid financials, customer acquisition data, and strategic planning.\n\n**Real-World Example**: When Revamp Moto pitched their bike modification service, Namita said \"interesting concept\" but asked for unit economics. The founders provided detailed breakdowns showing ₹15,000 average revenue per customer with ₹3,500 CAC, leading to her ₹1 crore investment.\n\n**2. Aman Gupta: The Growth and Scale Expert**\n\nAs co-founder of boAt, Aman evaluates every business through the lens of massive scalability and digital marketing prowess.\n\n**What He Says**: \"Yeh scalable hai?\"\n**What He Really Means**: Can this become a ₹1000+ crore business with exponential growth potential? He's looking for businesses with network effects or viral growth mechanisms.\n\n**What He Says**: \"Customer acquisition strategy kya hai?\"\n**What He Really Means**: Do you understand digital marketing, influencer partnerships, and cost-effective scaling beyond traditional advertising?\n\n**Real-World Example**: During the Skippi Ice Pops pitch, Aman's question about scalability led to discussions about franchise models and distribution networks, ultimately resulting in his investment because he saw 10x growth potential.\n\n**3. Vineeta Singh: The Operations and Unit Economics Expert**\n\nCEO of SUGAR Cosmetics, Vineeta focuses intensely on operational efficiency and sustainable business models.\n\n**What She Says**: \"Unit economics dikhao\"\n**What She Really Means**: Prove you understand profitable operations fundamentals. She wants to see positive unit economics from day one, not \"we'll figure it out later.\"\n\n**What She Says**: \"Customer retention kaisa hai?\"\n**What She Really Means**: Are you building a brand with loyal customers or just pushing products? She values businesses with high repeat purchase rates and strong customer lifetime value.\n\n**Global Comparison: Indian vs. International Shark Communication**\n\nIndian sharks emphasize **relationship building** and **mentorship value** more than their American counterparts. They often ask about family support and long-term vision, reflecting India's relationship-centric business culture.\n\n**4. Peyush Bansal: The Technology and Innovation Strategist**\n\nAs founder of Lenskart, Peyush evaluates the technology angle and data-driven decision making in every business.\n\n**What He Says**: \"Technology kya role play kar raha hai?\"\n**What He Really Means**: How is technology your competitive advantage? He's looking for businesses where technology creates barriers to entry or significant efficiency gains.\n\n**What He Says**: \"Data insights kya mil rahe hain?\"\n**What He Really Means**: Are you making data-driven decisions? He values businesses that can leverage customer data for competitive advantages and informed growth strategies.\n\n**5. Decoding the Cultural Nuances**\n\nUnderstanding Indian business communication requires recognizing these cultural priorities:\n\n- **Relationship building** comes before deal-making\n- **Long-term partnership** mindset over quick exits\n- **Family and social impact** considerations in business decisions\n- **Local market understanding** and cultural sensitivity\n\n**Success Patterns: What Actually Works**\n\nSuccessful entrepreneurs who secure deals demonstrate:\n\n- **Direct answers** supported by specific data points\n- **Acknowledgment of gaps** showing self-awareness and coachability  \n- **Local market insights** proving deep understanding of Indian consumers\n- **Clear, specific asks** with well-justified equity percentages\n\n**Key Takeaways for Entrepreneurs**\n\n**1.** Prepare for **indirect questioning**—sharks test your knowledge through seemingly casual conversation.\n\n**2.** Back every claim with **specific numbers** and real customer examples.\n\n**3.** Show **cultural awareness** and understanding of Indian market dynamics.\n\n**4.** Demonstrate **coachability** by acknowledging areas where you need guidance.\n\n**5.** Focus on **substance over style**—sharks value data-driven thinking over passionate presentations.`,\n  },\n];\n","size_bytes":13880},"client/src/data/detailedLearningPaths.ts":{"content":"export interface DetailedLearningPath {\n  id: string;\n  title: string;\n  description: string;\n  icon: string;\n  termCount: number;\n  duration: string;\n  gradient: string;\n  iconColor: string;\n  level: 'Beginner' | 'Intermediate' | 'Advanced';\n  targetAudience: string;\n  detailedContent: {\n    overview: string;\n    objectives: string[];\n    curriculum: {\n      module: string;\n      topics: string[];\n      duration: string;\n      keyTerms: string[];\n    }[];\n    realWorldApplications: string[];\n    caseStudies: {\n      title: string;\n      company: string;\n      challenge: string;\n      solution: string;\n      outcome: string;\n    }[];\n    practicalExercises: {\n      title: string;\n      description: string;\n      expectedOutcome: string;\n    }[];\n    completion: {\n      certificate: string;\n      skills: string[];\n      careerPaths: string[];\n    };\n  };\n}\n\nexport const detailedLearningPaths: DetailedLearningPath[] = [\n  {\n    id: 'teen-essentials',\n    title: 'Business Terms Every Teen Should Know',\n    description: 'Essential business vocabulary for students and young entrepreneurs starting their journey.',\n    icon: '🎓',\n    termCount: 15,\n    duration: '30 mins',\n    gradient: 'from-blue-400 to-blue-600',\n    iconColor: 'text-white',\n    level: 'Beginner',\n    targetAudience: 'Students (14-19 years), First-time entrepreneurs, College students',\n    detailedContent: {\n      overview: `\nDesigned specifically for Indian teenagers and young adults who are curious about business but intimidated by complex jargon. This learning path transforms confusing business terms into simple, relatable concepts using examples from popular Indian brands, social media platforms, and everyday scenarios.\n\nWhether you're a Class 10 student thinking about starting a small business, a college freshman considering entrepreneurship, or a young adult trying to understand financial news, this course makes business language accessible and exciting.\n      `,\n      objectives: [\n        'Understand 15 fundamental business terms that appear in 80% of business conversations',\n        'Connect business concepts to familiar Indian brands and everyday experiences',\n        'Build confidence to participate in business discussions and understand financial news',\n        'Develop foundation knowledge for future entrepreneurial ventures',\n        'Learn to identify business opportunities in daily life using proper terminology'\n      ],\n      curriculum: [\n        {\n          module: 'Money & Value Basics',\n          topics: [\n            'Revenue vs Profit (Why Zomato can have huge sales but still lose money)',\n            'Valuation (How Instagram was worth ₹72,000 crores before making profit)',\n            'Investment vs Expense (Why buying a laptop for your YouTube channel is investment)',\n            'ROI - Return on Investment (Measuring if your tuition classes are worth the money)'\n          ],\n          duration: '10 minutes',\n          keyTerms: ['Revenue', 'Profit', 'Valuation', 'Investment', 'ROI']\n        },\n        {\n          module: 'Customer & Marketing Fundamentals',\n          topics: [\n            'Target Audience (Why Myntra ads are different from Amazon ads)',\n            'Customer Acquisition (How Paytm got its first 1 crore users)',\n            'Brand vs Product (Why people pay more for Nike than local shoes)',\n            'Market Share (Understanding Jio vs Airtel competition)'\n          ],\n          duration: '8 minutes',\n          keyTerms: ['Target Audience', 'Customer Acquisition', 'Brand', 'Market Share']\n        },\n        {\n          module: 'Business Growth & Strategy',\n          topics: [\n            'Scalability (How one WhatsApp can serve 400 crore users)',\n            'Competitive Advantage (Why Google remains #1 search engine)',\n            'Partnerships (How PhonePe partnered with Flipkart to grow)',\n            'Market Research (How Amul decides to launch new flavors)'\n          ],\n          duration: '8 minutes',\n          keyTerms: ['Scalability', 'Competitive Advantage', 'Partnerships', 'Market Research']\n        },\n        {\n          module: 'Modern Business Models',\n          topics: [\n            'Subscription Model (Netflix, Spotify, and why they work)',\n            'E-commerce (Understanding how Amazon makes money)',\n            'Platform Business (How Uber connects drivers and riders for profit)'\n          ],\n          duration: '4 minutes',\n          keyTerms: ['Subscription Model', 'E-commerce', 'Platform Business']\n        }\n      ],\n      realWorldApplications: [\n        'Analyzing your favorite YouTuber\\'s business model and revenue streams',\n        'Understanding why some apps are free (Instagram) while others charge (Netflix)',\n        'Evaluating local business opportunities using proper terminology',\n        'Making informed decisions about college courses based on ROI thinking',\n        'Understanding financial news and business articles in newspapers',\n        'Participating confidently in family business discussions',\n        'Evaluating part-time job opportunities vs. starting own small business'\n      ],\n      caseStudies: [\n        {\n          title: 'The Teenage Tea Seller Who Understood Target Audience',\n          company: 'Chai Point (inspired by true story)',\n          challenge: 'Prateek, a 17-year-old from Delhi, noticed that his school canteen tea was always crowded but the quality was poor. He wanted to start a better tea stall but didn\\'t know where to begin.',\n          solution: 'Using target audience analysis, Prateek identified that students wanted: (1) Quick service between classes, (2) Affordable prices (₹5-10 per cup), (3) Consistent taste, (4) Instagram-worthy presentation. He positioned his tea cart strategically outside the school gate and offered flavored teas with custom names.',\n          outcome: 'Within 3 months, Prateek was earning ₹15,000 monthly profit. He understood that his target audience (students) had different needs than office workers, leading to his success. Today, he runs 3 tea carts near different schools.'\n        },\n        {\n          title: 'How a College Student Used ROI Thinking',\n          company: 'Personal Case Study - Shreya from Mumbai',\n          challenge: 'Shreya had ₹30,000 saved from birthday money and part-time work. She was confused whether to spend it on an expensive design course (₹25,000) or start a small graphic design business.',\n          solution: 'She applied ROI (Return on Investment) thinking: Course option - Cost: ₹25,000, Potential return: Better job paying ₹5,000 extra monthly. Business option - Cost: ₹20,000 (laptop + software), Potential return: ₹8,000 monthly from freelance clients.',\n          outcome: 'She chose the business option. Within 6 months, she had recovered her investment and was earning ₹12,000 monthly. The ROI framework helped her make a logical decision instead of an emotional one.'\n        },\n        {\n          title: 'The Instagram Page That Became a Brand',\n          company: 'The Minimalist (skincare brand)',\n          challenge: 'Two engineering students, Mohit and Rahul, started an Instagram page sharing skincare tips. They had 50,000 followers but no revenue.',\n          solution: 'They understood the difference between having an audience and having customers. They learned about \"customer acquisition cost\" and \"lifetime value.\" Instead of selling random products, they created their own skincare line targeting their specific audience - young Indians looking for affordable, science-based skincare.',\n          outcome: 'Today, The Minimalist is worth over ₹100 crores. The founders credit their success to understanding basic business terms like target audience, customer acquisition, and brand building from their teenage years.'\n        }\n      ],\n      practicalExercises: [\n        {\n          title: 'Your Favorite Brand Analysis',\n          description: 'Pick any brand you love (Zomato, Nykaa, Boat, etc.) and identify: (1) Their target audience, (2) How they acquire customers, (3) Their competitive advantage, (4) Their revenue model. Use the terms you\\'ve learned.',\n          expectedOutcome: 'You\\'ll understand how successful businesses think strategically and use proper business language to describe their strategies.'\n        },\n        {\n          title: 'The School/College Business Idea',\n          description: 'Identify one problem in your school or college. Design a solution using business thinking: (1) Define your target audience, (2) Calculate potential revenue, (3) Identify your competitive advantage, (4) Plan your customer acquisition strategy.',\n          expectedOutcome: 'You\\'ll apply business concepts to real situations and think like an entrepreneur.'\n        },\n        {\n          title: 'Personal ROI Calculator',\n          description: 'List 3 things you\\'re considering spending money on (course, gadget, hobby equipment). Calculate the potential ROI for each and rank them.',\n          expectedOutcome: 'You\\'ll make more informed financial decisions using business thinking.'\n        },\n        {\n          title: 'Business News Decoder',\n          description: 'Read one business news article daily for a week. Identify and explain 5 business terms used in each article using simple language.',\n          expectedOutcome: 'You\\'ll become comfortable with business media and financial news.'\n        }\n      ],\n      completion: {\n        certificate: 'Teen Business Vocabulary Certified - Foundation Level',\n        skills: [\n          'Business terminology fluency',\n          'Basic financial literacy',\n          'Entrepreneurial thinking',\n          'Strategic analysis of brands',\n          'Business opportunity identification'\n        ],\n        careerPaths: [\n          'Young Entrepreneur',\n          'Business Development intern',\n          'Marketing Assistant',\n          'Sales Representative',\n          'Business Analyst (entry-level)',\n          'Startup Team Member',\n          'E-commerce Specialist'\n        ]\n      }\n    }\n  },\n  {\n    id: 'dealbreakers',\n    title: 'Top 10 Dealbreaker Terms',\n    description: 'Terms that make or break deals in the tank - know these before you pitch!',\n    icon: '⚡',\n    termCount: 10,\n    duration: '20 mins',\n    gradient: 'from-green-400 to-emerald-500',\n    iconColor: 'text-white',\n    level: 'Intermediate',\n    targetAudience: 'Aspiring entrepreneurs, Startup founders, Business pitch preparers',\n    detailedContent: {\n      overview: `\nBased on analysis of 500+ Shark Tank India pitches, this intensive course focuses on the 10 business terms that most frequently determine whether entrepreneurs get funding or face rejection. These aren't just vocabulary words—they're the critical concepts that separate successful entrepreneurs from those who go home empty-handed.\n\nEvery term in this course has been the deciding factor in at least 10 major Shark Tank deals. Master these concepts, and you'll speak the language that sharks respect and respond to with investments.\n      `,\n      objectives: [\n        'Master the 10 terms that appear in 90% of successful Shark Tank pitches',\n        'Understand exactly what sharks are looking for when they ask about these concepts',\n        'Learn to present these metrics in compelling ways that lead to investment',\n        'Avoid the common mistakes that cause instant rejections',\n        'Develop shark-level thinking about business fundamentals'\n      ],\n      curriculum: [\n        {\n          module: 'The Financial Dealbreakers',\n          topics: [\n            'Unit Economics (The #1 reason sharks say no)',\n            'Customer Acquisition Cost vs Lifetime Value (The sustainability test)',\n            'Burn Rate (How long will you survive?)',\n            'Gross Margins (The profitability reality check)'\n          ],\n          duration: '8 minutes',\n          keyTerms: ['Unit Economics', 'Customer Acquisition Cost', 'Lifetime Value', 'Burn Rate', 'Gross Margins']\n        },\n        {\n          module: 'The Market Dealbreakers',\n          topics: [\n            'Total Addressable Market (Is this worth their time?)',\n            'Product-Market Fit (Do people actually want this?)',\n            'Competitive Moats (How will you survive competition?)'\n          ],\n          duration: '6 minutes',\n          keyTerms: ['Total Addressable Market', 'Product-Market Fit', 'Competitive Moats']\n        },\n        {\n          module: 'The Execution Dealbreakers',\n          topics: [\n            'Scalability (Can you grow without breaking?)',\n            'Traction (Proof that your business works)',\n            'Team Capability (Can you actually execute this?)'\n          ],\n          duration: '6 minutes',\n          keyTerms: ['Scalability', 'Traction', 'Team Capability']\n        }\n      ],\n      realWorldApplications: [\n        'Preparing for investor pitches with confidence',\n        'Conducting due diligence on your own business before seeking funding',\n        'Identifying weaknesses in your business model before sharks do',\n        'Understanding why some startups fail despite good ideas',\n        'Evaluating other businesses and investment opportunities',\n        'Speaking confidently with investors, banks, and business partners',\n        'Making strategic decisions based on shark-level business thinking'\n      ],\n      caseStudies: [\n        {\n          title: 'The Unit Economics Disaster That Became a Success',\n          company: 'Licious (Food delivery startup)',\n          challenge: 'In early rounds, Licious was losing ₹45 on every order delivered. Investors were concerned about unit economics and sustainability.',\n          solution: 'The founders focused obsessively on improving unit economics: (1) Negotiated better supplier rates, (2) Optimized delivery routes, (3) Increased average order values through bundling, (4) Improved inventory management to reduce waste.',\n          outcome: 'Within 18 months, they achieved positive unit economics of +₹25 per order. This transformation led to successful Series D funding of $52 million. Today, Licious is valued at over $1 billion.'\n        },\n        {\n          title: 'How Poor CAC Understanding Killed a Promising Startup',\n          company: 'FoodPanda India (Food delivery - failure case study)',\n          challenge: 'FoodPanda had strong brand recognition and good product but was spending ₹400 to acquire customers who ordered only once (₹250 average order value).',\n          solution: 'Instead of fixing the underlying CAC problem, they raised more money to spend on marketing, thinking scale would solve the issue.',\n          outcome: 'Despite raising over $300 million, FoodPanda India eventually shut down. Their CAC-to-LTV ratio was unsustainable, and they never achieved the repeat usage necessary for profitability.'\n        },\n        {\n          title: 'The TAM Miscalculation That Almost Fooled Sharks',\n          company: 'Confidential Shark Tank India pitch (Season 2)',\n          challenge: 'A ed-tech startup claimed TAM of ₹50,000 crores by multiplying India\\'s total student population by average education spending.',\n          solution: 'Shark Aman Gupta challenged: \"But your product only serves English-speaking, smartphone-owning students in urban areas. What\\'s your real TAM?\" The founder had to recalculate live.',\n          outcome: 'The real TAM was ₹2,000 crores - still large but 25x smaller than claimed. The founder lost credibility and all sharks went out. Lesson: Be precise with your TAM calculations.'\n        },\n        {\n          title: 'The Traction Story That Won Every Shark',\n          company: 'Mamaearth (Personal care startup)',\n          challenge: 'Competing in the crowded personal care market against established brands like Hindustan Unilever.',\n          solution: 'Founders presented compelling traction metrics: (1) 100% month-over-month growth for 8 consecutive months, (2) 85% customer retention rate, (3) Expanding from 1 to 100+ SKUs based on customer demand, (4) Growing from online-only to 20,000+ retail stores.',\n          outcome: 'Strong traction metrics led to multiple funding rounds. Mamaearth IPO\\'d in 2023 at a valuation of ₹24,000 crores, making it one of India\\'s most successful D2C success stories.'\n        }\n      ],\n      practicalExercises: [\n        {\n          title: 'Your Business Health Checkup',\n          description: 'If you have a business idea or existing business, calculate all 10 dealbreaker metrics. If you don\\'t have a business, analyze a company you admire (like Nykaa or Boat) and estimate their metrics.',\n          expectedOutcome: 'You\\'ll understand which areas need improvement before approaching investors and how healthy businesses structure their operations.'\n        },\n        {\n          title: 'The Shark Tank Simulator',\n          description: 'Watch a Shark Tank episode and pause before sharks ask questions. Predict which dealbreaker terms they\\'ll focus on and why. Compare your predictions with actual questions.',\n          expectedOutcome: 'You\\'ll develop shark-level intuition for identifying business strengths and weaknesses quickly.'\n        },\n        {\n          title: 'Competitive Analysis Deep Dive',\n          description: 'Pick 3 companies in the same industry. Research and compare their unit economics, CAC, scalability, and competitive moats. Predict which one will succeed long-term.',\n          expectedOutcome: 'You\\'ll understand how these terms play out in real competition and develop better business judgment.'\n        },\n        {\n          title: 'The Dealbreaker Defense',\n          description: 'For each of the 10 terms, write a 2-minute explanation of how you would present this metric if it was weak in your business. Practice turning weaknesses into improvement opportunities.',\n          expectedOutcome: 'You\\'ll be prepared to handle tough investor questions and present your business honestly but positively.'\n        }\n      ],\n      completion: {\n        certificate: 'Shark Tank Dealbreaker Terms Master',\n        skills: [\n          'Advanced business metrics analysis',\n          'Investor-level business evaluation',\n          'Strategic weakness identification',\n          'Competitive analysis expertise',\n          'Pitch preparation and defense'\n        ],\n        careerPaths: [\n          'Startup Founder',\n          'Business Analyst',\n          'Investment Banking Analyst',\n          'Venture Capital Associate',\n          'Management Consultant',\n          'Business Development Manager',\n          'Strategic Planning Specialist'\n        ]\n      }\n    }\n  },\n  {\n    id: 'funding-essentials',\n    title: 'Startup Funding Essentials',\n    description: 'Master the language of investment and funding rounds like a pro.',\n    icon: '🚀',\n    termCount: 20,\n    duration: '45 mins',\n    gradient: 'from-purple-400 to-indigo-600',\n    iconColor: 'text-white',\n    level: 'Advanced',\n    targetAudience: 'Startup founders, Investment professionals, Advanced entrepreneurs',\n    detailedContent: {\n      overview: `\nThe comprehensive guide to understanding startup funding from pre-seed to IPO. This advanced course covers the complex world of venture capital, angel investing, and growth financing using real examples from India's startup ecosystem.\n\nDesigned for serious entrepreneurs ready to raise capital, this course provides insider knowledge of how funding works, what investors look for, and how to navigate each stage of the funding journey successfully.\n      `,\n      objectives: [\n        'Understand the complete startup funding lifecycle from idea to exit',\n        'Master terms used in term sheets, investor presentations, and funding negotiations',\n        'Learn valuation methods and how to defend your company\\'s worth',\n        'Understand different types of investors and their investment criteria',\n        'Develop skills to successfully raise capital at each funding stage',\n        'Navigate legal and regulatory aspects of startup funding in India'\n      ],\n      curriculum: [\n        {\n          module: 'Pre-Seed & Seed Funding Fundamentals',\n          topics: [\n            'Angel Investors vs VCs (Who to approach when)',\n            'Seed Valuation Methods (How to value a company with no revenue)',\n            'SAFE Notes vs Convertible Debt (Modern funding instruments)',\n            'Friends & Family Rounds (Getting your first ₹10-50 lakhs)',\n            'Incubators vs Accelerators (Y Combinator model in India)'\n          ],\n          duration: '12 minutes',\n          keyTerms: ['Angel Investors', 'Seed Valuation', 'SAFE Notes', 'Convertible Debt', 'Incubators']\n        },\n        {\n          module: 'Series A to Series C Mastery',\n          topics: [\n            'Series A Requirements (The ₹10 crore milestone)',\n            'Lead Investors vs Follow-on Investors (Building your investor syndicate)',\n            'Anti-dilution Provisions (Protecting investor interests)',\n            'Liquidation Preferences (Who gets paid first)',\n            'Board Composition (How control shifts with funding)',\n            'Employee Stock Options (ESOP pools and talent retention)'\n          ],\n          duration: '15 minutes',\n          keyTerms: ['Series A', 'Lead Investors', 'Anti-dilution', 'Liquidation Preferences', 'Board Composition', 'ESOP']\n        },\n        {\n          module: 'Growth Stage & Exit Strategies',\n          topics: [\n            'Growth Capital vs Private Equity (Scale-up funding)',\n            'Pre-IPO Rounds (Preparing for public markets)',\n            'Strategic Investors (Corporate VCs and their agenda)',\n            'Exit Strategies (IPO vs Acquisition)',\n            'Secondary Markets (Startup stock trading)',\n            'International Expansion Funding (Going global with Indian startups)'\n          ],\n          duration: '12 minutes',\n          keyTerms: ['Growth Capital', 'Pre-IPO', 'Strategic Investors', 'Exit Strategies', 'Secondary Markets']\n        },\n        {\n          module: 'Advanced Valuation & Deal Structures',\n          topics: [\n            'DCF for Startups (Discounted Cash Flow in high-growth companies)',\n            'Revenue Multiples (How SaaS companies are valued)',\n            'Down Rounds (When valuations decrease)',\n            'Flat Rounds (Maintaining valuation)',\n            'Drag-Along Rights (Forcing minority shareholders to sell)',\n            'Tag-Along Rights (Minority shareholder protection)'\n          ],\n          duration: '6 minutes',\n          keyTerms: ['DCF', 'Revenue Multiples', 'Down Rounds', 'Drag-Along Rights', 'Tag-Along Rights']\n        }\n      ],\n      realWorldApplications: [\n        'Preparing detailed funding strategies for your startup',\n        'Evaluating term sheets and negotiating better deal terms',\n        'Understanding how much dilution to accept at each funding stage',\n        'Building relationships with the right investors for your industry',\n        'Creating financial models that satisfy institutional investors',\n        'Navigating regulatory requirements for foreign investment (FDI)',\n        'Planning exit strategies and maximizing founder returns'\n      ],\n      caseStudies: [\n        {\n          title: 'Byju\\'s Funding Journey: From Bootstrap to $22 Billion',\n          company: 'Byju\\'s (EdTech giant)',\n          challenge: 'Byju Raveendran started with offline coaching classes in Bangalore. How did he navigate the funding ecosystem to build India\\'s most valuable startup?',\n          solution: 'Strategic funding progression: (1) Bootstrap phase (2011-2013): Self-funded with coaching revenue, (2) Seed round (2013): ₹35 crores from Aarin Capital, (3) Series A-F (2015-2021): Raised over $4 billion from global investors like General Atlantic, Sequoia, and Tiger Global, (4) Each round focused on different growth milestones: geographical expansion, product development, acquisitions.',\n          outcome: 'Peak valuation of $22 billion made Byju\\'s India\\'s most valuable startup. The journey shows how understanding investor expectations at each stage enables successful capital raising.'\n        },\n        {\n          title: 'The Zomato IPO: From Funding Rounds to Public Markets',\n          company: 'Zomato (Food delivery platform)',\n          challenge: 'Zomato raised private capital for 13 years before going public. How did they structure their funding to achieve a successful IPO?',\n          solution: 'Methodical approach to public readiness: (1) Series A-H (2010-2021): Raised $2.1 billion across multiple rounds, (2) Built strong unit economics and path to profitability, (3) Expanded to 24 countries to show scalability, (4) Acquired competitors (Grofers/Blinkit) to create platform ecosystem, (5) Maintained diverse investor base including international funds.',\n          outcome: 'July 2021 IPO raised ₹9,375 crores at ₹76 per share. Stock hit ₹169 on listing day. Demonstrated successful transition from venture-backed startup to public company.'\n        },\n        {\n          title: 'OYO\\'s Funding Rollercoaster: Valuations Up and Down',\n          company: 'OYO (Hospitality platform)',\n          challenge: 'OYO\\'s valuation peaked at $10 billion but later faced down rounds during COVID-19. How do startups handle valuation volatility?',\n          solution: 'Adaptive funding strategy: (1) Rapid growth phase (2015-2019): Raised $3+ billion at increasing valuations, (2) Crisis management (2020-2021): Accepted down rounds to survive pandemic, (3) Business model pivot: From asset-light aggregator to managed properties, (4) International expansion funded separately to reduce risk.',\n          outcome: 'Despite valuation challenges, OYO survived COVID-19 and filed for IPO in 2021. Showed importance of maintaining adequate cash runway and investor relationships through difficult times.'\n        },\n        {\n          title: 'Razorpay\\'s Strategic Investor Journey',\n          company: 'Razorpay (Fintech payments)',\n          challenge: 'Building a fintech company requires regulatory expertise and banking partnerships. How did Razorpay choose strategic vs financial investors?',\n          solution: 'Balanced investor strategy: (1) Early rounds: Financial investors (Sequoia, Y Combinator) for growth capital, (2) Later rounds: Added strategic investors like Mastercard for partnership opportunities, (3) Maintained founder control through careful equity management, (4) Used revenue-based financing for working capital needs.',\n          outcome: 'Achieved $7.5 billion valuation by 2022. Strategic investors provided market access and credibility, while financial investors supported rapid scaling.'\n        }\n      ],\n      practicalExercises: [\n        {\n          title: 'Create Your Funding Roadmap',\n          description: 'Design a 5-year funding strategy for a startup idea: (1) Estimate funding needed at each stage, (2) Identify appropriate investor types, (3) Calculate dilution at each round, (4) Plan major milestones between rounds.',\n          expectedOutcome: 'You\\'ll understand the strategic timing and structuring of funding rounds to maximize company value and minimize dilution.'\n        },\n        {\n          title: 'Term Sheet Analysis Workshop',\n          description: 'Review real term sheets from Indian startups (available online) and identify: (1) Valuation terms, (2) Investor rights and protections, (3) Anti-dilution provisions, (4) Board composition changes, (5) Exit rights and preferences.',\n          expectedOutcome: 'You\\'ll develop skills to evaluate and negotiate term sheets effectively.'\n        },\n        {\n          title: 'Investor Research Project',\n          description: 'Research 5 Indian VCs or angel investors: (1) Their investment thesis, (2) Typical check sizes, (3) Portfolio companies, (4) Investment criteria, (5) Value-add beyond capital. Create target investor profiles.',\n          expectedOutcome: 'You\\'ll build a database of potential investors matched to your startup\\'s needs and stage.'\n        },\n        {\n          title: 'Valuation Model Building',\n          description: 'Build a startup valuation model using: (1) Revenue multiples from comparable companies, (2) DCF analysis with growth assumptions, (3) Risk-adjusted returns. Test sensitivity to key assumptions.',\n          expectedOutcome: 'You\\'ll understand how investors value startups and can defend your company\\'s valuation with data.'\n        },\n        {\n          title: 'Due Diligence Preparation',\n          description: 'Create a comprehensive due diligence folder including: (1) Financial statements and projections, (2) Legal documents and IP, (3) Market research and competitive analysis, (4) Team backgrounds and references, (5) Customer contracts and testimonials.',\n          expectedOutcome: 'You\\'ll be prepared for investor due diligence and can accelerate funding processes.'\n        }\n      ],\n      completion: {\n        certificate: 'Advanced Startup Funding Specialist',\n        skills: [\n          'Expert-level funding strategy development',\n          'Term sheet negotiation and analysis',\n          'Advanced startup valuation methods',\n          'Investor relations and communications',\n          'Legal and regulatory compliance',\n          'Exit strategy planning',\n          'International funding and expansion'\n        ],\n        careerPaths: [\n          'Serial Entrepreneur',\n          'Venture Capital Partner',\n          'Investment Banking VP',\n          'Corporate Development Director',\n          'Startup CFO',\n          'Business Development Head',\n          'Strategic Partnerships Manager',\n          'Angel Investor/Advisor'\n        ]\n      }\n    }\n  }\n];","size_bytes":29775},".local/state/replit/agent/progress_tracker.md":{"content":"[x] 1. Install the required packages\n[x] 2. Restart the workflow to see if the project is working\n[x] 3. Verify the project is working using the feedback tool\n[ ] 4. Inform user the import is completed and they can start building, mark the import as completed using the complete_project_import tool","size_bytes":298},"client/src/pages/BlogDetail.tsx":{"content":"import { useRoute } from 'wouter';\nimport { ArrowLeft, Calendar, User, Clock, Tag } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { detailedBlogPosts } from '@/data/detailedBlogPosts';\nimport { Link } from 'wouter';\nimport Navigation from '@/components/Navigation';\nimport Footer from '@/components/Footer';\nimport { renderBlogContent } from '@/utils/formatting';\n\nexport default function BlogDetail() {\n  const [match, params] = useRoute('/blog/:id');\n  const blogPost = detailedBlogPosts.find(post => post.id === params?.id);\n\n  if (!blogPost) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Blog post not found</h2>\n          <Link href=\"/\">\n            <Button>Return Home</Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-shark-navy to-shark-blue text-white py-8\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"text-white hover:bg-white/10 mb-6\">\n              <ArrowLeft className=\"mr-2 h-4 w-4\" />\n              Back to Home\n            </Button>\n          </Link>\n          \n          <div className=\"mb-4\">\n            <Badge className={`${blogPost.categoryColor} px-3 py-1 rounded-full text-sm font-medium mb-4`}>\n              {blogPost.category}\n            </Badge>\n          </div>\n          \n          <h1 className=\"text-3xl md:text-4xl font-serif font-bold mb-4\">\n            {blogPost.title}\n          </h1>\n          \n          <p className=\"text-xl text-white/90 mb-6\">\n            {blogPost.excerpt}\n          </p>\n          \n          <div className=\"flex flex-wrap items-center gap-4 text-sm text-white/80\">\n            <div className=\"flex items-center\">\n              <User className=\"mr-1 h-4 w-4\" />\n              {blogPost.author}\n            </div>\n            <div className=\"flex items-center\">\n              <Calendar className=\"mr-1 h-4 w-4\" />\n              {blogPost.date}\n            </div>\n            <div className=\"flex items-center\">\n              <Clock className=\"mr-1 h-4 w-4\" />\n              {blogPost.readTime}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Featured Image */}\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <img \n          src={blogPost.image} \n          alt={blogPost.title}\n          className=\"w-full h-64 md:h-96 object-cover rounded-lg shadow-lg -mt-8 relative z-10\"\n        />\n      </div>\n\n      {/* Content */}\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <div className=\"bg-white rounded-2xl shadow-lg p-8\">\n          {renderBlogContent(blogPost.content)}\n        </div>\n\n        {/* Tags */}\n        <div className=\"mt-12 pt-8 border-t border-gray-200\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Tag className=\"h-5 w-5 text-gray-500\" />\n            <span className=\"text-gray-700 font-medium\">Tags:</span>\n          </div>\n          <div className=\"flex flex-wrap gap-2\">\n            {blogPost.tags.map(tag => (\n              <Badge key={tag} variant=\"secondary\" className=\"px-3 py-1\">\n                {tag}\n              </Badge>\n            ))}\n          </div>\n        </div>\n\n        {/* Back to Home */}\n        <div className=\"mt-12 text-center\">\n          <Link href=\"/\">\n            <Button className=\"bg-shark-navy hover:bg-shark-blue text-white px-8 py-3 rounded-full\">\n              Explore More Articles\n            </Button>\n          </Link>\n        </div>\n      </div>\n      \n      <Footer />\n    </div>\n  );\n}","size_bytes":3891},"client/src/pages/CategoryPage.tsx":{"content":"import { useParams, Link } from 'wouter';\nimport { businessTerms, businessCategories } from '@/data/businessTerms';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { ArrowLeft, BookOpen, Search } from 'lucide-react';\nimport Navigation from '@/components/Navigation';\nimport Footer from '@/components/Footer';\nimport TermCard from '@/components/TermCard';\nimport { useState } from 'react';\n\nexport default function CategoryPage() {\n  const params = useParams();\n  const categorySlug = params.category;\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  const category = Object.values(businessCategories).find(cat => cat.slug === categorySlug);\n  const categoryTerms = businessTerms.filter(term => term.category === categorySlug);\n\n  // Filter terms based on search query\n  const filteredTerms = categoryTerms.filter(term =>\n    searchQuery.trim() === '' ||\n    term.term.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    term.simpleExplanation.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  if (!category) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Navigation />\n        <div className=\"container mx-auto px-4 py-16 text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\">Category Not Found</h1>\n          <p className=\"text-gray-600 mb-8\">The business category you're looking for doesn't exist.</p>\n          <Link href=\"/glossary\">\n            <Button>Browse All Categories</Button>\n          </Link>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      \n      {/* SEO optimized header with structured data */}\n      <article className=\"container mx-auto px-4 py-8 max-w-7xl\">\n        <header className=\"mb-8\">\n          <div className=\"mb-6\">\n            <Link href=\"/glossary\">\n              <Button variant=\"ghost\" className=\"mb-4\">\n                <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                Back to All Categories\n              </Button>\n            </Link>\n          </div>\n\n          {/* Category Header */}\n          <section className=\"text-center mb-12\">\n            <div className={`inline-flex items-center justify-center w-24 h-24 bg-gradient-to-br ${category.color} rounded-3xl mb-6 shadow-lg`}>\n              <span className=\"text-4xl\">{category.icon}</span>\n            </div>\n            <h1 className=\"text-4xl md:text-5xl font-serif font-bold text-shark-navy mb-4\">\n              {category.name}\n            </h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-6\">\n              {category.description}\n            </p>\n            <Badge className=\"bg-shark-blue text-white px-4 py-2\">\n              {categoryTerms.length} Terms\n            </Badge>\n          </section>\n        </header>\n\n        {/* Search within category */}\n        <section className=\"mb-8\">\n          <div className=\"max-w-md mx-auto relative\">\n            <Search className=\"absolute left-3 top-3 h-5 w-5 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder={`Search ${category.name.toLowerCase()}...`}\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-shark-blue focus:border-transparent\"\n            />\n          </div>\n        </section>\n\n        {/* Quick navigation anchors */}\n        <section className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold text-shark-navy mb-4\">Quick Jump to Terms</h2>\n          <div className=\"flex flex-wrap gap-2\">\n            {filteredTerms.map(term => (\n              <button\n                key={term.id}\n                onClick={() => document.getElementById(term.id)?.scrollIntoView({ behavior: 'smooth' })}\n                className=\"px-3 py-1 text-sm bg-white border border-gray-200 rounded-full hover:bg-shark-blue hover:text-white transition-colors\"\n              >\n                {term.term}\n              </button>\n            ))}\n          </div>\n        </section>\n\n        {/* Terms Grid */}\n        <section>\n          <h2 className=\"text-2xl font-serif font-bold text-shark-navy mb-8\">\n            All {category.name} Terms\n          </h2>\n          \n          {filteredTerms.length > 0 ? (\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {filteredTerms.map(term => (\n                <div key={term.id} id={term.id}>\n                  <TermCard term={term} />\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-12\">\n              <BookOpen className=\"mx-auto h-16 w-16 text-gray-400 mb-4\" />\n              <p className=\"text-gray-500 text-lg\">No terms found matching your search.</p>\n            </div>\n          )}\n        </section>\n\n        {/* Related Categories */}\n        <section className=\"mt-16\">\n          <h2 className=\"text-2xl font-serif font-bold text-shark-navy mb-8\">\n            Explore Related Categories\n          </h2>\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {Object.values(businessCategories)\n              .filter(cat => cat.slug !== categorySlug)\n              .slice(0, 6)\n              .map(relatedCategory => (\n                <Link key={relatedCategory.slug} href={`/glossary/${relatedCategory.slug}`}>\n                  <Card className=\"hover:shadow-lg transition-shadow cursor-pointer\">\n                    <CardHeader>\n                      <div className={`inline-flex items-center justify-center w-12 h-12 bg-gradient-to-br ${relatedCategory.color} rounded-lg mb-3`}>\n                        <span className=\"text-xl\">{relatedCategory.icon}</span>\n                      </div>\n                      <CardTitle className=\"text-lg\">{relatedCategory.name}</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <p className=\"text-gray-600\">{relatedCategory.description}</p>\n                    </CardContent>\n                  </Card>\n                </Link>\n              ))\n            }\n          </div>\n        </section>\n\n        {/* Call to Action */}\n        <section className=\"text-center mt-16\">\n          <Card className=\"bg-gradient-to-br from-shark-blue to-shark-teal text-white\">\n            <CardContent className=\"p-8\">\n              <h3 className=\"text-2xl font-bold mb-4\">Ready to Master Business Terms?</h3>\n              <p className=\"text-lg mb-6\">\n                Test your knowledge with our interactive quiz and learn with real-world examples.\n              </p>\n              <div className=\"flex justify-center gap-4\">\n                <Link href=\"/quiz\">\n                  <Button variant=\"secondary\" className=\"bg-white text-shark-blue hover:bg-gray-100\">\n                    Take Quiz\n                  </Button>\n                </Link>\n              </div>\n            </CardContent>\n          </Card>\n        </section>\n      </article>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":7193},"client/src/pages/GlossaryHome.tsx":{"content":"import { Link } from 'wouter';\nimport { businessCategories, businessTerms } from '@/data/businessTerms';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { BookOpen, TrendingUp, Users, Target } from 'lucide-react';\nimport Navigation from '@/components/Navigation';\nimport Footer from '@/components/Footer';\n\nexport default function GlossaryHome() {\n  const totalTerms = businessTerms.length;\n  const categories = Object.values(businessCategories);\n\n  // Get term count for each category\n  const getCategoryTermCount = (categorySlug: string) => {\n    return businessTerms.filter(term => term.category === categorySlug).length;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      \n      <main className=\"container mx-auto px-4 py-8 max-w-7xl\">\n        {/* Hero Section */}\n        <section className=\"text-center mb-16\">\n          <div className=\"mb-8\">\n            <div className=\"inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-shark-blue to-shark-teal rounded-3xl mb-6 shadow-lg\">\n              <BookOpen className=\"h-10 w-10 text-white\" />\n            </div>\n            <h1 className=\"text-4xl md:text-6xl font-serif font-bold text-shark-navy mb-6\">\n              Business Terms Glossary\n            </h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n              Master the language of entrepreneurship with our comprehensive collection of {totalTerms}+ business terms, \n              organized by category with real-world examples and Shark Tank insights.\n            </p>\n            <div className=\"flex justify-center gap-4 mb-8\">\n              <Badge className=\"bg-shark-blue text-white px-4 py-2 text-lg\">\n                {totalTerms} Terms\n              </Badge>\n              <Badge className=\"bg-shark-gold text-shark-navy px-4 py-2 text-lg\">\n                {categories.length} Categories\n              </Badge>\n            </div>\n          </div>\n        </section>\n\n        {/* Quick Stats */}\n        <section className=\"mb-16\">\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <Card className=\"text-center\">\n              <CardContent className=\"p-6\">\n                <TrendingUp className=\"mx-auto h-12 w-12 text-shark-blue mb-4\" />\n                <h3 className=\"text-2xl font-bold text-shark-navy mb-2\">{totalTerms}+</h3>\n                <p className=\"text-gray-600\">Business Terms</p>\n              </CardContent>\n            </Card>\n            <Card className=\"text-center\">\n              <CardContent className=\"p-6\">\n                <Users className=\"mx-auto h-12 w-12 text-shark-green mb-4\" />\n                <h3 className=\"text-2xl font-bold text-shark-navy mb-2\">{categories.length}</h3>\n                <p className=\"text-gray-600\">Categories</p>\n              </CardContent>\n            </Card>\n            <Card className=\"text-center\">\n              <CardContent className=\"p-6\">\n                <Target className=\"mx-auto h-12 w-12 text-shark-gold mb-4\" />\n                <h3 className=\"text-2xl font-bold text-shark-navy mb-2\">100%</h3>\n                <p className=\"text-gray-600\">Real Examples</p>\n              </CardContent>\n            </Card>\n          </div>\n        </section>\n\n        {/* Categories Grid */}\n        <section>\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl md:text-4xl font-serif font-bold text-shark-navy mb-4\">\n              Explore by Category\n            </h2>\n            <p className=\"text-xl text-gray-600\">\n              Choose a category to dive deep into specific business terminology\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {categories.map(category => {\n              const termCount = getCategoryTermCount(category.slug);\n              return (\n                <Link key={category.slug} href={`/glossary/${category.slug}`}>\n                  <Card className=\"hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 cursor-pointer h-full\">\n                    <CardHeader>\n                      <div className={`inline-flex items-center justify-center w-16 h-16 bg-gradient-to-br ${category.color} rounded-2xl mb-4 shadow-lg`}>\n                        <span className=\"text-2xl\">{category.icon}</span>\n                      </div>\n                      <div className=\"flex justify-between items-start mb-2\">\n                        <CardTitle className=\"text-xl font-bold text-shark-navy\">\n                          {category.name}\n                        </CardTitle>\n                        <Badge variant=\"outline\" className=\"ml-2\">\n                          {termCount}\n                        </Badge>\n                      </div>\n                    </CardHeader>\n                    <CardContent>\n                      <p className=\"text-gray-600 mb-4\">\n                        {category.description}\n                      </p>\n                      <Button \n                        variant=\"outline\" \n                        className=\"w-full border-shark-blue text-shark-blue hover:bg-shark-blue hover:text-white\"\n                      >\n                        Explore {termCount} Terms →\n                      </Button>\n                    </CardContent>\n                  </Card>\n                </Link>\n              );\n            })}\n          </div>\n        </section>\n\n        {/* Popular Terms Preview */}\n        <section className=\"mt-16\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-serif font-bold text-shark-navy mb-4\">\n              Popular Terms\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Most searched business terms by entrepreneurs\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            {businessTerms.slice(0, 8).map(term => (\n              <Link key={term.id} href={`/term/${term.id}`}>\n                <Card className=\"hover:shadow-lg transition-shadow cursor-pointer\">\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex items-center gap-3\">\n                      <span className=\"text-2xl\">{term.icon}</span>\n                      <div>\n                        <h3 className=\"font-semibold text-shark-navy\">{term.term}</h3>\n                        <p className=\"text-sm text-gray-600\">{term.difficulty}</p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </Link>\n            ))}\n          </div>\n        </section>\n\n        {/* Call to Action */}\n        <section className=\"text-center mt-16\">\n          <Card className=\"bg-gradient-to-br from-shark-blue to-shark-teal text-white\">\n            <CardContent className=\"p-8\">\n              <h3 className=\"text-3xl font-bold mb-4\">Ready to Test Your Knowledge?</h3>\n              <p className=\"text-lg mb-6\">\n                Take our interactive quiz with real business scenarios and case studies.\n              </p>\n              <div className=\"flex justify-center gap-4\">\n                <Link href=\"/quiz\">\n                  <Button variant=\"secondary\" className=\"bg-white text-shark-blue hover:bg-gray-100\">\n                    Take Business Quiz\n                  </Button>\n                </Link>\n              </div>\n            </CardContent>\n          </Card>\n        </section>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":7629},"client/src/pages/LearningPathDetail.tsx":{"content":"import { useRoute, useLocation } from 'wouter';\nimport { ArrowLeft, GraduationCap, Clock, Users, Target, BookOpen, Trophy, Briefcase } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { detailedLearningPaths } from '@/data/detailedLearningPaths';\nimport { Link } from 'wouter';\n\nexport default function LearningPathDetail() {\n  const [match, params] = useRoute('/learning-path/:id');\n  const [location, navigate] = useLocation();\n  const learningPath = detailedLearningPaths.find(path => path.id === params?.id);\n\n  if (!learningPath) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Learning path not found</h2>\n          <Link href=\"/\">\n            <Button>Return Home</Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  const levelColor = {\n    Beginner: 'bg-green-100 text-green-800',\n    Intermediate: 'bg-yellow-100 text-yellow-800',\n    Advanced: 'bg-red-100 text-red-800'\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className={`bg-gradient-to-br ${learningPath.gradient} text-white py-12`}>\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"text-white hover:bg-white/10 mb-6\">\n              <ArrowLeft className=\"mr-2 h-4 w-4\" />\n              Back to Home\n            </Button>\n          </Link>\n          \n          <div className=\"flex items-start gap-4 mb-6\">\n            <div className=\"text-6xl\">{learningPath.icon}</div>\n            <div className=\"flex-1\">\n              <div className=\"flex items-center gap-3 mb-4\">\n                <Badge className={levelColor[learningPath.level]}>\n                  {learningPath.level}\n                </Badge>\n                <span className=\"text-white/80 text-sm\">\n                  {learningPath.termCount} terms • {learningPath.duration}\n                </span>\n              </div>\n              \n              <h1 className=\"text-3xl md:text-4xl font-serif font-bold mb-4\">\n                {learningPath.title}\n              </h1>\n              \n              <p className=\"text-xl text-white/90 mb-6\">\n                {learningPath.description}\n              </p>\n              \n              <div className=\"flex items-center text-sm text-white/80\">\n                <Users className=\"mr-1 h-4 w-4\" />\n                Target Audience: {learningPath.targetAudience.split(',')[0]}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        {/* Overview */}\n        <Card className=\"mb-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <BookOpen className=\"mr-2 h-5 w-5\" />\n              Course Overview\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-gray-700 leading-relaxed whitespace-pre-line\">\n              {learningPath.detailedContent.overview}\n            </p>\n          </CardContent>\n        </Card>\n\n        <div className=\"grid md:grid-cols-2 gap-8 mb-8\">\n          {/* Learning Objectives */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <Target className=\"mr-2 h-5 w-5\" />\n                Learning Objectives\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <ul className=\"space-y-3\">\n                {learningPath.detailedContent.objectives.map((objective, index) => (\n                  <li key={index} className=\"flex items-start\">\n                    <span className=\"bg-shark-blue text-white rounded-full w-6 h-6 flex items-center justify-center text-sm font-medium mr-3 mt-0.5 flex-shrink-0\">\n                      {index + 1}\n                    </span>\n                    <span className=\"text-gray-700\">{objective}</span>\n                  </li>\n                ))}\n              </ul>\n            </CardContent>\n          </Card>\n\n          {/* Real-World Applications */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <GraduationCap className=\"mr-2 h-5 w-5\" />\n                Real-World Applications\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <ul className=\"space-y-2\">\n                {learningPath.detailedContent.realWorldApplications.map((application, index) => (\n                  <li key={index} className=\"flex items-start\">\n                    <span className=\"text-shark-blue mr-2\">•</span>\n                    <span className=\"text-gray-700\">{application}</span>\n                  </li>\n                ))}\n              </ul>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Curriculum */}\n        <Card className=\"mb-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <BookOpen className=\"mr-2 h-5 w-5\" />\n              Course Curriculum\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-6\">\n              {learningPath.detailedContent.curriculum.map((module, index) => (\n                <div key={index} className=\"border-l-4 border-shark-blue pl-6\">\n                  <div className=\"flex items-center justify-between mb-3\">\n                    <h3 className=\"text-lg font-semibold text-gray-900\">\n                      Module {index + 1}: {module.module}\n                    </h3>\n                    <div className=\"flex items-center text-sm text-gray-500\">\n                      <Clock className=\"mr-1 h-4 w-4\" />\n                      {module.duration}\n                    </div>\n                  </div>\n                  \n                  <ul className=\"space-y-2 mb-4\">\n                    {module.topics.map((topic, topicIndex) => (\n                      <li key={topicIndex} className=\"flex items-start text-gray-700\">\n                        <span className=\"text-shark-blue mr-2\">•</span>\n                        {topic}\n                      </li>\n                    ))}\n                  </ul>\n                  \n                  <div className=\"flex flex-wrap gap-2\">\n                    {module.keyTerms.map((term, termIndex) => (\n                      <Badge key={termIndex} variant=\"secondary\" className=\"text-xs\">\n                        {term}\n                      </Badge>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Case Studies */}\n        <Card className=\"mb-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <Briefcase className=\"mr-2 h-5 w-5\" />\n              Case Studies\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-6\">\n              {learningPath.detailedContent.caseStudies.map((caseStudy, index) => (\n                <div key={index} className=\"bg-gray-50 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                    {caseStudy.title}\n                  </h3>\n                  <p className=\"text-sm text-shark-blue font-medium mb-3\">\n                    Company: {caseStudy.company}\n                  </p>\n                  \n                  <div className=\"grid md:grid-cols-3 gap-4 text-sm\">\n                    <div>\n                      <h4 className=\"font-medium text-gray-900 mb-1\">Challenge:</h4>\n                      <p className=\"text-gray-700\">{caseStudy.challenge}</p>\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium text-gray-900 mb-1\">Solution:</h4>\n                      <p className=\"text-gray-700\">{caseStudy.solution}</p>\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium text-gray-900 mb-1\">Outcome:</h4>\n                      <p className=\"text-gray-700\">{caseStudy.outcome}</p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Completion Benefits */}\n        <Card className=\"mb-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <Trophy className=\"mr-2 h-5 w-5\" />\n              Upon Completion\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              <div>\n                <h3 className=\"font-medium text-gray-900 mb-2\">Certificate</h3>\n                <p className=\"text-gray-700 text-sm\">\n                  {learningPath.detailedContent.completion.certificate}\n                </p>\n              </div>\n              <div>\n                <h3 className=\"font-medium text-gray-900 mb-2\">Skills Gained</h3>\n                <ul className=\"space-y-1\">\n                  {learningPath.detailedContent.completion.skills.map((skill, index) => (\n                    <li key={index} className=\"text-gray-700 text-sm flex items-start\">\n                      <span className=\"text-shark-blue mr-1\">•</span>\n                      {skill}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div>\n                <h3 className=\"font-medium text-gray-900 mb-2\">Career Paths</h3>\n                <ul className=\"space-y-1\">\n                  {learningPath.detailedContent.completion.careerPaths.map((path, index) => (\n                    <li key={index} className=\"text-gray-700 text-sm flex items-start\">\n                      <span className=\"text-shark-blue mr-1\">•</span>\n                      {path}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Call to Action */}\n        <div className=\"text-center\">\n          <Button className={`bg-gradient-to-r ${learningPath.gradient} text-white px-8 py-3 rounded-full text-lg font-semibold mb-4`}>\n            Learning Path Coming Soon\n          </Button>\n          <div className=\"text-sm text-gray-600\">\n            <Button \n              variant=\"ghost\"\n              onClick={() => {\n                navigate('/');\n                setTimeout(() => {\n                  const element = document.getElementById('learning-paths');\n                  if (element) {\n                    element.scrollIntoView({ behavior: 'smooth' });\n                  }\n                }, 100);\n              }}\n            >\n              Explore More Learning Paths\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":11063},"client/src/components/CompactTermCard.tsx":{"content":"import { BusinessTerm } from '@/types';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { TrendingUp, PieChart, DollarSign, Users, Rocket, Target, Building, Scale, BarChart3, FlaskConical, ShoppingCart, Calculator, Heart, Truck, Code, UserPlus, FolderKanban } from 'lucide-react';\nimport { useLocation } from 'wouter';\n\nconst categoryIcons = {\n  'investor-vc-lingo': Building,\n  'startup-metrics': BarChart3,\n  'deal-structures': Target,\n  'valuation-funding': DollarSign,\n  'pitch-strategy': PieChart,\n  'product-tech': Code,\n  'roles-titles': Users,\n  'legal-compliance': Scale,\n  'marketing-growth': TrendingUp,\n  'testing-feedback': FlaskConical,\n  'market-business-models': ShoppingCart,\n  'financial-accounting': Calculator,\n  'startup-culture': Heart,\n  'operations-supply': Truck,\n  'product-development': Rocket,\n  'customer-growth': UserPlus,\n  'funding-investment': FolderKanban\n};\n\nconst categoryBadgeColors = {\n  'investor-vc-lingo': 'bg-blue-500 text-white',\n  'startup-metrics': 'bg-green-500 text-white',\n  'deal-structures': 'bg-purple-500 text-white',\n  'valuation-funding': 'bg-yellow-500 text-white',\n  'pitch-strategy': 'bg-red-500 text-white',\n  'product-tech': 'bg-cyan-500 text-white',\n  'roles-titles': 'bg-teal-500 text-white',\n  'legal-compliance': 'bg-gray-500 text-white',\n  'marketing-growth': 'bg-pink-500 text-white',\n  'testing-feedback': 'bg-indigo-500 text-white',\n  'market-business-models': 'bg-orange-500 text-white',\n  'financial-accounting': 'bg-emerald-500 text-white',\n  'startup-culture': 'bg-rose-500 text-white',\n  'operations-supply': 'bg-slate-500 text-white',\n  'product-development': 'bg-violet-500 text-white',\n  'customer-growth': 'bg-lime-500 text-white',\n  'funding-investment': 'bg-amber-500 text-white'\n};\n\ninterface CompactTermCardProps {\n  term: BusinessTerm;\n  onSelect?: () => void;\n}\n\nexport default function CompactTermCard({ term, onSelect }: CompactTermCardProps) {\n  const IconComponent = categoryIcons[term.category] || DollarSign;\n  const badgeColorClass = categoryBadgeColors[term.category] || 'bg-gray-500 text-white';\n  const [, setLocation] = useLocation();\n\n  const handleClick = () => {\n    onSelect?.();\n    setLocation(`/term/${term.id}`);\n  };\n\n  return (\n    <Card \n      className=\"bg-white rounded-xl shadow-lg hover:shadow-xl transition-shadow border-0 overflow-hidden cursor-pointer\" \n      data-testid={`compact-term-card-${term.id}`}\n      onClick={handleClick}\n    >\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-start justify-between mb-3\">\n          <div className=\"flex items-center space-x-3\">\n            <div className={`${categoryBadgeColors[term.category] || 'bg-gray-500'} rounded-lg p-2`}>\n              <IconComponent size={16} className=\"text-white\" />\n            </div>\n            <h3 className=\"text-lg font-serif font-bold text-shark-navy\">{term.term}</h3>\n          </div>\n          <Badge className={`${badgeColorClass} px-2 py-1 rounded-full text-xs font-medium capitalize`}>\n            {term.category}\n          </Badge>\n        </div>\n        \n        <p className=\"text-gray-600 text-sm line-clamp-2 mb-2\">{term.simpleExplanation}</p>\n        \n        <div className=\"bg-gradient-to-r from-yellow-50 to-orange-50 p-3 rounded-lg border-l-2 border-shark-gold\">\n          <p className=\"text-gray-700 text-xs italic line-clamp-1\">\"{term.sharkTankExample}\"</p>\n          <p className=\"text-xs font-medium text-shark-blue mt-1\">- {term.sharkName}</p>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":3595},"CONTENT_EDITING_GUIDE.md":{"content":"# 📝 Shark Tank Lingo - Content Editing Guide\n\nThis guide explains exactly where and how to edit all the content in your Shark Tank Lingo website. Each section shows you which files to modify for different types of content changes.\n\n## 🏗️ Project Structure Overview\n\n```\nclient/src/\n├── data/                    # All content data files\n│   ├── businessTerms.ts     # Main terms and categories \n│   ├── detailedBlogPosts.ts # Blog articles\n│   ├── quizData.ts          # Quiz questions\n│   └── detailedLearningPaths.ts # Learning path content\n├── components/              # UI components that display content\n│   ├── TermCard.tsx         # How term cards look\n│   ├── CompactTermCard.tsx  # Smaller term cards\n│   ├── BlogSection.tsx      # Blog section display\n│   ├── QuizSection.tsx      # Quiz interface\n│   └── ui/                  # Basic UI components\n├── pages/                   # Full page components\n│   ├── TermDetail.tsx       # Individual term pages\n│   ├── BlogDetail.tsx       # Individual blog pages\n│   ├── CategoryPage.tsx     # Category listing pages\n│   └── Home.tsx             # Homepage\n└── types/                   # Data structure definitions\n    └── index.ts             # Type definitions\n```\n\n## 📚 Editing Business Terms\n\n### Adding/Editing Term Cards and Term Pages\n\n**📁 File: `client/src/data/businessTerms.ts`**\n\nThis is the most important file - it contains ALL business terms and categories.\n\n#### Adding a New Category:\n```typescript\n// Add to businessCategories object (around line 4)\n'your-new-category': {\n  name: 'Your Category Name',\n  description: 'Description of this category',\n  slug: 'your-new-category',\n  icon: '📊',  // Choose an emoji\n  color: 'from-green-500 to-emerald-600'  // Tailwind gradient\n}\n```\n\n#### Adding a New Business Term:\n```typescript\n// Add to businessTerms array (around line 100)\n{\n  id: 'your-term-id',\n  term: 'Your Business Term',\n  category: 'existing-category-slug',\n  icon: '💰',\n  businessDefinition: 'Professional business definition here',\n  simpleExplanation: 'Easy-to-understand explanation for beginners',\n  sharkTankExample: '\"Quote from a shark about this term\"',\n  sharkName: 'Shark Name',\n  realWorldExample: 'Real company example showing this term in action',\n  difficulty: 'beginner', // or 'intermediate' or 'advanced'\n  relatedTerms: ['term-id-1', 'term-id-2'], // Optional\n  metaTitle: 'SEO title for this term',\n  metaDescription: 'SEO description for this term'\n}\n```\n\n#### Editing Existing Terms:\n- Find the term by searching for its `id` or `term` name\n- Modify any field you want to change\n- The changes will automatically appear on both term cards and detail pages\n\n### Customizing How Terms Display\n\n**📁 File: `client/src/components/TermCard.tsx`**\n- Edit how terms appear in grid/list views\n- Modify card layout, colors, or information shown\n- Change category icons and colors\n\n**📁 File: `client/src/pages/TermDetail.tsx`**\n- Edit how individual term pages look\n- Modify the detailed view layout\n- Add/remove sections from term pages\n\n## 📰 Editing Blog Content\n\n### Adding/Editing Blog Posts\n\n**📁 File: `client/src/data/detailedBlogPosts.ts`**\n\n#### Adding a New Blog Post:\n```typescript\n// Add to detailedBlogPosts array\n{\n  id: 'unique-blog-id',\n  title: 'Your Blog Post Title',\n  excerpt: 'Short description that appears in blog cards',\n  date: 'Jan 15, 2024',\n  category: 'Analysis', // or 'Case Study', 'Guide', etc.\n  image: 'https://images.unsplash.com/photo-...', // Featured image URL\n  categoryColor: 'bg-shark-blue/10 text-shark-blue',\n  author: 'Author Name',\n  readTime: '8 min read',\n  tags: ['Tag1', 'Tag2', 'Tag3'],\n  content: `Your full blog post content here.\n  \n  **Use Markdown formatting:**\n  - Bold text with **text**\n  - Lists like this\n  - Headers with ## Header Name\n  \n  You can write multiple paragraphs and include examples.`\n}\n```\n\n#### Editing Existing Blog Posts:\n- Find the post by its `id` or `title`\n- Modify any field including the full `content`\n- Blog content supports Markdown formatting\n\n### Customizing Blog Display\n\n**📁 File: `client/src/components/BlogSection.tsx`**\n- Edit how blog posts appear on the homepage\n- Modify blog card layout and styling\n\n**📁 File: `client/src/pages/BlogDetail.tsx`**\n- Edit individual blog post page layout\n- Modify how blog content is displayed\n\n## 🧠 Editing Quiz Content\n\n### Adding/Editing Quiz Questions\n\n**📁 File: `client/src/data/quizData.ts`**\n\n#### Adding a New Quiz Question:\n```typescript\n// Add to quizQuestions array\n{\n  id: 'q99', // Unique ID\n  question: 'Your quiz question here?',\n  options: ['Option A', 'Option B', 'Option C', 'Option D'],\n  correctAnswer: 1, // Index of correct option (0, 1, 2, or 3)\n  explanation: 'Explain why this answer is correct',\n  hint: 'Helpful hint for users',\n  relatedTerm: 'business-term-id' // Optional: link to a business term\n}\n```\n\n#### Editing Existing Questions:\n- Find question by `id` or search the question text\n- Modify question, options, or explanation\n- Change the `correctAnswer` index if needed\n\n### Customizing Quiz Display\n\n**📁 File: `client/src/components/QuizSection.tsx`**\n- Edit quiz interface and styling\n- Modify how questions and results appear\n\n## 🎯 Editing Learning Paths\n\n**📁 File: `client/src/data/detailedLearningPaths.ts`**\n\nThis file contains structured learning paths that group related terms together.\n\n#### Adding a New Learning Path:\n```typescript\n{\n  id: 'path-id',\n  title: 'Learning Path Title',\n  description: 'What this path teaches',\n  duration: '2 hours',\n  difficulty: 'beginner',\n  modules: [\n    {\n      id: 'module-1',\n      title: 'Module Title',\n      description: 'Module description',\n      terms: ['term-id-1', 'term-id-2'],\n      duration: '30 min'\n    }\n  ]\n}\n```\n\n## 🎨 Editing Visual Appearance\n\n### Colors and Styling\n\n**📁 File: `client/src/components/TermCard.tsx`**\n- Edit `categoryColors` object (lines 16-22) to change category colors\n- Modify `categoryIcons` object (lines 8-14) to change category icons\n\n**📁 File: `client/src/pages/TermDetail.tsx`**\n- Edit `categoryIcons` object (lines 10-28) for detail page icons\n\n### Global Styling\n\n**📁 File: `client/src/index.css`**\n- Global CSS styles and custom color definitions\n\n**📁 File: `tailwind.config.ts`**\n- Tailwind CSS configuration and custom theme settings\n\n## 🏠 Editing Homepage Sections\n\n**📁 File: `client/src/pages/Home.tsx`**\n- Edit homepage layout and sections\n- Add/remove components from homepage\n\n**📁 File: `client/src/components/Hero.tsx`**\n- Edit hero section content and messaging\n\n**📁 File: `client/src/components/GlossarySection.tsx`**\n- Edit main glossary section display\n\n## 🧭 Editing Navigation\n\n**📁 File: `client/src/components/Navigation.tsx`**\n- Edit main navigation menu\n- Add/remove navigation links\n- Modify navigation styling\n\n**📁 File: `client/src/components/Footer.tsx`**\n- Edit footer content and links\n\n## 📱 Adding New Data Types\n\nIf you want to add completely new types of content:\n\n1. **Define Types**: Edit `client/src/types/index.ts` to add new TypeScript interfaces\n2. **Create Data Files**: Add new files in `client/src/data/` for your content\n3. **Create Components**: Add new components in `client/src/components/` to display the content\n4. **Add Pages**: Create new pages in `client/src/pages/` if needed\n5. **Update Navigation**: Add links in `Navigation.tsx`\n\n## 🚀 Quick Content Updates\n\n### Most Common Edits:\n\n1. **Add a new business term**: Edit `businessTerms.ts` → Add new object to array\n2. **Update term definition**: Edit `businessTerms.ts` → Find term → Change fields\n3. **Add new blog post**: Edit `detailedBlogPosts.ts` → Add new object to array\n4. **Add quiz question**: Edit `quizData.ts` → Add new question object\n5. **Change category**: Edit `businessTerms.ts` → Modify `businessCategories` object\n\n### After Making Changes:\n\n1. Save the file\n2. The website will automatically reload with your changes\n3. Check that everything looks correct\n4. Test any new content you added\n\n## 💡 Pro Tips:\n\n- **Always use unique IDs** for new terms, blog posts, and quiz questions\n- **Test your changes** by navigating to the affected pages\n- **Keep consistent formatting** when adding new content\n- **Use meaningful category slugs** (lowercase, hyphenated)\n- **Include SEO metadata** (`metaTitle`, `metaDescription`) for better search rankings\n- **Backup your data files** before making major changes\n\n## 🆘 Troubleshooting:\n\n- **Website won't load after changes**: Check the browser console for errors\n- **TypeScript errors**: Make sure your data matches the type definitions in `types/index.ts`\n- **Images not showing**: Verify image URLs are working and accessible\n- **Content not updating**: Make sure you saved the file and refresh the page\n\nThis guide covers all the major content editing scenarios. The beauty of this structure is that most content changes only require editing the data files in the `client/src/data/` folder!","size_bytes":9148},"client/src/pages/About.tsx":{"content":"import Navigation from '@/components/Navigation';\nimport Footer from '@/components/Footer';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Users, Target, Heart, Globe } from 'lucide-react';\n\nexport default function About() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      \n      <main className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl md:text-5xl font-serif font-bold text-shark-navy mb-6\">\n            About <span className=\"text-shark-gold\">Shark Tank Lingo</span>\n          </h1>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Demystifying business terminology for aspiring entrepreneurs and curious learners worldwide\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 gap-8 mb-12\">\n          <Card className=\"bg-white shadow-xl\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-3 text-shark-navy\">\n                <Target className=\"h-6 w-6 text-shark-blue\" />\n                Our Mission\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-gray-700 leading-relaxed\">\n                To make complex business terminology accessible to everyone by providing simple, \n                clear explanations backed by real-world examples from Shark Tank India and beyond.\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-white shadow-xl\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-3 text-shark-navy\">\n                <Heart className=\"h-6 w-6 text-shark-blue\" />\n                Our Vision\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-gray-700 leading-relaxed\">\n                To become the go-to resource for entrepreneurs and business enthusiasts to \n                understand startup terminology without the jargon, fostering a more inclusive business ecosystem.\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n\n        <Card className=\"bg-gradient-to-br from-shark-blue to-shark-teal text-white mb-12\">\n          <CardContent className=\"p-8\">\n            <h2 className=\"text-3xl font-serif font-bold mb-6 text-center\">What We Offer</h2>\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              <div className=\"text-center\">\n                <Globe className=\"h-12 w-12 mx-auto mb-4\" />\n                <h3 className=\"text-xl font-semibold mb-2\">Real Examples</h3>\n                <p className=\"text-gray-100\">\n                  Learn from actual Shark Tank India pitches and real-world business scenarios\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <Users className=\"h-12 w-12 mx-auto mb-4\" />\n                <h3 className=\"text-xl font-semibold mb-2\">Simple Language</h3>\n                <p className=\"text-gray-100\">\n                  Complex terms explained in everyday language that anyone can understand\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <Target className=\"h-12 w-12 mx-auto mb-4\" />\n                <h3 className=\"text-xl font-semibold mb-2\">Interactive Learning</h3>\n                <p className=\"text-gray-100\">\n                  Engage with quizzes and interactive content to test your knowledge\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-white shadow-xl\">\n          <CardHeader>\n            <CardTitle className=\"text-shark-navy text-center\">Our Story</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-gray-700 leading-relaxed mb-4\">\n              Shark Tank Lingo was born from a simple observation: business terminology often creates \n              barriers instead of building bridges. While watching Shark Tank India, we noticed how \n              many viewers struggled to understand the business concepts being discussed.\n            </p>\n            <p className=\"text-gray-700 leading-relaxed mb-4\">\n              We realized there was a need for a platform that could translate complex business jargon \n              into simple, relatable language. Our goal is to democratize business knowledge and make \n              entrepreneurship more accessible to everyone, regardless of their educational background.\n            </p>\n            <p className=\"text-gray-700 leading-relaxed\">\n              Today, Shark Tank Lingo serves thousands of aspiring entrepreneurs, students, and curious \n              learners who want to understand the language of business without getting lost in complicated terminology.\n            </p>\n          </CardContent>\n        </Card>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":5002},"client/src/pages/Contact.tsx":{"content":"import Navigation from '@/components/Navigation';\nimport Footer from '@/components/Footer';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Mail, MessageSquare, Phone, MapPin, Send } from 'lucide-react';\nimport { useState } from 'react';\n\nexport default function Contact() {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Handle form submission here\n    console.log('Form submitted:', formData);\n    // Reset form\n    setFormData({ name: '', email: '', subject: '', message: '' });\n    alert('Thank you for your message! We\\'ll get back to you soon.');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      \n      <main className=\"container mx-auto px-4 py-8 max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl md:text-5xl font-serif font-bold text-shark-navy mb-6\">\n            Get in <span className=\"text-shark-gold\">Touch</span>\n          </h1>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Have questions about business terms? Want to suggest new content? We'd love to hear from you!\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 gap-12\">\n          {/* Contact Form */}\n          <Card className=\"bg-white shadow-xl\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-3 text-shark-navy\">\n                <MessageSquare className=\"h-6 w-6 text-shark-blue\" />\n                Send us a Message\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Full Name\n                  </label>\n                  <Input\n                    type=\"text\"\n                    value={formData.name}\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                    placeholder=\"Your full name\"\n                    required\n                    data-testid=\"contact-name\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Email Address\n                  </label>\n                  <Input\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                    placeholder=\"your.email@example.com\"\n                    required\n                    data-testid=\"contact-email\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Subject\n                  </label>\n                  <Input\n                    type=\"text\"\n                    value={formData.subject}\n                    onChange={(e) => setFormData({ ...formData, subject: e.target.value })}\n                    placeholder=\"What's this about?\"\n                    required\n                    data-testid=\"contact-subject\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Message\n                  </label>\n                  <Textarea\n                    value={formData.message}\n                    onChange={(e) => setFormData({ ...formData, message: e.target.value })}\n                    placeholder=\"Tell us more about your question or suggestion...\"\n                    rows={5}\n                    required\n                    data-testid=\"contact-message\"\n                  />\n                </div>\n                \n                <Button \n                  type=\"submit\" \n                  className=\"w-full bg-shark-blue hover:bg-shark-teal text-white\"\n                  data-testid=\"contact-submit\"\n                >\n                  <Send className=\"mr-2 h-4 w-4\" />\n                  Send Message\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n\n          {/* Contact Information */}\n          <div className=\"space-y-6\">\n            <Card className=\"bg-gradient-to-br from-shark-blue to-shark-teal text-white\">\n              <CardContent className=\"p-8\">\n                <h2 className=\"text-2xl font-serif font-bold mb-6\">Contact Information</h2>\n                <div className=\"space-y-6\">\n                  <div className=\"flex items-start gap-4\">\n                    <Mail className=\"h-6 w-6 mt-1 flex-shrink-0\" />\n                    <div>\n                      <h3 className=\"font-semibold mb-1\">Email</h3>\n                      <p className=\"text-gray-100\">hello@sharktanklingo.com</p>\n                      <p className=\"text-gray-100 text-sm\">We'll respond within 24 hours</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start gap-4\">\n                    <Phone className=\"h-6 w-6 mt-1 flex-shrink-0\" />\n                    <div>\n                      <h3 className=\"font-semibold mb-1\">Phone</h3>\n                      <p className=\"text-gray-100\">+91 89895 30341</p>\n                      <p className=\"text-gray-100 text-sm\">Monday - Friday, 9 AM - 6 PM IST</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start gap-4\">\n                    <MapPin className=\"h-6 w-6 mt-1 flex-shrink-0\" />\n                    <div>\n                      <h3 className=\"font-semibold mb-1\">Location</h3>\n                      <p className=\"text-gray-100\">Mumbai, India</p>\n                      <p className=\"text-gray-100 text-sm\">Supporting entrepreneurs across India</p>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-white shadow-xl\">\n              <CardHeader>\n                <CardTitle className=\"text-shark-navy\">Frequently Asked</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div>\n                    <h3 className=\"font-semibold text-gray-800 mb-2\">How can I suggest new terms?</h3>\n                    <p className=\"text-gray-600 text-sm\">\n                      Send us an email with the business term you'd like us to explain, and we'll add it to our content roadmap.\n                    </p>\n                  </div>\n                  \n                  <div>\n                    <h3 className=\"font-semibold text-gray-800 mb-2\">Can I contribute content?</h3>\n                    <p className=\"text-gray-600 text-sm\">\n                      We welcome contributions from business experts and entrepreneurs. Contact us to discuss collaboration opportunities.\n                    </p>\n                  </div>\n                  \n                  <div>\n                    <h3 className=\"font-semibold text-gray-800 mb-2\">Partnership inquiries?</h3>\n                    <p className=\"text-gray-600 text-sm\">\n                      For business partnerships, sponsorships, or educational collaborations, please reach out via email.\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":7874},"client/src/pages/Privacy.tsx":{"content":"import Navigation from '@/components/Navigation';\nimport Footer from '@/components/Footer';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Shield, Eye, Lock, UserCheck } from 'lucide-react';\n\nexport default function Privacy() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      \n      <main className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl md:text-5xl font-serif font-bold text-shark-navy mb-6\">\n            Privacy <span className=\"text-shark-gold\">Policy</span>\n          </h1>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Your privacy is important to us. Learn how we collect, use, and protect your information.\n          </p>\n          <p className=\"text-sm text-gray-500 mt-4\">Last updated: December 2024</p>\n        </div>\n\n        <div className=\"space-y-8\">\n          <Card className=\"bg-white shadow-xl\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-3 text-shark-navy\">\n                <Shield className=\"h-6 w-6 text-shark-blue\" />\n                Information We Collect\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div>\n                <h3 className=\"font-semibold text-gray-800 mb-2\">Usage Data</h3>\n                <p className=\"text-gray-700\">\n                  We collect information about how you interact with our website, including pages visited, \n                  time spent on pages, and navigation patterns. This helps us improve our content and user experience.\n                </p>\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-gray-800 mb-2\">Device Information</h3>\n                <p className=\"text-gray-700\">\n                  We may collect information about your device, including IP address, browser type, \n                  operating system, and device identifiers for analytics purposes.\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-white shadow-xl\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-3 text-shark-navy\">\n                <Eye className=\"h-6 w-6 text-shark-blue\" />\n                How We Use Your Information\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <ul className=\"space-y-3 text-gray-700\">\n                <li className=\"flex items-start gap-2\">\n                  <div className=\"w-2 h-2 bg-shark-blue rounded-full mt-2 flex-shrink-0\"></div>\n                  <span>To provide and maintain our educational content and services</span>\n                </li>\n                <li className=\"flex items-start gap-2\">\n                  <div className=\"w-2 h-2 bg-shark-blue rounded-full mt-2 flex-shrink-0\"></div>\n                  <span>To analyze usage patterns and improve our website functionality</span>\n                </li>\n                <li className=\"flex items-start gap-2\">\n                  <div className=\"w-2 h-2 bg-shark-blue rounded-full mt-2 flex-shrink-0\"></div>\n                  <span>To personalize your learning experience and content recommendations</span>\n                </li>\n                <li className=\"flex items-start gap-2\">\n                  <div className=\"w-2 h-2 bg-shark-blue rounded-full mt-2 flex-shrink-0\"></div>\n                  <span>To ensure the security and proper functioning of our services</span>\n                </li>\n              </ul>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-white shadow-xl\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-3 text-shark-navy\">\n                <Lock className=\"h-6 w-6 text-shark-blue\" />\n                Data Protection\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <p className=\"text-gray-700\">\n                We implement appropriate security measures to protect your personal information against \n                unauthorized access, alteration, disclosure, or destruction. However, no method of \n                transmission over the internet is 100% secure.\n              </p>\n              <div>\n                <h3 className=\"font-semibold text-gray-800 mb-2\">Cookies and Tracking</h3>\n                <p className=\"text-gray-700\">\n                  We use cookies and similar tracking technologies to enhance your browsing experience \n                  and analyze website traffic. You can control cookie settings through your browser preferences.\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-white shadow-xl\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-3 text-shark-navy\">\n                <UserCheck className=\"h-6 w-6 text-shark-blue\" />\n                Your Rights\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-gray-700 mb-4\">You have the right to:</p>\n              <ul className=\"space-y-2 text-gray-700\">\n                <li>• Access the personal information we hold about you</li>\n                <li>• Request correction of inaccurate personal information</li>\n                <li>• Request deletion of your personal information</li>\n                <li>• Object to the processing of your personal information</li>\n                <li>• Request data portability</li>\n              </ul>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-gradient-to-br from-shark-blue to-shark-teal text-white\">\n            <CardContent className=\"p-6\">\n              <h3 className=\"text-xl font-semibold mb-4\">Contact Us</h3>\n              <p className=\"text-gray-100\">\n                If you have any questions about this Privacy Policy or our data practices, \n                please contact us through our Contact page or email us at privacy@sharktanklingo.com\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":6283},"client/src/pages/Terms.tsx":{"content":"import Navigation from '@/components/Navigation';\nimport Footer from '@/components/Footer';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { FileText, AlertTriangle, Scale, Users } from 'lucide-react';\n\nexport default function Terms() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      \n      <main className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl md:text-5xl font-serif font-bold text-shark-navy mb-6\">\n            Terms of <span className=\"text-shark-gold\">Service</span>\n          </h1>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Please read these terms and conditions carefully before using our service.\n          </p>\n          <p className=\"text-sm text-gray-500 mt-4\">Last updated: December 2024</p>\n        </div>\n\n        <div className=\"space-y-8\">\n          <Card className=\"bg-white shadow-xl\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-3 text-shark-navy\">\n                <FileText className=\"h-6 w-6 text-shark-blue\" />\n                Acceptance of Terms\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-gray-700 leading-relaxed\">\n                By accessing and using Shark Tank Lingo, you accept and agree to be bound by the terms \n                and provision of this agreement. If you do not agree to abide by the above, please do \n                not use this service.\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-white shadow-xl\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-3 text-shark-navy\">\n                <Users className=\"h-6 w-6 text-shark-blue\" />\n                Use License\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <p className=\"text-gray-700\">\n                Permission is granted to temporarily access the materials on Shark Tank Lingo for \n                personal, non-commercial transitory viewing only. This is the grant of a license, not a \n                transfer of title, and under this license you may not:\n              </p>\n              <ul className=\"space-y-2 text-gray-700 ml-4\">\n                <li>• Modify or copy the materials</li>\n                <li>• Use the materials for any commercial purpose or for any public display</li>\n                <li>• Attempt to reverse engineer any software contained on the website</li>\n                <li>• Remove any copyright or other proprietary notations from the materials</li>\n              </ul>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-white shadow-xl\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-3 text-shark-navy\">\n                <AlertTriangle className=\"h-6 w-6 text-shark-blue\" />\n                Content Disclaimer\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <p className=\"text-gray-700\">\n                The materials on Shark Tank Lingo are provided on an 'as is' basis. Shark Tank Lingo \n                makes no warranties, expressed or implied, and hereby disclaims and negates all other \n                warranties including without limitation, implied warranties or conditions of merchantability, \n                fitness for a particular purpose, or non-infringement of intellectual property or other \n                violation of rights.\n              </p>\n              <div>\n                <h3 className=\"font-semibold text-gray-800 mb-2\">Educational Purpose</h3>\n                <p className=\"text-gray-700\">\n                  All content is provided for educational purposes only. Business examples and case studies \n                  are simplified for learning and may not reflect complete real-world complexities.\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-white shadow-xl\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-3 text-shark-navy\">\n                <Scale className=\"h-6 w-6 text-shark-blue\" />\n                Limitations\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <p className=\"text-gray-700\">\n                In no event shall Shark Tank Lingo or its suppliers be liable for any damages (including, \n                without limitation, damages for loss of data or profit, or due to business interruption) \n                arising out of the use or inability to use the materials on the website, even if \n                authorized representative has been notified orally or in writing of the possibility of such damage.\n              </p>\n              <div>\n                <h3 className=\"font-semibold text-gray-800 mb-2\">User Responsibility</h3>\n                <p className=\"text-gray-700\">\n                  Users are responsible for their own business decisions and should always consult \n                  with qualified professionals before making important business or investment decisions.\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-white shadow-xl\">\n            <CardHeader>\n              <CardTitle className=\"text-shark-navy\">Revisions and Errata</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-gray-700 leading-relaxed\">\n                The materials appearing on Shark Tank Lingo could include technical, typographical, or \n                photographic errors. We do not warrant that any of the materials are accurate, complete, \n                or current. We may make changes to the materials at any time without notice. We do not \n                commit to updating the materials.\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-gradient-to-br from-shark-blue to-shark-teal text-white\">\n            <CardContent className=\"p-6\">\n              <h3 className=\"text-xl font-semibold mb-4\">Contact Information</h3>\n              <p className=\"text-gray-100\">\n                If you have any questions about these Terms of Service, please contact us through \n                our Contact page or email us at legal@sharktanklingo.com\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":6678},"client/src/utils/formatting.tsx":{"content":"import React from 'react';\n\n// Enhanced formatting utility for consistent text rendering across the site\nexport function renderFormattedText(text: string, className: string = \"text-gray-700 text-base leading-relaxed\"): React.ReactElement {\n  const lines = text.split('\\\\n');\n  \n  return (\n    <div className=\"space-y-4\">\n      {lines.map((line, lineIndex) => {\n        if (!line.trim()) return <div key={lineIndex} className=\"h-3\" />;\n        \n        // Handle bold formatting **text**\n        const parts = line.split(/\\*\\*(.*?)\\*\\*/);\n        \n        return (\n          <p key={lineIndex} className={className}>\n            {parts.map((part, partIndex) => {\n              // Odd indices are the bold parts\n              if (partIndex % 2 === 1) {\n                return <strong key={partIndex} className=\"font-semibold text-gray-900\">{part}</strong>;\n              }\n              return part;\n            })}\n          </p>\n        );\n      })}\n    </div>\n  );\n}\n\n// Enhanced blog content formatting with proper paragraphs and visual hierarchy\nexport function renderBlogContent(content: string): React.ReactElement {\n  // Split content by double newlines to get actual paragraphs\n  const paragraphs = content.split('\\n\\n').filter(p => p.trim());\n  \n  return (\n    <div className=\"prose prose-lg max-w-none\">\n      {paragraphs.map((paragraph, index) => {\n        const trimmedParagraph = paragraph.trim();\n        if (!trimmedParagraph) return null;\n        \n        // Check if this is a numbered header (e.g., \"**1. Valuation: The Foundation of Every Deal**\")\n        if (trimmedParagraph.match(/^\\*\\*\\d+\\./)) {\n          const headerText = trimmedParagraph.replace(/\\*\\*/g, '');\n          \n          // Check if we're in a \"Key Takeaways\" section by looking for the header in previous paragraphs\n          const keyTakeawaysIndex = paragraphs.findIndex(p => p.includes('Key Takeaways for Entrepreneurs'));\n          const isInKeyTakeaways = keyTakeawaysIndex !== -1 && index > keyTakeawaysIndex;\n          \n          if (isInKeyTakeaways) {\n            // Style as smaller text for takeaway points with bold formatting\n            const parts = headerText.split(/\\*\\*(.*?)\\*\\*/);\n            return (\n              <p key={index} className=\"text-gray-700 text-lg leading-relaxed mb-4 mt-4 font-bold\">\n                {parts.map((part, partIndex) => {\n                  if (partIndex % 2 === 1) {\n                    return (\n                      <strong key={partIndex} className=\"font-bold text-shark-navy\">\n                        {part}\n                      </strong>\n                    );\n                  }\n                  return part;\n                })}\n              </p>\n            );\n          }\n          \n          // Regular numbered headers (for main sections)\n          return (\n            <h2 key={index} className=\"text-2xl font-serif font-bold text-shark-navy mt-12 mb-6 pb-3 border-b-2 border-shark-gold\">\n              {headerText}\n            </h2>\n          );\n        }\n        \n        // Check if this is a main header (e.g., \"**Real-World Example: The Jugaad Patches Success Story**\")\n        if (trimmedParagraph.startsWith('**') && trimmedParagraph.endsWith('**') && trimmedParagraph.includes(':')) {\n          const headerText = trimmedParagraph.replace(/\\*\\*/g, '');\n          return (\n            <h3 key={index} className=\"text-xl font-semibold text-shark-blue mt-8 mb-4\">\n              {headerText}\n            </h3>\n          );\n        }\n        \n        // Check if this is a simple header without colon\n        if (trimmedParagraph.startsWith('**') && trimmedParagraph.endsWith('**') && !trimmedParagraph.includes(':')) {\n          const headerText = trimmedParagraph.replace(/\\*\\*/g, '');\n          return (\n            <h3 key={index} className=\"text-lg font-semibold text-shark-navy mt-6 mb-3\">\n              {headerText}\n            </h3>\n          );\n        }\n        \n        // Handle lists - check if paragraph contains multiple list items\n        if (trimmedParagraph.includes('\\n- ')) {\n          const listItems = trimmedParagraph.split('\\n').filter(line => line.trim().startsWith('- '));\n          return (\n            <ul key={index} className=\"my-6 space-y-2\">\n              {listItems.map((item, itemIndex) => {\n                const listContent = item.substring(2); // Remove \"- \"\n                const parts = listContent.split(/\\*\\*(.*?)\\*\\*/);\n                \n                return (\n                  <li key={itemIndex} className=\"text-gray-700 leading-relaxed list-disc ml-6 marker:text-shark-blue\">\n                    {parts.map((part, partIndex) => {\n                      if (partIndex % 2 === 1) {\n                        // Check if it's a metric/company name\n                        const isHighlight = /[\\d₹%]/.test(part) || ['Mahindra', 'Tata Motors', 'Bajaj Auto', 'Zomato', 'Paytm', 'Flipkart'].some(company => part.includes(company));\n                        return (\n                          <strong \n                            key={partIndex} \n                            className={`font-semibold ${isHighlight ? 'text-shark-navy bg-shark-gold/20 px-1 rounded' : 'text-shark-navy'}`}\n                          >\n                            {part}\n                          </strong>\n                        );\n                      }\n                      return part;\n                    })}\n                  </li>\n                );\n              })}\n            </ul>\n          );\n        }\n        \n        // Regular paragraph - handle bold text and create proper spacing\n        const parts = trimmedParagraph.split(/\\*\\*(.*?)\\*\\*/);\n        \n        return (\n          <p key={index} className=\"text-gray-700 text-lg leading-relaxed mb-6\">\n            {parts.map((part, partIndex) => {\n              if (partIndex % 2 === 1) {\n                // Enhanced highlighting for different types of content\n                const isMetric = /[\\d₹%]/.test(part);\n                const isCompany = ['Zomato', 'Paytm', 'Flipkart', 'Jugaad Patches', 'Mahindra', 'Tata Motors', 'Bajaj Auto'].some(company => part.includes(company));\n                const isTerm = ['CAC', 'CLV', 'TAM', 'Valuation', 'Unit Economics'].some(term => part.includes(term));\n                \n                let className = 'font-semibold text-shark-navy';\n                \n                if (isMetric) {\n                  className = 'font-bold text-shark-navy bg-shark-gold/25 px-2 py-0.5 rounded-md';\n                } else if (isCompany) {\n                  className = 'font-semibold text-shark-blue bg-blue-50 px-1 rounded';\n                } else if (isTerm) {\n                  className = 'font-bold text-shark-navy';\n                }\n                \n                return (\n                  <strong key={partIndex} className={className}>\n                    {part}\n                  </strong>\n                );\n              }\n              return part;\n            })}\n          </p>\n        );\n      })}\n    </div>\n  );\n}","size_bytes":7008},"client/src/pages/Quiz.tsx":{"content":"import { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Progress } from '@/components/ui/progress';\nimport { Badge } from '@/components/ui/badge';\nimport { Lightbulb, Trophy, RefreshCw, ArrowLeft } from 'lucide-react';\nimport { Link } from 'wouter';\nimport { useQuiz } from '@/hooks/useQuiz';\nimport { quizQuestions } from '@/data/quizData';\nimport Navigation from '@/components/Navigation';\nimport Footer from '@/components/Footer';\n\nexport default function Quiz() {\n  const {\n    quizState,\n    currentQuestion,\n    selectedAnswer,\n    showExplanation,\n    progressPercentage,\n    selectAnswer,\n    nextQuestion,\n    startNextBatch,\n    resetQuiz,\n    remainingQuestions,\n    canStartNextBatch,\n    questionsPerBatch\n  } = useQuiz(quizQuestions);\n\n  // Final results screen (after all batches)\n  if (quizState.showResults) {\n    const accuracyPercentage = quizState.totalQuestionsAnswered > 0 \n      ? Math.round((quizState.totalCorrectAnswers / quizState.totalQuestionsAnswered) * 100)\n      : 0;\n    \n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Navigation />\n        <main className=\"gradient-hero py-16 px-4 sm:px-6 lg:px-8\">\n          <div className=\"max-w-4xl mx-auto\">\n            <Card className=\"bg-white rounded-3xl shadow-2xl\">\n              <CardContent className=\"p-8 text-center\">\n                <Trophy className=\"mx-auto text-shark-gold mb-4\" size={64} />\n                <h1 className=\"text-2xl font-serif font-bold text-shark-navy mb-4\">Quiz Session Complete!</h1>\n                <div className=\"mb-6 space-y-3\">\n                  <p className=\"text-xl text-gray-600\">\n                    <span className=\"text-shark-blue font-bold\">{quizState.totalCorrectAnswers} out of {quizState.totalQuestionsAnswered}</span> questions correct\n                  </p>\n                  <p className=\"text-lg text-gray-600\">\n                    Overall Accuracy: <span className=\"text-shark-blue font-bold\">{accuracyPercentage}%</span>\n                  </p>\n                  <p className=\"text-sm text-gray-500\">\n                    Completed {quizState.currentBatch - 1} batch{quizState.currentBatch > 2 ? 'es' : ''} • {remainingQuestions} questions remaining\n                  </p>\n                </div>\n                <div className=\"flex justify-center gap-4\">\n                  <Button\n                    onClick={resetQuiz}\n                    className=\"bg-shark-blue hover:bg-shark-teal text-white px-6 py-3 rounded-full font-semibold transition-colors\"\n                    data-testid=\"retake-quiz\"\n                  >\n                    Start New Quiz Session\n                  </Button>\n                  <Link href=\"/glossary\">\n                    <Button\n                      variant=\"outline\"\n                      className=\"border-2 border-shark-blue text-shark-blue hover:bg-shark-blue hover:text-white px-6 py-3 rounded-full font-semibold transition-colors\"\n                      data-testid=\"learn-more-terms\"\n                    >\n                      Learn More Terms\n                    </Button>\n                  </Link>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n\n  // Batch completion screen\n  if (quizState.showBatchResults) {\n    const batchAccuracy = Math.round((quizState.batchScore / questionsPerBatch) * 100);\n    const overallAccuracy = quizState.totalQuestionsAnswered > 0 \n      ? Math.round((quizState.totalCorrectAnswers / quizState.totalQuestionsAnswered) * 100)\n      : 0;\n    \n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Navigation />\n        <main className=\"gradient-hero py-16 px-4 sm:px-6 lg:px-8\">\n          <div className=\"max-w-4xl mx-auto\">\n            <Card className=\"bg-white rounded-3xl shadow-2xl\">\n              <CardContent className=\"p-8 text-center\">\n                <div className=\"mb-6\">\n                  <div className=\"inline-flex items-center justify-center w-16 h-16 bg-shark-blue/10 rounded-full mb-4\">\n                    <Trophy className=\"text-shark-blue\" size={32} />\n                  </div>\n                  <h1 className=\"text-2xl font-serif font-bold text-shark-navy mb-2\">\n                    Batch {quizState.currentBatch} Complete!\n                  </h1>\n                  <p className=\"text-gray-600\">Great job! Here's how you performed:</p>\n                </div>\n\n                <div className=\"grid md:grid-cols-2 gap-6 mb-8\">\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\n                    <h2 className=\"text-lg font-semibold text-shark-navy mb-2\">This Batch</h2>\n                    <p className=\"text-2xl font-bold text-shark-blue mb-1\">{quizState.batchScore}/{questionsPerBatch}</p>\n                    <p className=\"text-sm text-gray-600\">{batchAccuracy}% accuracy</p>\n                  </div>\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\n                    <h2 className=\"text-lg font-semibold text-shark-navy mb-2\">Overall</h2>\n                    <p className=\"text-2xl font-bold text-shark-blue mb-1\">{quizState.totalCorrectAnswers}/{quizState.totalQuestionsAnswered}</p>\n                    <p className=\"text-sm text-gray-600\">{overallAccuracy}% accuracy</p>\n                  </div>\n                </div>\n\n                <div className=\"mb-6\">\n                  <p className=\"text-sm text-gray-500 mb-4\">\n                    {remainingQuestions} questions remaining in the question bank\n                  </p>\n                  <div className=\"flex justify-center gap-4\">\n                    {canStartNextBatch ? (\n                      <Button\n                        onClick={startNextBatch}\n                        className=\"bg-shark-blue hover:bg-shark-teal text-white px-8 py-3 rounded-full font-semibold transition-colors\"\n                        data-testid=\"next-batch\"\n                      >\n                        Continue to Batch {quizState.currentBatch + 1}\n                      </Button>\n                    ) : (\n                      <p className=\"text-shark-navy font-medium\">Not enough questions for another full batch</p>\n                    )}\n                    <Button\n                      onClick={resetQuiz}\n                      variant=\"outline\"\n                      className=\"border-2 border-shark-blue text-shark-blue hover:bg-shark-blue hover:text-white px-8 py-3 rounded-full font-semibold transition-colors\"\n                      data-testid=\"end-quiz\"\n                    >\n                      End Quiz Session\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      \n      <main className=\"gradient-hero py-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          {/* Back button */}\n          <div className=\"mb-8\">\n            <Link href=\"/\">\n              <Button variant=\"ghost\" className=\"text-white hover:bg-white/20 mb-4\">\n                <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                Back to Home\n              </Button>\n            </Link>\n          </div>\n\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-3xl md:text-4xl font-serif font-bold text-white mb-4\">\n              Shark Tank Quiz\n            </h1>\n            <p className=\"text-xl text-gray-100\">\n              Test your understanding of business terminology\n            </p>\n          </div>\n\n          <Card className=\"bg-white rounded-3xl shadow-2xl\">\n            <CardContent className=\"p-8\">\n              {/* Progress Bar */}\n              <div className=\"mb-8\">\n                <div className=\"flex justify-between text-sm text-gray-600 mb-2\">\n                  <span>Batch {quizState.currentBatch} • Question {quizState.currentQuestion + 1} of {questionsPerBatch}</span>\n                  <span>\n                    <span className=\"font-semibold\">{quizState.batchScore}</span>/{questionsPerBatch} correct this batch\n                  </span>\n                </div>\n                <Progress value={progressPercentage} className=\"w-full h-2\" />\n                <div className=\"text-xs text-gray-500 mt-2 text-center\">\n                  Overall: {quizState.totalCorrectAnswers}/{quizState.totalQuestionsAnswered} correct • {remainingQuestions} questions remaining\n                </div>\n              </div>\n\n              {/* Quiz Question */}\n              <div className=\"mb-8\">\n                <h2 className=\"text-2xl font-serif font-bold text-shark-navy mb-6\">\n                  {currentQuestion.question}\n                </h2>\n                \n                <div className=\"space-y-4\">\n                  {currentQuestion.options.map((option, index) => {\n                    let buttonClass = \"quiz-option w-full p-4 text-left border-2 border-gray-200 rounded-lg transition-colors\";\n                    \n                    if (showExplanation) {\n                      if (index === currentQuestion.correctAnswer) {\n                        buttonClass += \" correct\";\n                      } else if (selectedAnswer === index && index !== currentQuestion.correctAnswer) {\n                        buttonClass += \" incorrect\";\n                      }\n                    } else if (selectedAnswer === index) {\n                      buttonClass += \" border-shark-cyan bg-shark-cyan/10\";\n                    }\n                    \n                    return (\n                      <button\n                        key={index}\n                        onClick={() => !showExplanation && selectAnswer(index)}\n                        className={buttonClass}\n                        disabled={showExplanation}\n                        data-testid={`quiz-option-${index}`}\n                      >\n                        {String.fromCharCode(65 + index)}. {option}\n                      </button>\n                    );\n                  })}\n                </div>\n              </div>\n\n              {/* Explanation */}\n              {showExplanation && (\n                <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n                  <h3 className=\"font-semibold text-gray-800 mb-2\">Explanation:</h3>\n                  <p className=\"text-gray-700\">{currentQuestion.explanation}</p>\n                </div>\n              )}\n\n              {/* Quiz Controls */}\n              <div className=\"flex justify-between items-center\">\n                <div className=\"text-sm text-gray-500 flex items-center\">\n                  <Lightbulb className=\"mr-2\" size={16} />\n                  <span>Hint: {currentQuestion.hint}</span>\n                </div>\n                <Button\n                  onClick={nextQuestion}\n                  disabled={selectedAnswer === null}\n                  className=\"bg-shark-blue hover:bg-shark-teal text-white px-6 py-3 rounded-full font-semibold transition-colors disabled:opacity-50\"\n                  data-testid=\"next-question\"\n                >\n                  {quizState.currentQuestion === questionsPerBatch - 1 ? 'Complete Batch' : 'Next Question'}\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n      \n      <Footer />\n    </div>\n  );\n}","size_bytes":11432}},"version":1}